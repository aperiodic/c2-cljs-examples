var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__9262 = x == null ? null : x;
  if(p[goog.typeOf(x__9262)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__9263__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__9263 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9263__delegate.call(this, array, i, idxs)
    };
    G__9263.cljs$lang$maxFixedArity = 2;
    G__9263.cljs$lang$applyTo = function(arglist__9264) {
      var array = cljs.core.first(arglist__9264);
      var i = cljs.core.first(cljs.core.next(arglist__9264));
      var idxs = cljs.core.rest(cljs.core.next(arglist__9264));
      return G__9263__delegate(array, i, idxs)
    };
    G__9263.cljs$lang$arity$variadic = G__9263__delegate;
    return G__9263
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____9349 = this$;
      if(and__3822__auto____9349) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____9349
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2359__auto____9350 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____9351 = cljs.core._invoke[goog.typeOf(x__2359__auto____9350)];
        if(or__3824__auto____9351) {
          return or__3824__auto____9351
        }else {
          var or__3824__auto____9352 = cljs.core._invoke["_"];
          if(or__3824__auto____9352) {
            return or__3824__auto____9352
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____9353 = this$;
      if(and__3822__auto____9353) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____9353
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2359__auto____9354 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____9355 = cljs.core._invoke[goog.typeOf(x__2359__auto____9354)];
        if(or__3824__auto____9355) {
          return or__3824__auto____9355
        }else {
          var or__3824__auto____9356 = cljs.core._invoke["_"];
          if(or__3824__auto____9356) {
            return or__3824__auto____9356
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____9357 = this$;
      if(and__3822__auto____9357) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____9357
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2359__auto____9358 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____9359 = cljs.core._invoke[goog.typeOf(x__2359__auto____9358)];
        if(or__3824__auto____9359) {
          return or__3824__auto____9359
        }else {
          var or__3824__auto____9360 = cljs.core._invoke["_"];
          if(or__3824__auto____9360) {
            return or__3824__auto____9360
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____9361 = this$;
      if(and__3822__auto____9361) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____9361
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2359__auto____9362 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____9363 = cljs.core._invoke[goog.typeOf(x__2359__auto____9362)];
        if(or__3824__auto____9363) {
          return or__3824__auto____9363
        }else {
          var or__3824__auto____9364 = cljs.core._invoke["_"];
          if(or__3824__auto____9364) {
            return or__3824__auto____9364
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____9365 = this$;
      if(and__3822__auto____9365) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____9365
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2359__auto____9366 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____9367 = cljs.core._invoke[goog.typeOf(x__2359__auto____9366)];
        if(or__3824__auto____9367) {
          return or__3824__auto____9367
        }else {
          var or__3824__auto____9368 = cljs.core._invoke["_"];
          if(or__3824__auto____9368) {
            return or__3824__auto____9368
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____9369 = this$;
      if(and__3822__auto____9369) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____9369
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2359__auto____9370 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____9371 = cljs.core._invoke[goog.typeOf(x__2359__auto____9370)];
        if(or__3824__auto____9371) {
          return or__3824__auto____9371
        }else {
          var or__3824__auto____9372 = cljs.core._invoke["_"];
          if(or__3824__auto____9372) {
            return or__3824__auto____9372
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____9373 = this$;
      if(and__3822__auto____9373) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____9373
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2359__auto____9374 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____9375 = cljs.core._invoke[goog.typeOf(x__2359__auto____9374)];
        if(or__3824__auto____9375) {
          return or__3824__auto____9375
        }else {
          var or__3824__auto____9376 = cljs.core._invoke["_"];
          if(or__3824__auto____9376) {
            return or__3824__auto____9376
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____9377 = this$;
      if(and__3822__auto____9377) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____9377
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2359__auto____9378 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____9379 = cljs.core._invoke[goog.typeOf(x__2359__auto____9378)];
        if(or__3824__auto____9379) {
          return or__3824__auto____9379
        }else {
          var or__3824__auto____9380 = cljs.core._invoke["_"];
          if(or__3824__auto____9380) {
            return or__3824__auto____9380
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____9381 = this$;
      if(and__3822__auto____9381) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____9381
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2359__auto____9382 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____9383 = cljs.core._invoke[goog.typeOf(x__2359__auto____9382)];
        if(or__3824__auto____9383) {
          return or__3824__auto____9383
        }else {
          var or__3824__auto____9384 = cljs.core._invoke["_"];
          if(or__3824__auto____9384) {
            return or__3824__auto____9384
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____9385 = this$;
      if(and__3822__auto____9385) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____9385
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2359__auto____9386 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____9387 = cljs.core._invoke[goog.typeOf(x__2359__auto____9386)];
        if(or__3824__auto____9387) {
          return or__3824__auto____9387
        }else {
          var or__3824__auto____9388 = cljs.core._invoke["_"];
          if(or__3824__auto____9388) {
            return or__3824__auto____9388
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____9389 = this$;
      if(and__3822__auto____9389) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____9389
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2359__auto____9390 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____9391 = cljs.core._invoke[goog.typeOf(x__2359__auto____9390)];
        if(or__3824__auto____9391) {
          return or__3824__auto____9391
        }else {
          var or__3824__auto____9392 = cljs.core._invoke["_"];
          if(or__3824__auto____9392) {
            return or__3824__auto____9392
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____9393 = this$;
      if(and__3822__auto____9393) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____9393
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2359__auto____9394 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____9395 = cljs.core._invoke[goog.typeOf(x__2359__auto____9394)];
        if(or__3824__auto____9395) {
          return or__3824__auto____9395
        }else {
          var or__3824__auto____9396 = cljs.core._invoke["_"];
          if(or__3824__auto____9396) {
            return or__3824__auto____9396
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____9397 = this$;
      if(and__3822__auto____9397) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____9397
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2359__auto____9398 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____9399 = cljs.core._invoke[goog.typeOf(x__2359__auto____9398)];
        if(or__3824__auto____9399) {
          return or__3824__auto____9399
        }else {
          var or__3824__auto____9400 = cljs.core._invoke["_"];
          if(or__3824__auto____9400) {
            return or__3824__auto____9400
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____9401 = this$;
      if(and__3822__auto____9401) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____9401
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2359__auto____9402 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____9403 = cljs.core._invoke[goog.typeOf(x__2359__auto____9402)];
        if(or__3824__auto____9403) {
          return or__3824__auto____9403
        }else {
          var or__3824__auto____9404 = cljs.core._invoke["_"];
          if(or__3824__auto____9404) {
            return or__3824__auto____9404
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____9405 = this$;
      if(and__3822__auto____9405) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____9405
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2359__auto____9406 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____9407 = cljs.core._invoke[goog.typeOf(x__2359__auto____9406)];
        if(or__3824__auto____9407) {
          return or__3824__auto____9407
        }else {
          var or__3824__auto____9408 = cljs.core._invoke["_"];
          if(or__3824__auto____9408) {
            return or__3824__auto____9408
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____9409 = this$;
      if(and__3822__auto____9409) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____9409
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2359__auto____9410 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____9411 = cljs.core._invoke[goog.typeOf(x__2359__auto____9410)];
        if(or__3824__auto____9411) {
          return or__3824__auto____9411
        }else {
          var or__3824__auto____9412 = cljs.core._invoke["_"];
          if(or__3824__auto____9412) {
            return or__3824__auto____9412
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____9413 = this$;
      if(and__3822__auto____9413) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____9413
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2359__auto____9414 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____9415 = cljs.core._invoke[goog.typeOf(x__2359__auto____9414)];
        if(or__3824__auto____9415) {
          return or__3824__auto____9415
        }else {
          var or__3824__auto____9416 = cljs.core._invoke["_"];
          if(or__3824__auto____9416) {
            return or__3824__auto____9416
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____9417 = this$;
      if(and__3822__auto____9417) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____9417
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2359__auto____9418 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____9419 = cljs.core._invoke[goog.typeOf(x__2359__auto____9418)];
        if(or__3824__auto____9419) {
          return or__3824__auto____9419
        }else {
          var or__3824__auto____9420 = cljs.core._invoke["_"];
          if(or__3824__auto____9420) {
            return or__3824__auto____9420
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____9421 = this$;
      if(and__3822__auto____9421) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____9421
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2359__auto____9422 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____9423 = cljs.core._invoke[goog.typeOf(x__2359__auto____9422)];
        if(or__3824__auto____9423) {
          return or__3824__auto____9423
        }else {
          var or__3824__auto____9424 = cljs.core._invoke["_"];
          if(or__3824__auto____9424) {
            return or__3824__auto____9424
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____9425 = this$;
      if(and__3822__auto____9425) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____9425
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2359__auto____9426 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____9427 = cljs.core._invoke[goog.typeOf(x__2359__auto____9426)];
        if(or__3824__auto____9427) {
          return or__3824__auto____9427
        }else {
          var or__3824__auto____9428 = cljs.core._invoke["_"];
          if(or__3824__auto____9428) {
            return or__3824__auto____9428
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____9429 = this$;
      if(and__3822__auto____9429) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____9429
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2359__auto____9430 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____9431 = cljs.core._invoke[goog.typeOf(x__2359__auto____9430)];
        if(or__3824__auto____9431) {
          return or__3824__auto____9431
        }else {
          var or__3824__auto____9432 = cljs.core._invoke["_"];
          if(or__3824__auto____9432) {
            return or__3824__auto____9432
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____9437 = coll;
    if(and__3822__auto____9437) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____9437
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2359__auto____9438 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9439 = cljs.core._count[goog.typeOf(x__2359__auto____9438)];
      if(or__3824__auto____9439) {
        return or__3824__auto____9439
      }else {
        var or__3824__auto____9440 = cljs.core._count["_"];
        if(or__3824__auto____9440) {
          return or__3824__auto____9440
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____9445 = coll;
    if(and__3822__auto____9445) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____9445
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2359__auto____9446 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9447 = cljs.core._empty[goog.typeOf(x__2359__auto____9446)];
      if(or__3824__auto____9447) {
        return or__3824__auto____9447
      }else {
        var or__3824__auto____9448 = cljs.core._empty["_"];
        if(or__3824__auto____9448) {
          return or__3824__auto____9448
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____9453 = coll;
    if(and__3822__auto____9453) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____9453
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2359__auto____9454 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9455 = cljs.core._conj[goog.typeOf(x__2359__auto____9454)];
      if(or__3824__auto____9455) {
        return or__3824__auto____9455
      }else {
        var or__3824__auto____9456 = cljs.core._conj["_"];
        if(or__3824__auto____9456) {
          return or__3824__auto____9456
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____9465 = coll;
      if(and__3822__auto____9465) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____9465
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2359__auto____9466 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____9467 = cljs.core._nth[goog.typeOf(x__2359__auto____9466)];
        if(or__3824__auto____9467) {
          return or__3824__auto____9467
        }else {
          var or__3824__auto____9468 = cljs.core._nth["_"];
          if(or__3824__auto____9468) {
            return or__3824__auto____9468
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____9469 = coll;
      if(and__3822__auto____9469) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____9469
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2359__auto____9470 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____9471 = cljs.core._nth[goog.typeOf(x__2359__auto____9470)];
        if(or__3824__auto____9471) {
          return or__3824__auto____9471
        }else {
          var or__3824__auto____9472 = cljs.core._nth["_"];
          if(or__3824__auto____9472) {
            return or__3824__auto____9472
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____9477 = coll;
    if(and__3822__auto____9477) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____9477
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2359__auto____9478 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9479 = cljs.core._first[goog.typeOf(x__2359__auto____9478)];
      if(or__3824__auto____9479) {
        return or__3824__auto____9479
      }else {
        var or__3824__auto____9480 = cljs.core._first["_"];
        if(or__3824__auto____9480) {
          return or__3824__auto____9480
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____9485 = coll;
    if(and__3822__auto____9485) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____9485
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2359__auto____9486 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9487 = cljs.core._rest[goog.typeOf(x__2359__auto____9486)];
      if(or__3824__auto____9487) {
        return or__3824__auto____9487
      }else {
        var or__3824__auto____9488 = cljs.core._rest["_"];
        if(or__3824__auto____9488) {
          return or__3824__auto____9488
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____9493 = coll;
    if(and__3822__auto____9493) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____9493
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2359__auto____9494 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9495 = cljs.core._next[goog.typeOf(x__2359__auto____9494)];
      if(or__3824__auto____9495) {
        return or__3824__auto____9495
      }else {
        var or__3824__auto____9496 = cljs.core._next["_"];
        if(or__3824__auto____9496) {
          return or__3824__auto____9496
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____9505 = o;
      if(and__3822__auto____9505) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____9505
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2359__auto____9506 = o == null ? null : o;
      return function() {
        var or__3824__auto____9507 = cljs.core._lookup[goog.typeOf(x__2359__auto____9506)];
        if(or__3824__auto____9507) {
          return or__3824__auto____9507
        }else {
          var or__3824__auto____9508 = cljs.core._lookup["_"];
          if(or__3824__auto____9508) {
            return or__3824__auto____9508
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____9509 = o;
      if(and__3822__auto____9509) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____9509
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2359__auto____9510 = o == null ? null : o;
      return function() {
        var or__3824__auto____9511 = cljs.core._lookup[goog.typeOf(x__2359__auto____9510)];
        if(or__3824__auto____9511) {
          return or__3824__auto____9511
        }else {
          var or__3824__auto____9512 = cljs.core._lookup["_"];
          if(or__3824__auto____9512) {
            return or__3824__auto____9512
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____9517 = coll;
    if(and__3822__auto____9517) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____9517
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2359__auto____9518 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9519 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2359__auto____9518)];
      if(or__3824__auto____9519) {
        return or__3824__auto____9519
      }else {
        var or__3824__auto____9520 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____9520) {
          return or__3824__auto____9520
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____9525 = coll;
    if(and__3822__auto____9525) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____9525
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2359__auto____9526 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9527 = cljs.core._assoc[goog.typeOf(x__2359__auto____9526)];
      if(or__3824__auto____9527) {
        return or__3824__auto____9527
      }else {
        var or__3824__auto____9528 = cljs.core._assoc["_"];
        if(or__3824__auto____9528) {
          return or__3824__auto____9528
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____9533 = coll;
    if(and__3822__auto____9533) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____9533
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2359__auto____9534 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9535 = cljs.core._dissoc[goog.typeOf(x__2359__auto____9534)];
      if(or__3824__auto____9535) {
        return or__3824__auto____9535
      }else {
        var or__3824__auto____9536 = cljs.core._dissoc["_"];
        if(or__3824__auto____9536) {
          return or__3824__auto____9536
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____9541 = coll;
    if(and__3822__auto____9541) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____9541
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2359__auto____9542 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9543 = cljs.core._key[goog.typeOf(x__2359__auto____9542)];
      if(or__3824__auto____9543) {
        return or__3824__auto____9543
      }else {
        var or__3824__auto____9544 = cljs.core._key["_"];
        if(or__3824__auto____9544) {
          return or__3824__auto____9544
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____9549 = coll;
    if(and__3822__auto____9549) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____9549
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2359__auto____9550 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9551 = cljs.core._val[goog.typeOf(x__2359__auto____9550)];
      if(or__3824__auto____9551) {
        return or__3824__auto____9551
      }else {
        var or__3824__auto____9552 = cljs.core._val["_"];
        if(or__3824__auto____9552) {
          return or__3824__auto____9552
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____9557 = coll;
    if(and__3822__auto____9557) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____9557
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2359__auto____9558 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9559 = cljs.core._disjoin[goog.typeOf(x__2359__auto____9558)];
      if(or__3824__auto____9559) {
        return or__3824__auto____9559
      }else {
        var or__3824__auto____9560 = cljs.core._disjoin["_"];
        if(or__3824__auto____9560) {
          return or__3824__auto____9560
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____9565 = coll;
    if(and__3822__auto____9565) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____9565
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2359__auto____9566 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9567 = cljs.core._peek[goog.typeOf(x__2359__auto____9566)];
      if(or__3824__auto____9567) {
        return or__3824__auto____9567
      }else {
        var or__3824__auto____9568 = cljs.core._peek["_"];
        if(or__3824__auto____9568) {
          return or__3824__auto____9568
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____9573 = coll;
    if(and__3822__auto____9573) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____9573
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2359__auto____9574 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9575 = cljs.core._pop[goog.typeOf(x__2359__auto____9574)];
      if(or__3824__auto____9575) {
        return or__3824__auto____9575
      }else {
        var or__3824__auto____9576 = cljs.core._pop["_"];
        if(or__3824__auto____9576) {
          return or__3824__auto____9576
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____9581 = coll;
    if(and__3822__auto____9581) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____9581
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2359__auto____9582 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9583 = cljs.core._assoc_n[goog.typeOf(x__2359__auto____9582)];
      if(or__3824__auto____9583) {
        return or__3824__auto____9583
      }else {
        var or__3824__auto____9584 = cljs.core._assoc_n["_"];
        if(or__3824__auto____9584) {
          return or__3824__auto____9584
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____9589 = o;
    if(and__3822__auto____9589) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____9589
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2359__auto____9590 = o == null ? null : o;
    return function() {
      var or__3824__auto____9591 = cljs.core._deref[goog.typeOf(x__2359__auto____9590)];
      if(or__3824__auto____9591) {
        return or__3824__auto____9591
      }else {
        var or__3824__auto____9592 = cljs.core._deref["_"];
        if(or__3824__auto____9592) {
          return or__3824__auto____9592
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____9597 = o;
    if(and__3822__auto____9597) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____9597
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2359__auto____9598 = o == null ? null : o;
    return function() {
      var or__3824__auto____9599 = cljs.core._deref_with_timeout[goog.typeOf(x__2359__auto____9598)];
      if(or__3824__auto____9599) {
        return or__3824__auto____9599
      }else {
        var or__3824__auto____9600 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____9600) {
          return or__3824__auto____9600
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____9605 = o;
    if(and__3822__auto____9605) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____9605
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2359__auto____9606 = o == null ? null : o;
    return function() {
      var or__3824__auto____9607 = cljs.core._meta[goog.typeOf(x__2359__auto____9606)];
      if(or__3824__auto____9607) {
        return or__3824__auto____9607
      }else {
        var or__3824__auto____9608 = cljs.core._meta["_"];
        if(or__3824__auto____9608) {
          return or__3824__auto____9608
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____9613 = o;
    if(and__3822__auto____9613) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____9613
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2359__auto____9614 = o == null ? null : o;
    return function() {
      var or__3824__auto____9615 = cljs.core._with_meta[goog.typeOf(x__2359__auto____9614)];
      if(or__3824__auto____9615) {
        return or__3824__auto____9615
      }else {
        var or__3824__auto____9616 = cljs.core._with_meta["_"];
        if(or__3824__auto____9616) {
          return or__3824__auto____9616
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____9625 = coll;
      if(and__3822__auto____9625) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____9625
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2359__auto____9626 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____9627 = cljs.core._reduce[goog.typeOf(x__2359__auto____9626)];
        if(or__3824__auto____9627) {
          return or__3824__auto____9627
        }else {
          var or__3824__auto____9628 = cljs.core._reduce["_"];
          if(or__3824__auto____9628) {
            return or__3824__auto____9628
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____9629 = coll;
      if(and__3822__auto____9629) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____9629
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2359__auto____9630 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____9631 = cljs.core._reduce[goog.typeOf(x__2359__auto____9630)];
        if(or__3824__auto____9631) {
          return or__3824__auto____9631
        }else {
          var or__3824__auto____9632 = cljs.core._reduce["_"];
          if(or__3824__auto____9632) {
            return or__3824__auto____9632
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____9637 = coll;
    if(and__3822__auto____9637) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____9637
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2359__auto____9638 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9639 = cljs.core._kv_reduce[goog.typeOf(x__2359__auto____9638)];
      if(or__3824__auto____9639) {
        return or__3824__auto____9639
      }else {
        var or__3824__auto____9640 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____9640) {
          return or__3824__auto____9640
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____9645 = o;
    if(and__3822__auto____9645) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____9645
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2359__auto____9646 = o == null ? null : o;
    return function() {
      var or__3824__auto____9647 = cljs.core._equiv[goog.typeOf(x__2359__auto____9646)];
      if(or__3824__auto____9647) {
        return or__3824__auto____9647
      }else {
        var or__3824__auto____9648 = cljs.core._equiv["_"];
        if(or__3824__auto____9648) {
          return or__3824__auto____9648
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____9653 = o;
    if(and__3822__auto____9653) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____9653
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2359__auto____9654 = o == null ? null : o;
    return function() {
      var or__3824__auto____9655 = cljs.core._hash[goog.typeOf(x__2359__auto____9654)];
      if(or__3824__auto____9655) {
        return or__3824__auto____9655
      }else {
        var or__3824__auto____9656 = cljs.core._hash["_"];
        if(or__3824__auto____9656) {
          return or__3824__auto____9656
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____9661 = o;
    if(and__3822__auto____9661) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____9661
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2359__auto____9662 = o == null ? null : o;
    return function() {
      var or__3824__auto____9663 = cljs.core._seq[goog.typeOf(x__2359__auto____9662)];
      if(or__3824__auto____9663) {
        return or__3824__auto____9663
      }else {
        var or__3824__auto____9664 = cljs.core._seq["_"];
        if(or__3824__auto____9664) {
          return or__3824__auto____9664
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____9669 = coll;
    if(and__3822__auto____9669) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____9669
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2359__auto____9670 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9671 = cljs.core._rseq[goog.typeOf(x__2359__auto____9670)];
      if(or__3824__auto____9671) {
        return or__3824__auto____9671
      }else {
        var or__3824__auto____9672 = cljs.core._rseq["_"];
        if(or__3824__auto____9672) {
          return or__3824__auto____9672
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____9677 = coll;
    if(and__3822__auto____9677) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____9677
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2359__auto____9678 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9679 = cljs.core._sorted_seq[goog.typeOf(x__2359__auto____9678)];
      if(or__3824__auto____9679) {
        return or__3824__auto____9679
      }else {
        var or__3824__auto____9680 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____9680) {
          return or__3824__auto____9680
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____9685 = coll;
    if(and__3822__auto____9685) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____9685
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2359__auto____9686 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9687 = cljs.core._sorted_seq_from[goog.typeOf(x__2359__auto____9686)];
      if(or__3824__auto____9687) {
        return or__3824__auto____9687
      }else {
        var or__3824__auto____9688 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____9688) {
          return or__3824__auto____9688
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____9693 = coll;
    if(and__3822__auto____9693) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____9693
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2359__auto____9694 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9695 = cljs.core._entry_key[goog.typeOf(x__2359__auto____9694)];
      if(or__3824__auto____9695) {
        return or__3824__auto____9695
      }else {
        var or__3824__auto____9696 = cljs.core._entry_key["_"];
        if(or__3824__auto____9696) {
          return or__3824__auto____9696
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____9701 = coll;
    if(and__3822__auto____9701) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____9701
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2359__auto____9702 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9703 = cljs.core._comparator[goog.typeOf(x__2359__auto____9702)];
      if(or__3824__auto____9703) {
        return or__3824__auto____9703
      }else {
        var or__3824__auto____9704 = cljs.core._comparator["_"];
        if(or__3824__auto____9704) {
          return or__3824__auto____9704
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____9709 = o;
    if(and__3822__auto____9709) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____9709
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2359__auto____9710 = o == null ? null : o;
    return function() {
      var or__3824__auto____9711 = cljs.core._pr_seq[goog.typeOf(x__2359__auto____9710)];
      if(or__3824__auto____9711) {
        return or__3824__auto____9711
      }else {
        var or__3824__auto____9712 = cljs.core._pr_seq["_"];
        if(or__3824__auto____9712) {
          return or__3824__auto____9712
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____9717 = d;
    if(and__3822__auto____9717) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____9717
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2359__auto____9718 = d == null ? null : d;
    return function() {
      var or__3824__auto____9719 = cljs.core._realized_QMARK_[goog.typeOf(x__2359__auto____9718)];
      if(or__3824__auto____9719) {
        return or__3824__auto____9719
      }else {
        var or__3824__auto____9720 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____9720) {
          return or__3824__auto____9720
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____9725 = this$;
    if(and__3822__auto____9725) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____9725
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2359__auto____9726 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____9727 = cljs.core._notify_watches[goog.typeOf(x__2359__auto____9726)];
      if(or__3824__auto____9727) {
        return or__3824__auto____9727
      }else {
        var or__3824__auto____9728 = cljs.core._notify_watches["_"];
        if(or__3824__auto____9728) {
          return or__3824__auto____9728
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____9733 = this$;
    if(and__3822__auto____9733) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____9733
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2359__auto____9734 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____9735 = cljs.core._add_watch[goog.typeOf(x__2359__auto____9734)];
      if(or__3824__auto____9735) {
        return or__3824__auto____9735
      }else {
        var or__3824__auto____9736 = cljs.core._add_watch["_"];
        if(or__3824__auto____9736) {
          return or__3824__auto____9736
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____9741 = this$;
    if(and__3822__auto____9741) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____9741
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2359__auto____9742 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____9743 = cljs.core._remove_watch[goog.typeOf(x__2359__auto____9742)];
      if(or__3824__auto____9743) {
        return or__3824__auto____9743
      }else {
        var or__3824__auto____9744 = cljs.core._remove_watch["_"];
        if(or__3824__auto____9744) {
          return or__3824__auto____9744
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____9749 = coll;
    if(and__3822__auto____9749) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____9749
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2359__auto____9750 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9751 = cljs.core._as_transient[goog.typeOf(x__2359__auto____9750)];
      if(or__3824__auto____9751) {
        return or__3824__auto____9751
      }else {
        var or__3824__auto____9752 = cljs.core._as_transient["_"];
        if(or__3824__auto____9752) {
          return or__3824__auto____9752
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____9757 = tcoll;
    if(and__3822__auto____9757) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____9757
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2359__auto____9758 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____9759 = cljs.core._conj_BANG_[goog.typeOf(x__2359__auto____9758)];
      if(or__3824__auto____9759) {
        return or__3824__auto____9759
      }else {
        var or__3824__auto____9760 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____9760) {
          return or__3824__auto____9760
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____9765 = tcoll;
    if(and__3822__auto____9765) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____9765
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2359__auto____9766 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____9767 = cljs.core._persistent_BANG_[goog.typeOf(x__2359__auto____9766)];
      if(or__3824__auto____9767) {
        return or__3824__auto____9767
      }else {
        var or__3824__auto____9768 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____9768) {
          return or__3824__auto____9768
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____9773 = tcoll;
    if(and__3822__auto____9773) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____9773
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2359__auto____9774 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____9775 = cljs.core._assoc_BANG_[goog.typeOf(x__2359__auto____9774)];
      if(or__3824__auto____9775) {
        return or__3824__auto____9775
      }else {
        var or__3824__auto____9776 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____9776) {
          return or__3824__auto____9776
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____9781 = tcoll;
    if(and__3822__auto____9781) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____9781
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2359__auto____9782 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____9783 = cljs.core._dissoc_BANG_[goog.typeOf(x__2359__auto____9782)];
      if(or__3824__auto____9783) {
        return or__3824__auto____9783
      }else {
        var or__3824__auto____9784 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____9784) {
          return or__3824__auto____9784
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____9789 = tcoll;
    if(and__3822__auto____9789) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____9789
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2359__auto____9790 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____9791 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2359__auto____9790)];
      if(or__3824__auto____9791) {
        return or__3824__auto____9791
      }else {
        var or__3824__auto____9792 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____9792) {
          return or__3824__auto____9792
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____9797 = tcoll;
    if(and__3822__auto____9797) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____9797
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2359__auto____9798 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____9799 = cljs.core._pop_BANG_[goog.typeOf(x__2359__auto____9798)];
      if(or__3824__auto____9799) {
        return or__3824__auto____9799
      }else {
        var or__3824__auto____9800 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____9800) {
          return or__3824__auto____9800
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____9805 = tcoll;
    if(and__3822__auto____9805) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____9805
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2359__auto____9806 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____9807 = cljs.core._disjoin_BANG_[goog.typeOf(x__2359__auto____9806)];
      if(or__3824__auto____9807) {
        return or__3824__auto____9807
      }else {
        var or__3824__auto____9808 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____9808) {
          return or__3824__auto____9808
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____9813 = x;
    if(and__3822__auto____9813) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____9813
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2359__auto____9814 = x == null ? null : x;
    return function() {
      var or__3824__auto____9815 = cljs.core._compare[goog.typeOf(x__2359__auto____9814)];
      if(or__3824__auto____9815) {
        return or__3824__auto____9815
      }else {
        var or__3824__auto____9816 = cljs.core._compare["_"];
        if(or__3824__auto____9816) {
          return or__3824__auto____9816
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____9821 = coll;
    if(and__3822__auto____9821) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____9821
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2359__auto____9822 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9823 = cljs.core._drop_first[goog.typeOf(x__2359__auto____9822)];
      if(or__3824__auto____9823) {
        return or__3824__auto____9823
      }else {
        var or__3824__auto____9824 = cljs.core._drop_first["_"];
        if(or__3824__auto____9824) {
          return or__3824__auto____9824
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____9829 = coll;
    if(and__3822__auto____9829) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____9829
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2359__auto____9830 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9831 = cljs.core._chunked_first[goog.typeOf(x__2359__auto____9830)];
      if(or__3824__auto____9831) {
        return or__3824__auto____9831
      }else {
        var or__3824__auto____9832 = cljs.core._chunked_first["_"];
        if(or__3824__auto____9832) {
          return or__3824__auto____9832
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____9837 = coll;
    if(and__3822__auto____9837) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____9837
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2359__auto____9838 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9839 = cljs.core._chunked_rest[goog.typeOf(x__2359__auto____9838)];
      if(or__3824__auto____9839) {
        return or__3824__auto____9839
      }else {
        var or__3824__auto____9840 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____9840) {
          return or__3824__auto____9840
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____9845 = coll;
    if(and__3822__auto____9845) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____9845
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2359__auto____9846 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____9847 = cljs.core._chunked_next[goog.typeOf(x__2359__auto____9846)];
      if(or__3824__auto____9847) {
        return or__3824__auto____9847
      }else {
        var or__3824__auto____9848 = cljs.core._chunked_next["_"];
        if(or__3824__auto____9848) {
          return or__3824__auto____9848
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____9850 = x === y;
    if(or__3824__auto____9850) {
      return or__3824__auto____9850
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__9851__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__9852 = y;
            var G__9853 = cljs.core.first.call(null, more);
            var G__9854 = cljs.core.next.call(null, more);
            x = G__9852;
            y = G__9853;
            more = G__9854;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__9851 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9851__delegate.call(this, x, y, more)
    };
    G__9851.cljs$lang$maxFixedArity = 2;
    G__9851.cljs$lang$applyTo = function(arglist__9855) {
      var x = cljs.core.first(arglist__9855);
      var y = cljs.core.first(cljs.core.next(arglist__9855));
      var more = cljs.core.rest(cljs.core.next(arglist__9855));
      return G__9851__delegate(x, y, more)
    };
    G__9851.cljs$lang$arity$variadic = G__9851__delegate;
    return G__9851
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__9856 = null;
  var G__9856__2 = function(o, k) {
    return null
  };
  var G__9856__3 = function(o, k, not_found) {
    return not_found
  };
  G__9856 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9856__2.call(this, o, k);
      case 3:
        return G__9856__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9856
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__9857 = null;
  var G__9857__2 = function(_, f) {
    return f.call(null)
  };
  var G__9857__3 = function(_, f, start) {
    return start
  };
  G__9857 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__9857__2.call(this, _, f);
      case 3:
        return G__9857__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9857
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__9858 = null;
  var G__9858__2 = function(_, n) {
    return null
  };
  var G__9858__3 = function(_, n, not_found) {
    return not_found
  };
  G__9858 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9858__2.call(this, _, n);
      case 3:
        return G__9858__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9858
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____9859 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____9859) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____9859
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__9872 = cljs.core._count.call(null, cicoll);
    if(cnt__9872 === 0) {
      return f.call(null)
    }else {
      var val__9873 = cljs.core._nth.call(null, cicoll, 0);
      var n__9874 = 1;
      while(true) {
        if(n__9874 < cnt__9872) {
          var nval__9875 = f.call(null, val__9873, cljs.core._nth.call(null, cicoll, n__9874));
          if(cljs.core.reduced_QMARK_.call(null, nval__9875)) {
            return cljs.core.deref.call(null, nval__9875)
          }else {
            var G__9884 = nval__9875;
            var G__9885 = n__9874 + 1;
            val__9873 = G__9884;
            n__9874 = G__9885;
            continue
          }
        }else {
          return val__9873
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__9876 = cljs.core._count.call(null, cicoll);
    var val__9877 = val;
    var n__9878 = 0;
    while(true) {
      if(n__9878 < cnt__9876) {
        var nval__9879 = f.call(null, val__9877, cljs.core._nth.call(null, cicoll, n__9878));
        if(cljs.core.reduced_QMARK_.call(null, nval__9879)) {
          return cljs.core.deref.call(null, nval__9879)
        }else {
          var G__9886 = nval__9879;
          var G__9887 = n__9878 + 1;
          val__9877 = G__9886;
          n__9878 = G__9887;
          continue
        }
      }else {
        return val__9877
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__9880 = cljs.core._count.call(null, cicoll);
    var val__9881 = val;
    var n__9882 = idx;
    while(true) {
      if(n__9882 < cnt__9880) {
        var nval__9883 = f.call(null, val__9881, cljs.core._nth.call(null, cicoll, n__9882));
        if(cljs.core.reduced_QMARK_.call(null, nval__9883)) {
          return cljs.core.deref.call(null, nval__9883)
        }else {
          var G__9888 = nval__9883;
          var G__9889 = n__9882 + 1;
          val__9881 = G__9888;
          n__9882 = G__9889;
          continue
        }
      }else {
        return val__9881
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__9902 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__9903 = arr[0];
      var n__9904 = 1;
      while(true) {
        if(n__9904 < cnt__9902) {
          var nval__9905 = f.call(null, val__9903, arr[n__9904]);
          if(cljs.core.reduced_QMARK_.call(null, nval__9905)) {
            return cljs.core.deref.call(null, nval__9905)
          }else {
            var G__9914 = nval__9905;
            var G__9915 = n__9904 + 1;
            val__9903 = G__9914;
            n__9904 = G__9915;
            continue
          }
        }else {
          return val__9903
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__9906 = arr.length;
    var val__9907 = val;
    var n__9908 = 0;
    while(true) {
      if(n__9908 < cnt__9906) {
        var nval__9909 = f.call(null, val__9907, arr[n__9908]);
        if(cljs.core.reduced_QMARK_.call(null, nval__9909)) {
          return cljs.core.deref.call(null, nval__9909)
        }else {
          var G__9916 = nval__9909;
          var G__9917 = n__9908 + 1;
          val__9907 = G__9916;
          n__9908 = G__9917;
          continue
        }
      }else {
        return val__9907
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__9910 = arr.length;
    var val__9911 = val;
    var n__9912 = idx;
    while(true) {
      if(n__9912 < cnt__9910) {
        var nval__9913 = f.call(null, val__9911, arr[n__9912]);
        if(cljs.core.reduced_QMARK_.call(null, nval__9913)) {
          return cljs.core.deref.call(null, nval__9913)
        }else {
          var G__9918 = nval__9913;
          var G__9919 = n__9912 + 1;
          val__9911 = G__9918;
          n__9912 = G__9919;
          continue
        }
      }else {
        return val__9911
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9920 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__9921 = this;
  if(this__9921.i + 1 < this__9921.a.length) {
    return new cljs.core.IndexedSeq(this__9921.a, this__9921.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9922 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__9923 = this;
  var c__9924 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__9924 > 0) {
    return new cljs.core.RSeq(coll, c__9924 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__9925 = this;
  var this__9926 = this;
  return cljs.core.pr_str.call(null, this__9926)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__9927 = this;
  if(cljs.core.counted_QMARK_.call(null, this__9927.a)) {
    return cljs.core.ci_reduce.call(null, this__9927.a, f, this__9927.a[this__9927.i], this__9927.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__9927.a[this__9927.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__9928 = this;
  if(cljs.core.counted_QMARK_.call(null, this__9928.a)) {
    return cljs.core.ci_reduce.call(null, this__9928.a, f, start, this__9928.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__9929 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__9930 = this;
  return this__9930.a.length - this__9930.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__9931 = this;
  return this__9931.a[this__9931.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__9932 = this;
  if(this__9932.i + 1 < this__9932.a.length) {
    return new cljs.core.IndexedSeq(this__9932.a, this__9932.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9933 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9934 = this;
  var i__9935 = n + this__9934.i;
  if(i__9935 < this__9934.a.length) {
    return this__9934.a[i__9935]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9936 = this;
  var i__9937 = n + this__9936.i;
  if(i__9937 < this__9936.a.length) {
    return this__9936.a[i__9937]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__9938 = null;
  var G__9938__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__9938__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__9938 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__9938__2.call(this, array, f);
      case 3:
        return G__9938__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9938
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__9939 = null;
  var G__9939__2 = function(array, k) {
    return array[k]
  };
  var G__9939__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__9939 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9939__2.call(this, array, k);
      case 3:
        return G__9939__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9939
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__9940 = null;
  var G__9940__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__9940__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__9940 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9940__2.call(this, array, n);
      case 3:
        return G__9940__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9940
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9941 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9942 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__9943 = this;
  var this__9944 = this;
  return cljs.core.pr_str.call(null, this__9944)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9945 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9946 = this;
  return this__9946.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9947 = this;
  return cljs.core._nth.call(null, this__9947.ci, this__9947.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9948 = this;
  if(this__9948.i > 0) {
    return new cljs.core.RSeq(this__9948.ci, this__9948.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9949 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__9950 = this;
  return new cljs.core.RSeq(this__9950.ci, this__9950.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9951 = this;
  return this__9951.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__9955__9956 = coll;
      if(G__9955__9956) {
        if(function() {
          var or__3824__auto____9957 = G__9955__9956.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____9957) {
            return or__3824__auto____9957
          }else {
            return G__9955__9956.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__9955__9956.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__9955__9956)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__9955__9956)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__9962__9963 = coll;
      if(G__9962__9963) {
        if(function() {
          var or__3824__auto____9964 = G__9962__9963.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____9964) {
            return or__3824__auto____9964
          }else {
            return G__9962__9963.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__9962__9963.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9962__9963)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9962__9963)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__9965 = cljs.core.seq.call(null, coll);
      if(s__9965 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__9965)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__9970__9971 = coll;
      if(G__9970__9971) {
        if(function() {
          var or__3824__auto____9972 = G__9970__9971.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____9972) {
            return or__3824__auto____9972
          }else {
            return G__9970__9971.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__9970__9971.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9970__9971)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9970__9971)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__9973 = cljs.core.seq.call(null, coll);
      if(!(s__9973 == null)) {
        return cljs.core._rest.call(null, s__9973)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__9977__9978 = coll;
      if(G__9977__9978) {
        if(function() {
          var or__3824__auto____9979 = G__9977__9978.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____9979) {
            return or__3824__auto____9979
          }else {
            return G__9977__9978.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__9977__9978.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__9977__9978)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__9977__9978)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__9981 = cljs.core.next.call(null, s);
    if(!(sn__9981 == null)) {
      var G__9982 = sn__9981;
      s = G__9982;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__9983__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__9984 = conj.call(null, coll, x);
          var G__9985 = cljs.core.first.call(null, xs);
          var G__9986 = cljs.core.next.call(null, xs);
          coll = G__9984;
          x = G__9985;
          xs = G__9986;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__9983 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9983__delegate.call(this, coll, x, xs)
    };
    G__9983.cljs$lang$maxFixedArity = 2;
    G__9983.cljs$lang$applyTo = function(arglist__9987) {
      var coll = cljs.core.first(arglist__9987);
      var x = cljs.core.first(cljs.core.next(arglist__9987));
      var xs = cljs.core.rest(cljs.core.next(arglist__9987));
      return G__9983__delegate(coll, x, xs)
    };
    G__9983.cljs$lang$arity$variadic = G__9983__delegate;
    return G__9983
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__9990 = cljs.core.seq.call(null, coll);
  var acc__9991 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__9990)) {
      return acc__9991 + cljs.core._count.call(null, s__9990)
    }else {
      var G__9992 = cljs.core.next.call(null, s__9990);
      var G__9993 = acc__9991 + 1;
      s__9990 = G__9992;
      acc__9991 = G__9993;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__10000__10001 = coll;
        if(G__10000__10001) {
          if(function() {
            var or__3824__auto____10002 = G__10000__10001.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____10002) {
              return or__3824__auto____10002
            }else {
              return G__10000__10001.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__10000__10001.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__10000__10001)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__10000__10001)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__10003__10004 = coll;
        if(G__10003__10004) {
          if(function() {
            var or__3824__auto____10005 = G__10003__10004.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____10005) {
              return or__3824__auto____10005
            }else {
              return G__10003__10004.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__10003__10004.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__10003__10004)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__10003__10004)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__10008__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__10007 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__10009 = ret__10007;
          var G__10010 = cljs.core.first.call(null, kvs);
          var G__10011 = cljs.core.second.call(null, kvs);
          var G__10012 = cljs.core.nnext.call(null, kvs);
          coll = G__10009;
          k = G__10010;
          v = G__10011;
          kvs = G__10012;
          continue
        }else {
          return ret__10007
        }
        break
      }
    };
    var G__10008 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10008__delegate.call(this, coll, k, v, kvs)
    };
    G__10008.cljs$lang$maxFixedArity = 3;
    G__10008.cljs$lang$applyTo = function(arglist__10013) {
      var coll = cljs.core.first(arglist__10013);
      var k = cljs.core.first(cljs.core.next(arglist__10013));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10013)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10013)));
      return G__10008__delegate(coll, k, v, kvs)
    };
    G__10008.cljs$lang$arity$variadic = G__10008__delegate;
    return G__10008
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__10016__delegate = function(coll, k, ks) {
      while(true) {
        var ret__10015 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__10017 = ret__10015;
          var G__10018 = cljs.core.first.call(null, ks);
          var G__10019 = cljs.core.next.call(null, ks);
          coll = G__10017;
          k = G__10018;
          ks = G__10019;
          continue
        }else {
          return ret__10015
        }
        break
      }
    };
    var G__10016 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10016__delegate.call(this, coll, k, ks)
    };
    G__10016.cljs$lang$maxFixedArity = 2;
    G__10016.cljs$lang$applyTo = function(arglist__10020) {
      var coll = cljs.core.first(arglist__10020);
      var k = cljs.core.first(cljs.core.next(arglist__10020));
      var ks = cljs.core.rest(cljs.core.next(arglist__10020));
      return G__10016__delegate(coll, k, ks)
    };
    G__10016.cljs$lang$arity$variadic = G__10016__delegate;
    return G__10016
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__10024__10025 = o;
    if(G__10024__10025) {
      if(function() {
        var or__3824__auto____10026 = G__10024__10025.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____10026) {
          return or__3824__auto____10026
        }else {
          return G__10024__10025.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__10024__10025.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10024__10025)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10024__10025)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__10029__delegate = function(coll, k, ks) {
      while(true) {
        var ret__10028 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__10030 = ret__10028;
          var G__10031 = cljs.core.first.call(null, ks);
          var G__10032 = cljs.core.next.call(null, ks);
          coll = G__10030;
          k = G__10031;
          ks = G__10032;
          continue
        }else {
          return ret__10028
        }
        break
      }
    };
    var G__10029 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10029__delegate.call(this, coll, k, ks)
    };
    G__10029.cljs$lang$maxFixedArity = 2;
    G__10029.cljs$lang$applyTo = function(arglist__10033) {
      var coll = cljs.core.first(arglist__10033);
      var k = cljs.core.first(cljs.core.next(arglist__10033));
      var ks = cljs.core.rest(cljs.core.next(arglist__10033));
      return G__10029__delegate(coll, k, ks)
    };
    G__10029.cljs$lang$arity$variadic = G__10029__delegate;
    return G__10029
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__10035 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__10035;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__10035
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__10037 = cljs.core.string_hash_cache[k];
  if(!(h__10037 == null)) {
    return h__10037
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____10039 = goog.isString(o);
      if(and__3822__auto____10039) {
        return check_cache
      }else {
        return and__3822__auto____10039
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__10043__10044 = x;
    if(G__10043__10044) {
      if(function() {
        var or__3824__auto____10045 = G__10043__10044.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____10045) {
          return or__3824__auto____10045
        }else {
          return G__10043__10044.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__10043__10044.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__10043__10044)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__10043__10044)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__10049__10050 = x;
    if(G__10049__10050) {
      if(function() {
        var or__3824__auto____10051 = G__10049__10050.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____10051) {
          return or__3824__auto____10051
        }else {
          return G__10049__10050.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__10049__10050.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__10049__10050)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__10049__10050)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__10055__10056 = x;
  if(G__10055__10056) {
    if(function() {
      var or__3824__auto____10057 = G__10055__10056.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____10057) {
        return or__3824__auto____10057
      }else {
        return G__10055__10056.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__10055__10056.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__10055__10056)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__10055__10056)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__10061__10062 = x;
  if(G__10061__10062) {
    if(function() {
      var or__3824__auto____10063 = G__10061__10062.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____10063) {
        return or__3824__auto____10063
      }else {
        return G__10061__10062.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__10061__10062.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__10061__10062)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__10061__10062)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__10067__10068 = x;
  if(G__10067__10068) {
    if(function() {
      var or__3824__auto____10069 = G__10067__10068.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____10069) {
        return or__3824__auto____10069
      }else {
        return G__10067__10068.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__10067__10068.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__10067__10068)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__10067__10068)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__10073__10074 = x;
  if(G__10073__10074) {
    if(function() {
      var or__3824__auto____10075 = G__10073__10074.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____10075) {
        return or__3824__auto____10075
      }else {
        return G__10073__10074.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__10073__10074.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__10073__10074)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__10073__10074)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__10079__10080 = x;
  if(G__10079__10080) {
    if(function() {
      var or__3824__auto____10081 = G__10079__10080.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____10081) {
        return or__3824__auto____10081
      }else {
        return G__10079__10080.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__10079__10080.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__10079__10080)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__10079__10080)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__10085__10086 = x;
    if(G__10085__10086) {
      if(function() {
        var or__3824__auto____10087 = G__10085__10086.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____10087) {
          return or__3824__auto____10087
        }else {
          return G__10085__10086.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__10085__10086.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__10085__10086)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__10085__10086)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__10091__10092 = x;
  if(G__10091__10092) {
    if(function() {
      var or__3824__auto____10093 = G__10091__10092.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____10093) {
        return or__3824__auto____10093
      }else {
        return G__10091__10092.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__10091__10092.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__10091__10092)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__10091__10092)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__10097__10098 = x;
  if(G__10097__10098) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____10099 = null;
      if(cljs.core.truth_(or__3824__auto____10099)) {
        return or__3824__auto____10099
      }else {
        return G__10097__10098.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__10097__10098.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__10097__10098)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__10097__10098)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__10100__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__10100 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10100__delegate.call(this, keyvals)
    };
    G__10100.cljs$lang$maxFixedArity = 0;
    G__10100.cljs$lang$applyTo = function(arglist__10101) {
      var keyvals = cljs.core.seq(arglist__10101);
      return G__10100__delegate(keyvals)
    };
    G__10100.cljs$lang$arity$variadic = G__10100__delegate;
    return G__10100
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__10103 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__10103.push(key)
  });
  return keys__10103
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__10107 = i;
  var j__10108 = j;
  var len__10109 = len;
  while(true) {
    if(len__10109 === 0) {
      return to
    }else {
      to[j__10108] = from[i__10107];
      var G__10110 = i__10107 + 1;
      var G__10111 = j__10108 + 1;
      var G__10112 = len__10109 - 1;
      i__10107 = G__10110;
      j__10108 = G__10111;
      len__10109 = G__10112;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__10116 = i + (len - 1);
  var j__10117 = j + (len - 1);
  var len__10118 = len;
  while(true) {
    if(len__10118 === 0) {
      return to
    }else {
      to[j__10117] = from[i__10116];
      var G__10119 = i__10116 - 1;
      var G__10120 = j__10117 - 1;
      var G__10121 = len__10118 - 1;
      i__10116 = G__10119;
      j__10117 = G__10120;
      len__10118 = G__10121;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__10125__10126 = s;
    if(G__10125__10126) {
      if(function() {
        var or__3824__auto____10127 = G__10125__10126.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____10127) {
          return or__3824__auto____10127
        }else {
          return G__10125__10126.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__10125__10126.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__10125__10126)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__10125__10126)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__10131__10132 = s;
  if(G__10131__10132) {
    if(function() {
      var or__3824__auto____10133 = G__10131__10132.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____10133) {
        return or__3824__auto____10133
      }else {
        return G__10131__10132.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__10131__10132.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__10131__10132)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__10131__10132)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____10136 = goog.isString(x);
  if(and__3822__auto____10136) {
    return!function() {
      var or__3824__auto____10137 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____10137) {
        return or__3824__auto____10137
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____10136
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____10139 = goog.isString(x);
  if(and__3822__auto____10139) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____10139
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____10141 = goog.isString(x);
  if(and__3822__auto____10141) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____10141
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____10146 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____10146) {
    return or__3824__auto____10146
  }else {
    var G__10147__10148 = f;
    if(G__10147__10148) {
      if(function() {
        var or__3824__auto____10149 = G__10147__10148.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____10149) {
          return or__3824__auto____10149
        }else {
          return G__10147__10148.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__10147__10148.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__10147__10148)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__10147__10148)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____10151 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____10151) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____10151
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____10154 = coll;
    if(cljs.core.truth_(and__3822__auto____10154)) {
      var and__3822__auto____10155 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____10155) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____10155
      }
    }else {
      return and__3822__auto____10154
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__10164__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__10160 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__10161 = more;
        while(true) {
          var x__10162 = cljs.core.first.call(null, xs__10161);
          var etc__10163 = cljs.core.next.call(null, xs__10161);
          if(cljs.core.truth_(xs__10161)) {
            if(cljs.core.contains_QMARK_.call(null, s__10160, x__10162)) {
              return false
            }else {
              var G__10165 = cljs.core.conj.call(null, s__10160, x__10162);
              var G__10166 = etc__10163;
              s__10160 = G__10165;
              xs__10161 = G__10166;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__10164 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10164__delegate.call(this, x, y, more)
    };
    G__10164.cljs$lang$maxFixedArity = 2;
    G__10164.cljs$lang$applyTo = function(arglist__10167) {
      var x = cljs.core.first(arglist__10167);
      var y = cljs.core.first(cljs.core.next(arglist__10167));
      var more = cljs.core.rest(cljs.core.next(arglist__10167));
      return G__10164__delegate(x, y, more)
    };
    G__10164.cljs$lang$arity$variadic = G__10164__delegate;
    return G__10164
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__10171__10172 = x;
            if(G__10171__10172) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____10173 = null;
                if(cljs.core.truth_(or__3824__auto____10173)) {
                  return or__3824__auto____10173
                }else {
                  return G__10171__10172.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__10171__10172.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__10171__10172)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__10171__10172)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__10178 = cljs.core.count.call(null, xs);
    var yl__10179 = cljs.core.count.call(null, ys);
    if(xl__10178 < yl__10179) {
      return-1
    }else {
      if(xl__10178 > yl__10179) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__10178, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__10180 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____10181 = d__10180 === 0;
        if(and__3822__auto____10181) {
          return n + 1 < len
        }else {
          return and__3822__auto____10181
        }
      }()) {
        var G__10182 = xs;
        var G__10183 = ys;
        var G__10184 = len;
        var G__10185 = n + 1;
        xs = G__10182;
        ys = G__10183;
        len = G__10184;
        n = G__10185;
        continue
      }else {
        return d__10180
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__10187 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__10187)) {
        return r__10187
      }else {
        if(cljs.core.truth_(r__10187)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__10189 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__10189, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__10189)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____10195 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____10195) {
      var s__10196 = temp__3971__auto____10195;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__10196), cljs.core.next.call(null, s__10196))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__10197 = val;
    var coll__10198 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__10198) {
        var nval__10199 = f.call(null, val__10197, cljs.core.first.call(null, coll__10198));
        if(cljs.core.reduced_QMARK_.call(null, nval__10199)) {
          return cljs.core.deref.call(null, nval__10199)
        }else {
          var G__10200 = nval__10199;
          var G__10201 = cljs.core.next.call(null, coll__10198);
          val__10197 = G__10200;
          coll__10198 = G__10201;
          continue
        }
      }else {
        return val__10197
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__10203 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__10203);
  return cljs.core.vec.call(null, a__10203)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__10210__10211 = coll;
      if(G__10210__10211) {
        if(function() {
          var or__3824__auto____10212 = G__10210__10211.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____10212) {
            return or__3824__auto____10212
          }else {
            return G__10210__10211.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__10210__10211.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__10210__10211)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__10210__10211)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__10213__10214 = coll;
      if(G__10213__10214) {
        if(function() {
          var or__3824__auto____10215 = G__10213__10214.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____10215) {
            return or__3824__auto____10215
          }else {
            return G__10213__10214.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__10213__10214.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__10213__10214)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__10213__10214)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__10216 = this;
  return this__10216.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__10217__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__10217 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10217__delegate.call(this, x, y, more)
    };
    G__10217.cljs$lang$maxFixedArity = 2;
    G__10217.cljs$lang$applyTo = function(arglist__10218) {
      var x = cljs.core.first(arglist__10218);
      var y = cljs.core.first(cljs.core.next(arglist__10218));
      var more = cljs.core.rest(cljs.core.next(arglist__10218));
      return G__10217__delegate(x, y, more)
    };
    G__10217.cljs$lang$arity$variadic = G__10217__delegate;
    return G__10217
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__10219__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__10219 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10219__delegate.call(this, x, y, more)
    };
    G__10219.cljs$lang$maxFixedArity = 2;
    G__10219.cljs$lang$applyTo = function(arglist__10220) {
      var x = cljs.core.first(arglist__10220);
      var y = cljs.core.first(cljs.core.next(arglist__10220));
      var more = cljs.core.rest(cljs.core.next(arglist__10220));
      return G__10219__delegate(x, y, more)
    };
    G__10219.cljs$lang$arity$variadic = G__10219__delegate;
    return G__10219
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__10221__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__10221 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10221__delegate.call(this, x, y, more)
    };
    G__10221.cljs$lang$maxFixedArity = 2;
    G__10221.cljs$lang$applyTo = function(arglist__10222) {
      var x = cljs.core.first(arglist__10222);
      var y = cljs.core.first(cljs.core.next(arglist__10222));
      var more = cljs.core.rest(cljs.core.next(arglist__10222));
      return G__10221__delegate(x, y, more)
    };
    G__10221.cljs$lang$arity$variadic = G__10221__delegate;
    return G__10221
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__10223__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__10223 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10223__delegate.call(this, x, y, more)
    };
    G__10223.cljs$lang$maxFixedArity = 2;
    G__10223.cljs$lang$applyTo = function(arglist__10224) {
      var x = cljs.core.first(arglist__10224);
      var y = cljs.core.first(cljs.core.next(arglist__10224));
      var more = cljs.core.rest(cljs.core.next(arglist__10224));
      return G__10223__delegate(x, y, more)
    };
    G__10223.cljs$lang$arity$variadic = G__10223__delegate;
    return G__10223
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__10225__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__10226 = y;
            var G__10227 = cljs.core.first.call(null, more);
            var G__10228 = cljs.core.next.call(null, more);
            x = G__10226;
            y = G__10227;
            more = G__10228;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__10225 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10225__delegate.call(this, x, y, more)
    };
    G__10225.cljs$lang$maxFixedArity = 2;
    G__10225.cljs$lang$applyTo = function(arglist__10229) {
      var x = cljs.core.first(arglist__10229);
      var y = cljs.core.first(cljs.core.next(arglist__10229));
      var more = cljs.core.rest(cljs.core.next(arglist__10229));
      return G__10225__delegate(x, y, more)
    };
    G__10225.cljs$lang$arity$variadic = G__10225__delegate;
    return G__10225
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__10230__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__10231 = y;
            var G__10232 = cljs.core.first.call(null, more);
            var G__10233 = cljs.core.next.call(null, more);
            x = G__10231;
            y = G__10232;
            more = G__10233;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__10230 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10230__delegate.call(this, x, y, more)
    };
    G__10230.cljs$lang$maxFixedArity = 2;
    G__10230.cljs$lang$applyTo = function(arglist__10234) {
      var x = cljs.core.first(arglist__10234);
      var y = cljs.core.first(cljs.core.next(arglist__10234));
      var more = cljs.core.rest(cljs.core.next(arglist__10234));
      return G__10230__delegate(x, y, more)
    };
    G__10230.cljs$lang$arity$variadic = G__10230__delegate;
    return G__10230
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__10235__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__10236 = y;
            var G__10237 = cljs.core.first.call(null, more);
            var G__10238 = cljs.core.next.call(null, more);
            x = G__10236;
            y = G__10237;
            more = G__10238;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__10235 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10235__delegate.call(this, x, y, more)
    };
    G__10235.cljs$lang$maxFixedArity = 2;
    G__10235.cljs$lang$applyTo = function(arglist__10239) {
      var x = cljs.core.first(arglist__10239);
      var y = cljs.core.first(cljs.core.next(arglist__10239));
      var more = cljs.core.rest(cljs.core.next(arglist__10239));
      return G__10235__delegate(x, y, more)
    };
    G__10235.cljs$lang$arity$variadic = G__10235__delegate;
    return G__10235
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__10240__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__10241 = y;
            var G__10242 = cljs.core.first.call(null, more);
            var G__10243 = cljs.core.next.call(null, more);
            x = G__10241;
            y = G__10242;
            more = G__10243;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__10240 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10240__delegate.call(this, x, y, more)
    };
    G__10240.cljs$lang$maxFixedArity = 2;
    G__10240.cljs$lang$applyTo = function(arglist__10244) {
      var x = cljs.core.first(arglist__10244);
      var y = cljs.core.first(cljs.core.next(arglist__10244));
      var more = cljs.core.rest(cljs.core.next(arglist__10244));
      return G__10240__delegate(x, y, more)
    };
    G__10240.cljs$lang$arity$variadic = G__10240__delegate;
    return G__10240
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__10245__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__10245 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10245__delegate.call(this, x, y, more)
    };
    G__10245.cljs$lang$maxFixedArity = 2;
    G__10245.cljs$lang$applyTo = function(arglist__10246) {
      var x = cljs.core.first(arglist__10246);
      var y = cljs.core.first(cljs.core.next(arglist__10246));
      var more = cljs.core.rest(cljs.core.next(arglist__10246));
      return G__10245__delegate(x, y, more)
    };
    G__10245.cljs$lang$arity$variadic = G__10245__delegate;
    return G__10245
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__10247__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__10247 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10247__delegate.call(this, x, y, more)
    };
    G__10247.cljs$lang$maxFixedArity = 2;
    G__10247.cljs$lang$applyTo = function(arglist__10248) {
      var x = cljs.core.first(arglist__10248);
      var y = cljs.core.first(cljs.core.next(arglist__10248));
      var more = cljs.core.rest(cljs.core.next(arglist__10248));
      return G__10247__delegate(x, y, more)
    };
    G__10247.cljs$lang$arity$variadic = G__10247__delegate;
    return G__10247
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__10250 = n % d;
  return cljs.core.fix.call(null, (n - rem__10250) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__10252 = cljs.core.quot.call(null, n, d);
  return n - d * q__10252
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__10255 = v - (v >> 1 & 1431655765);
  var v__10256 = (v__10255 & 858993459) + (v__10255 >> 2 & 858993459);
  return(v__10256 + (v__10256 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__10257__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__10258 = y;
            var G__10259 = cljs.core.first.call(null, more);
            var G__10260 = cljs.core.next.call(null, more);
            x = G__10258;
            y = G__10259;
            more = G__10260;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__10257 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10257__delegate.call(this, x, y, more)
    };
    G__10257.cljs$lang$maxFixedArity = 2;
    G__10257.cljs$lang$applyTo = function(arglist__10261) {
      var x = cljs.core.first(arglist__10261);
      var y = cljs.core.first(cljs.core.next(arglist__10261));
      var more = cljs.core.rest(cljs.core.next(arglist__10261));
      return G__10257__delegate(x, y, more)
    };
    G__10257.cljs$lang$arity$variadic = G__10257__delegate;
    return G__10257
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__10265 = n;
  var xs__10266 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____10267 = xs__10266;
      if(and__3822__auto____10267) {
        return n__10265 > 0
      }else {
        return and__3822__auto____10267
      }
    }())) {
      var G__10268 = n__10265 - 1;
      var G__10269 = cljs.core.next.call(null, xs__10266);
      n__10265 = G__10268;
      xs__10266 = G__10269;
      continue
    }else {
      return xs__10266
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__10270__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__10271 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__10272 = cljs.core.next.call(null, more);
            sb = G__10271;
            more = G__10272;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__10270 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__10270__delegate.call(this, x, ys)
    };
    G__10270.cljs$lang$maxFixedArity = 1;
    G__10270.cljs$lang$applyTo = function(arglist__10273) {
      var x = cljs.core.first(arglist__10273);
      var ys = cljs.core.rest(arglist__10273);
      return G__10270__delegate(x, ys)
    };
    G__10270.cljs$lang$arity$variadic = G__10270__delegate;
    return G__10270
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__10274__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__10275 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__10276 = cljs.core.next.call(null, more);
            sb = G__10275;
            more = G__10276;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__10274 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__10274__delegate.call(this, x, ys)
    };
    G__10274.cljs$lang$maxFixedArity = 1;
    G__10274.cljs$lang$applyTo = function(arglist__10277) {
      var x = cljs.core.first(arglist__10277);
      var ys = cljs.core.rest(arglist__10277);
      return G__10274__delegate(x, ys)
    };
    G__10274.cljs$lang$arity$variadic = G__10274__delegate;
    return G__10274
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__10278) {
    var fmt = cljs.core.first(arglist__10278);
    var args = cljs.core.rest(arglist__10278);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__10281 = cljs.core.seq.call(null, x);
    var ys__10282 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__10281 == null) {
        return ys__10282 == null
      }else {
        if(ys__10282 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__10281), cljs.core.first.call(null, ys__10282))) {
            var G__10283 = cljs.core.next.call(null, xs__10281);
            var G__10284 = cljs.core.next.call(null, ys__10282);
            xs__10281 = G__10283;
            ys__10282 = G__10284;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__10285_SHARP_, p2__10286_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__10285_SHARP_, cljs.core.hash.call(null, p2__10286_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__10290 = 0;
  var s__10291 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__10291) {
      var e__10292 = cljs.core.first.call(null, s__10291);
      var G__10293 = (h__10290 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__10292)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__10292)))) % 4503599627370496;
      var G__10294 = cljs.core.next.call(null, s__10291);
      h__10290 = G__10293;
      s__10291 = G__10294;
      continue
    }else {
      return h__10290
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__10298 = 0;
  var s__10299 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__10299) {
      var e__10300 = cljs.core.first.call(null, s__10299);
      var G__10301 = (h__10298 + cljs.core.hash.call(null, e__10300)) % 4503599627370496;
      var G__10302 = cljs.core.next.call(null, s__10299);
      h__10298 = G__10301;
      s__10299 = G__10302;
      continue
    }else {
      return h__10298
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__10323__10324 = cljs.core.seq.call(null, fn_map);
  if(G__10323__10324) {
    var G__10326__10328 = cljs.core.first.call(null, G__10323__10324);
    var vec__10327__10329 = G__10326__10328;
    var key_name__10330 = cljs.core.nth.call(null, vec__10327__10329, 0, null);
    var f__10331 = cljs.core.nth.call(null, vec__10327__10329, 1, null);
    var G__10323__10332 = G__10323__10324;
    var G__10326__10333 = G__10326__10328;
    var G__10323__10334 = G__10323__10332;
    while(true) {
      var vec__10335__10336 = G__10326__10333;
      var key_name__10337 = cljs.core.nth.call(null, vec__10335__10336, 0, null);
      var f__10338 = cljs.core.nth.call(null, vec__10335__10336, 1, null);
      var G__10323__10339 = G__10323__10334;
      var str_name__10340 = cljs.core.name.call(null, key_name__10337);
      obj[str_name__10340] = f__10338;
      var temp__3974__auto____10341 = cljs.core.next.call(null, G__10323__10339);
      if(temp__3974__auto____10341) {
        var G__10323__10342 = temp__3974__auto____10341;
        var G__10343 = cljs.core.first.call(null, G__10323__10342);
        var G__10344 = G__10323__10342;
        G__10326__10333 = G__10343;
        G__10323__10334 = G__10344;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10345 = this;
  var h__2188__auto____10346 = this__10345.__hash;
  if(!(h__2188__auto____10346 == null)) {
    return h__2188__auto____10346
  }else {
    var h__2188__auto____10347 = cljs.core.hash_coll.call(null, coll);
    this__10345.__hash = h__2188__auto____10347;
    return h__2188__auto____10347
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__10348 = this;
  if(this__10348.count === 1) {
    return null
  }else {
    return this__10348.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10349 = this;
  return new cljs.core.List(this__10349.meta, o, coll, this__10349.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__10350 = this;
  var this__10351 = this;
  return cljs.core.pr_str.call(null, this__10351)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10352 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10353 = this;
  return this__10353.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__10354 = this;
  return this__10354.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__10355 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10356 = this;
  return this__10356.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10357 = this;
  if(this__10357.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__10357.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10358 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10359 = this;
  return new cljs.core.List(meta, this__10359.first, this__10359.rest, this__10359.count, this__10359.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10360 = this;
  return this__10360.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10361 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10362 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__10363 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10364 = this;
  return new cljs.core.List(this__10364.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__10365 = this;
  var this__10366 = this;
  return cljs.core.pr_str.call(null, this__10366)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10367 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10368 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__10369 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__10370 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10371 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10372 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10373 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10374 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10375 = this;
  return this__10375.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10376 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__10380__10381 = coll;
  if(G__10380__10381) {
    if(function() {
      var or__3824__auto____10382 = G__10380__10381.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____10382) {
        return or__3824__auto____10382
      }else {
        return G__10380__10381.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__10380__10381.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__10380__10381)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__10380__10381)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__10383__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__10383 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10383__delegate.call(this, x, y, z, items)
    };
    G__10383.cljs$lang$maxFixedArity = 3;
    G__10383.cljs$lang$applyTo = function(arglist__10384) {
      var x = cljs.core.first(arglist__10384);
      var y = cljs.core.first(cljs.core.next(arglist__10384));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10384)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10384)));
      return G__10383__delegate(x, y, z, items)
    };
    G__10383.cljs$lang$arity$variadic = G__10383__delegate;
    return G__10383
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10385 = this;
  var h__2188__auto____10386 = this__10385.__hash;
  if(!(h__2188__auto____10386 == null)) {
    return h__2188__auto____10386
  }else {
    var h__2188__auto____10387 = cljs.core.hash_coll.call(null, coll);
    this__10385.__hash = h__2188__auto____10387;
    return h__2188__auto____10387
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__10388 = this;
  if(this__10388.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__10388.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10389 = this;
  return new cljs.core.Cons(null, o, coll, this__10389.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__10390 = this;
  var this__10391 = this;
  return cljs.core.pr_str.call(null, this__10391)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10392 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10393 = this;
  return this__10393.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10394 = this;
  if(this__10394.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__10394.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10395 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10396 = this;
  return new cljs.core.Cons(meta, this__10396.first, this__10396.rest, this__10396.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10397 = this;
  return this__10397.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10398 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10398.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____10403 = coll == null;
    if(or__3824__auto____10403) {
      return or__3824__auto____10403
    }else {
      var G__10404__10405 = coll;
      if(G__10404__10405) {
        if(function() {
          var or__3824__auto____10406 = G__10404__10405.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____10406) {
            return or__3824__auto____10406
          }else {
            return G__10404__10405.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__10404__10405.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__10404__10405)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__10404__10405)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__10410__10411 = x;
  if(G__10410__10411) {
    if(function() {
      var or__3824__auto____10412 = G__10410__10411.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____10412) {
        return or__3824__auto____10412
      }else {
        return G__10410__10411.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__10410__10411.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__10410__10411)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__10410__10411)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__10413 = null;
  var G__10413__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__10413__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__10413 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__10413__2.call(this, string, f);
      case 3:
        return G__10413__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10413
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__10414 = null;
  var G__10414__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__10414__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__10414 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10414__2.call(this, string, k);
      case 3:
        return G__10414__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10414
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__10415 = null;
  var G__10415__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__10415__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__10415 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10415__2.call(this, string, n);
      case 3:
        return G__10415__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10415
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__10427 = null;
  var G__10427__2 = function(this_sym10418, coll) {
    var this__10420 = this;
    var this_sym10418__10421 = this;
    var ___10422 = this_sym10418__10421;
    if(coll == null) {
      return null
    }else {
      var strobj__10423 = coll.strobj;
      if(strobj__10423 == null) {
        return cljs.core._lookup.call(null, coll, this__10420.k, null)
      }else {
        return strobj__10423[this__10420.k]
      }
    }
  };
  var G__10427__3 = function(this_sym10419, coll, not_found) {
    var this__10420 = this;
    var this_sym10419__10424 = this;
    var ___10425 = this_sym10419__10424;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__10420.k, not_found)
    }
  };
  G__10427 = function(this_sym10419, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10427__2.call(this, this_sym10419, coll);
      case 3:
        return G__10427__3.call(this, this_sym10419, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10427
}();
cljs.core.Keyword.prototype.apply = function(this_sym10416, args10417) {
  var this__10426 = this;
  return this_sym10416.call.apply(this_sym10416, [this_sym10416].concat(args10417.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__10436 = null;
  var G__10436__2 = function(this_sym10430, coll) {
    var this_sym10430__10432 = this;
    var this__10433 = this_sym10430__10432;
    return cljs.core._lookup.call(null, coll, this__10433.toString(), null)
  };
  var G__10436__3 = function(this_sym10431, coll, not_found) {
    var this_sym10431__10434 = this;
    var this__10435 = this_sym10431__10434;
    return cljs.core._lookup.call(null, coll, this__10435.toString(), not_found)
  };
  G__10436 = function(this_sym10431, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10436__2.call(this, this_sym10431, coll);
      case 3:
        return G__10436__3.call(this, this_sym10431, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10436
}();
String.prototype.apply = function(this_sym10428, args10429) {
  return this_sym10428.call.apply(this_sym10428, [this_sym10428].concat(args10429.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__10438 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__10438
  }else {
    lazy_seq.x = x__10438.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10439 = this;
  var h__2188__auto____10440 = this__10439.__hash;
  if(!(h__2188__auto____10440 == null)) {
    return h__2188__auto____10440
  }else {
    var h__2188__auto____10441 = cljs.core.hash_coll.call(null, coll);
    this__10439.__hash = h__2188__auto____10441;
    return h__2188__auto____10441
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__10442 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10443 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__10444 = this;
  var this__10445 = this;
  return cljs.core.pr_str.call(null, this__10445)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10446 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10447 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10448 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10449 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10450 = this;
  return new cljs.core.LazySeq(meta, this__10450.realized, this__10450.x, this__10450.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10451 = this;
  return this__10451.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10452 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10452.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__10453 = this;
  return this__10453.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__10454 = this;
  var ___10455 = this;
  this__10454.buf[this__10454.end] = o;
  return this__10454.end = this__10454.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__10456 = this;
  var ___10457 = this;
  var ret__10458 = new cljs.core.ArrayChunk(this__10456.buf, 0, this__10456.end);
  this__10456.buf = null;
  return ret__10458
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__10459 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__10459.arr[this__10459.off], this__10459.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__10460 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__10460.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__10461 = this;
  if(this__10461.off === this__10461.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__10461.arr, this__10461.off + 1, this__10461.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__10462 = this;
  return this__10462.arr[this__10462.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__10463 = this;
  if(function() {
    var and__3822__auto____10464 = i >= 0;
    if(and__3822__auto____10464) {
      return i < this__10463.end - this__10463.off
    }else {
      return and__3822__auto____10464
    }
  }()) {
    return this__10463.arr[this__10463.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__10465 = this;
  return this__10465.end - this__10465.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__10466 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10467 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10468 = this;
  return cljs.core._nth.call(null, this__10468.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10469 = this;
  if(cljs.core._count.call(null, this__10469.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__10469.chunk), this__10469.more, this__10469.meta)
  }else {
    if(this__10469.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__10469.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__10470 = this;
  if(this__10470.more == null) {
    return null
  }else {
    return this__10470.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10471 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__10472 = this;
  return new cljs.core.ChunkedCons(this__10472.chunk, this__10472.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10473 = this;
  return this__10473.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__10474 = this;
  return this__10474.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__10475 = this;
  if(this__10475.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__10475.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__10479__10480 = s;
    if(G__10479__10480) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____10481 = null;
        if(cljs.core.truth_(or__3824__auto____10481)) {
          return or__3824__auto____10481
        }else {
          return G__10479__10480.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__10479__10480.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__10479__10480)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__10479__10480)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__10484 = [];
  var s__10485 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__10485)) {
      ary__10484.push(cljs.core.first.call(null, s__10485));
      var G__10486 = cljs.core.next.call(null, s__10485);
      s__10485 = G__10486;
      continue
    }else {
      return ary__10484
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__10490 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__10491 = 0;
  var xs__10492 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__10492) {
      ret__10490[i__10491] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__10492));
      var G__10493 = i__10491 + 1;
      var G__10494 = cljs.core.next.call(null, xs__10492);
      i__10491 = G__10493;
      xs__10492 = G__10494;
      continue
    }else {
    }
    break
  }
  return ret__10490
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__10502 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__10503 = cljs.core.seq.call(null, init_val_or_seq);
      var i__10504 = 0;
      var s__10505 = s__10503;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____10506 = s__10505;
          if(and__3822__auto____10506) {
            return i__10504 < size
          }else {
            return and__3822__auto____10506
          }
        }())) {
          a__10502[i__10504] = cljs.core.first.call(null, s__10505);
          var G__10509 = i__10504 + 1;
          var G__10510 = cljs.core.next.call(null, s__10505);
          i__10504 = G__10509;
          s__10505 = G__10510;
          continue
        }else {
          return a__10502
        }
        break
      }
    }else {
      var n__2523__auto____10507 = size;
      var i__10508 = 0;
      while(true) {
        if(i__10508 < n__2523__auto____10507) {
          a__10502[i__10508] = init_val_or_seq;
          var G__10511 = i__10508 + 1;
          i__10508 = G__10511;
          continue
        }else {
        }
        break
      }
      return a__10502
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__10519 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__10520 = cljs.core.seq.call(null, init_val_or_seq);
      var i__10521 = 0;
      var s__10522 = s__10520;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____10523 = s__10522;
          if(and__3822__auto____10523) {
            return i__10521 < size
          }else {
            return and__3822__auto____10523
          }
        }())) {
          a__10519[i__10521] = cljs.core.first.call(null, s__10522);
          var G__10526 = i__10521 + 1;
          var G__10527 = cljs.core.next.call(null, s__10522);
          i__10521 = G__10526;
          s__10522 = G__10527;
          continue
        }else {
          return a__10519
        }
        break
      }
    }else {
      var n__2523__auto____10524 = size;
      var i__10525 = 0;
      while(true) {
        if(i__10525 < n__2523__auto____10524) {
          a__10519[i__10525] = init_val_or_seq;
          var G__10528 = i__10525 + 1;
          i__10525 = G__10528;
          continue
        }else {
        }
        break
      }
      return a__10519
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__10536 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__10537 = cljs.core.seq.call(null, init_val_or_seq);
      var i__10538 = 0;
      var s__10539 = s__10537;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____10540 = s__10539;
          if(and__3822__auto____10540) {
            return i__10538 < size
          }else {
            return and__3822__auto____10540
          }
        }())) {
          a__10536[i__10538] = cljs.core.first.call(null, s__10539);
          var G__10543 = i__10538 + 1;
          var G__10544 = cljs.core.next.call(null, s__10539);
          i__10538 = G__10543;
          s__10539 = G__10544;
          continue
        }else {
          return a__10536
        }
        break
      }
    }else {
      var n__2523__auto____10541 = size;
      var i__10542 = 0;
      while(true) {
        if(i__10542 < n__2523__auto____10541) {
          a__10536[i__10542] = init_val_or_seq;
          var G__10545 = i__10542 + 1;
          i__10542 = G__10545;
          continue
        }else {
        }
        break
      }
      return a__10536
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__10550 = s;
    var i__10551 = n;
    var sum__10552 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____10553 = i__10551 > 0;
        if(and__3822__auto____10553) {
          return cljs.core.seq.call(null, s__10550)
        }else {
          return and__3822__auto____10553
        }
      }())) {
        var G__10554 = cljs.core.next.call(null, s__10550);
        var G__10555 = i__10551 - 1;
        var G__10556 = sum__10552 + 1;
        s__10550 = G__10554;
        i__10551 = G__10555;
        sum__10552 = G__10556;
        continue
      }else {
        return sum__10552
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__10561 = cljs.core.seq.call(null, x);
      if(s__10561) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__10561)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__10561), concat.call(null, cljs.core.chunk_rest.call(null, s__10561), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__10561), concat.call(null, cljs.core.rest.call(null, s__10561), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__10565__delegate = function(x, y, zs) {
      var cat__10564 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__10563 = cljs.core.seq.call(null, xys);
          if(xys__10563) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__10563)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__10563), cat.call(null, cljs.core.chunk_rest.call(null, xys__10563), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__10563), cat.call(null, cljs.core.rest.call(null, xys__10563), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__10564.call(null, concat.call(null, x, y), zs)
    };
    var G__10565 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10565__delegate.call(this, x, y, zs)
    };
    G__10565.cljs$lang$maxFixedArity = 2;
    G__10565.cljs$lang$applyTo = function(arglist__10566) {
      var x = cljs.core.first(arglist__10566);
      var y = cljs.core.first(cljs.core.next(arglist__10566));
      var zs = cljs.core.rest(cljs.core.next(arglist__10566));
      return G__10565__delegate(x, y, zs)
    };
    G__10565.cljs$lang$arity$variadic = G__10565__delegate;
    return G__10565
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__10567__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__10567 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__10567__delegate.call(this, a, b, c, d, more)
    };
    G__10567.cljs$lang$maxFixedArity = 4;
    G__10567.cljs$lang$applyTo = function(arglist__10568) {
      var a = cljs.core.first(arglist__10568);
      var b = cljs.core.first(cljs.core.next(arglist__10568));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10568)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10568))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10568))));
      return G__10567__delegate(a, b, c, d, more)
    };
    G__10567.cljs$lang$arity$variadic = G__10567__delegate;
    return G__10567
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__10610 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__10611 = cljs.core._first.call(null, args__10610);
    var args__10612 = cljs.core._rest.call(null, args__10610);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__10611)
      }else {
        return f.call(null, a__10611)
      }
    }else {
      var b__10613 = cljs.core._first.call(null, args__10612);
      var args__10614 = cljs.core._rest.call(null, args__10612);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__10611, b__10613)
        }else {
          return f.call(null, a__10611, b__10613)
        }
      }else {
        var c__10615 = cljs.core._first.call(null, args__10614);
        var args__10616 = cljs.core._rest.call(null, args__10614);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__10611, b__10613, c__10615)
          }else {
            return f.call(null, a__10611, b__10613, c__10615)
          }
        }else {
          var d__10617 = cljs.core._first.call(null, args__10616);
          var args__10618 = cljs.core._rest.call(null, args__10616);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__10611, b__10613, c__10615, d__10617)
            }else {
              return f.call(null, a__10611, b__10613, c__10615, d__10617)
            }
          }else {
            var e__10619 = cljs.core._first.call(null, args__10618);
            var args__10620 = cljs.core._rest.call(null, args__10618);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__10611, b__10613, c__10615, d__10617, e__10619)
              }else {
                return f.call(null, a__10611, b__10613, c__10615, d__10617, e__10619)
              }
            }else {
              var f__10621 = cljs.core._first.call(null, args__10620);
              var args__10622 = cljs.core._rest.call(null, args__10620);
              if(argc === 6) {
                if(f__10621.cljs$lang$arity$6) {
                  return f__10621.cljs$lang$arity$6(a__10611, b__10613, c__10615, d__10617, e__10619, f__10621)
                }else {
                  return f__10621.call(null, a__10611, b__10613, c__10615, d__10617, e__10619, f__10621)
                }
              }else {
                var g__10623 = cljs.core._first.call(null, args__10622);
                var args__10624 = cljs.core._rest.call(null, args__10622);
                if(argc === 7) {
                  if(f__10621.cljs$lang$arity$7) {
                    return f__10621.cljs$lang$arity$7(a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623)
                  }else {
                    return f__10621.call(null, a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623)
                  }
                }else {
                  var h__10625 = cljs.core._first.call(null, args__10624);
                  var args__10626 = cljs.core._rest.call(null, args__10624);
                  if(argc === 8) {
                    if(f__10621.cljs$lang$arity$8) {
                      return f__10621.cljs$lang$arity$8(a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625)
                    }else {
                      return f__10621.call(null, a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625)
                    }
                  }else {
                    var i__10627 = cljs.core._first.call(null, args__10626);
                    var args__10628 = cljs.core._rest.call(null, args__10626);
                    if(argc === 9) {
                      if(f__10621.cljs$lang$arity$9) {
                        return f__10621.cljs$lang$arity$9(a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627)
                      }else {
                        return f__10621.call(null, a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627)
                      }
                    }else {
                      var j__10629 = cljs.core._first.call(null, args__10628);
                      var args__10630 = cljs.core._rest.call(null, args__10628);
                      if(argc === 10) {
                        if(f__10621.cljs$lang$arity$10) {
                          return f__10621.cljs$lang$arity$10(a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627, j__10629)
                        }else {
                          return f__10621.call(null, a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627, j__10629)
                        }
                      }else {
                        var k__10631 = cljs.core._first.call(null, args__10630);
                        var args__10632 = cljs.core._rest.call(null, args__10630);
                        if(argc === 11) {
                          if(f__10621.cljs$lang$arity$11) {
                            return f__10621.cljs$lang$arity$11(a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627, j__10629, k__10631)
                          }else {
                            return f__10621.call(null, a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627, j__10629, k__10631)
                          }
                        }else {
                          var l__10633 = cljs.core._first.call(null, args__10632);
                          var args__10634 = cljs.core._rest.call(null, args__10632);
                          if(argc === 12) {
                            if(f__10621.cljs$lang$arity$12) {
                              return f__10621.cljs$lang$arity$12(a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627, j__10629, k__10631, l__10633)
                            }else {
                              return f__10621.call(null, a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627, j__10629, k__10631, l__10633)
                            }
                          }else {
                            var m__10635 = cljs.core._first.call(null, args__10634);
                            var args__10636 = cljs.core._rest.call(null, args__10634);
                            if(argc === 13) {
                              if(f__10621.cljs$lang$arity$13) {
                                return f__10621.cljs$lang$arity$13(a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627, j__10629, k__10631, l__10633, m__10635)
                              }else {
                                return f__10621.call(null, a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627, j__10629, k__10631, l__10633, m__10635)
                              }
                            }else {
                              var n__10637 = cljs.core._first.call(null, args__10636);
                              var args__10638 = cljs.core._rest.call(null, args__10636);
                              if(argc === 14) {
                                if(f__10621.cljs$lang$arity$14) {
                                  return f__10621.cljs$lang$arity$14(a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627, j__10629, k__10631, l__10633, m__10635, n__10637)
                                }else {
                                  return f__10621.call(null, a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627, j__10629, k__10631, l__10633, m__10635, n__10637)
                                }
                              }else {
                                var o__10639 = cljs.core._first.call(null, args__10638);
                                var args__10640 = cljs.core._rest.call(null, args__10638);
                                if(argc === 15) {
                                  if(f__10621.cljs$lang$arity$15) {
                                    return f__10621.cljs$lang$arity$15(a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627, j__10629, k__10631, l__10633, m__10635, n__10637, o__10639)
                                  }else {
                                    return f__10621.call(null, a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627, j__10629, k__10631, l__10633, m__10635, n__10637, o__10639)
                                  }
                                }else {
                                  var p__10641 = cljs.core._first.call(null, args__10640);
                                  var args__10642 = cljs.core._rest.call(null, args__10640);
                                  if(argc === 16) {
                                    if(f__10621.cljs$lang$arity$16) {
                                      return f__10621.cljs$lang$arity$16(a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627, j__10629, k__10631, l__10633, m__10635, n__10637, o__10639, p__10641)
                                    }else {
                                      return f__10621.call(null, a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627, j__10629, k__10631, l__10633, m__10635, n__10637, o__10639, p__10641)
                                    }
                                  }else {
                                    var q__10643 = cljs.core._first.call(null, args__10642);
                                    var args__10644 = cljs.core._rest.call(null, args__10642);
                                    if(argc === 17) {
                                      if(f__10621.cljs$lang$arity$17) {
                                        return f__10621.cljs$lang$arity$17(a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627, j__10629, k__10631, l__10633, m__10635, n__10637, o__10639, p__10641, q__10643)
                                      }else {
                                        return f__10621.call(null, a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627, j__10629, k__10631, l__10633, m__10635, n__10637, o__10639, p__10641, q__10643)
                                      }
                                    }else {
                                      var r__10645 = cljs.core._first.call(null, args__10644);
                                      var args__10646 = cljs.core._rest.call(null, args__10644);
                                      if(argc === 18) {
                                        if(f__10621.cljs$lang$arity$18) {
                                          return f__10621.cljs$lang$arity$18(a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627, j__10629, k__10631, l__10633, m__10635, n__10637, o__10639, p__10641, q__10643, r__10645)
                                        }else {
                                          return f__10621.call(null, a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627, j__10629, k__10631, l__10633, m__10635, n__10637, o__10639, p__10641, q__10643, r__10645)
                                        }
                                      }else {
                                        var s__10647 = cljs.core._first.call(null, args__10646);
                                        var args__10648 = cljs.core._rest.call(null, args__10646);
                                        if(argc === 19) {
                                          if(f__10621.cljs$lang$arity$19) {
                                            return f__10621.cljs$lang$arity$19(a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627, j__10629, k__10631, l__10633, m__10635, n__10637, o__10639, p__10641, q__10643, r__10645, s__10647)
                                          }else {
                                            return f__10621.call(null, a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627, j__10629, k__10631, l__10633, m__10635, n__10637, o__10639, p__10641, q__10643, r__10645, s__10647)
                                          }
                                        }else {
                                          var t__10649 = cljs.core._first.call(null, args__10648);
                                          var args__10650 = cljs.core._rest.call(null, args__10648);
                                          if(argc === 20) {
                                            if(f__10621.cljs$lang$arity$20) {
                                              return f__10621.cljs$lang$arity$20(a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627, j__10629, k__10631, l__10633, m__10635, n__10637, o__10639, p__10641, q__10643, r__10645, s__10647, t__10649)
                                            }else {
                                              return f__10621.call(null, a__10611, b__10613, c__10615, d__10617, e__10619, f__10621, g__10623, h__10625, i__10627, j__10629, k__10631, l__10633, m__10635, n__10637, o__10639, p__10641, q__10643, r__10645, s__10647, t__10649)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__10665 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__10666 = cljs.core.bounded_count.call(null, args, fixed_arity__10665 + 1);
      if(bc__10666 <= fixed_arity__10665) {
        return cljs.core.apply_to.call(null, f, bc__10666, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__10667 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__10668 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__10669 = cljs.core.bounded_count.call(null, arglist__10667, fixed_arity__10668 + 1);
      if(bc__10669 <= fixed_arity__10668) {
        return cljs.core.apply_to.call(null, f, bc__10669, arglist__10667)
      }else {
        return f.cljs$lang$applyTo(arglist__10667)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__10667))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__10670 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__10671 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__10672 = cljs.core.bounded_count.call(null, arglist__10670, fixed_arity__10671 + 1);
      if(bc__10672 <= fixed_arity__10671) {
        return cljs.core.apply_to.call(null, f, bc__10672, arglist__10670)
      }else {
        return f.cljs$lang$applyTo(arglist__10670)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__10670))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__10673 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__10674 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__10675 = cljs.core.bounded_count.call(null, arglist__10673, fixed_arity__10674 + 1);
      if(bc__10675 <= fixed_arity__10674) {
        return cljs.core.apply_to.call(null, f, bc__10675, arglist__10673)
      }else {
        return f.cljs$lang$applyTo(arglist__10673)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__10673))
    }
  };
  var apply__6 = function() {
    var G__10679__delegate = function(f, a, b, c, d, args) {
      var arglist__10676 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__10677 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__10678 = cljs.core.bounded_count.call(null, arglist__10676, fixed_arity__10677 + 1);
        if(bc__10678 <= fixed_arity__10677) {
          return cljs.core.apply_to.call(null, f, bc__10678, arglist__10676)
        }else {
          return f.cljs$lang$applyTo(arglist__10676)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__10676))
      }
    };
    var G__10679 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__10679__delegate.call(this, f, a, b, c, d, args)
    };
    G__10679.cljs$lang$maxFixedArity = 5;
    G__10679.cljs$lang$applyTo = function(arglist__10680) {
      var f = cljs.core.first(arglist__10680);
      var a = cljs.core.first(cljs.core.next(arglist__10680));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10680)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10680))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10680)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10680)))));
      return G__10679__delegate(f, a, b, c, d, args)
    };
    G__10679.cljs$lang$arity$variadic = G__10679__delegate;
    return G__10679
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__10681) {
    var obj = cljs.core.first(arglist__10681);
    var f = cljs.core.first(cljs.core.next(arglist__10681));
    var args = cljs.core.rest(cljs.core.next(arglist__10681));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__10682__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__10682 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10682__delegate.call(this, x, y, more)
    };
    G__10682.cljs$lang$maxFixedArity = 2;
    G__10682.cljs$lang$applyTo = function(arglist__10683) {
      var x = cljs.core.first(arglist__10683);
      var y = cljs.core.first(cljs.core.next(arglist__10683));
      var more = cljs.core.rest(cljs.core.next(arglist__10683));
      return G__10682__delegate(x, y, more)
    };
    G__10682.cljs$lang$arity$variadic = G__10682__delegate;
    return G__10682
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__10684 = pred;
        var G__10685 = cljs.core.next.call(null, coll);
        pred = G__10684;
        coll = G__10685;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____10687 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____10687)) {
        return or__3824__auto____10687
      }else {
        var G__10688 = pred;
        var G__10689 = cljs.core.next.call(null, coll);
        pred = G__10688;
        coll = G__10689;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__10690 = null;
    var G__10690__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__10690__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__10690__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__10690__3 = function() {
      var G__10691__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__10691 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__10691__delegate.call(this, x, y, zs)
      };
      G__10691.cljs$lang$maxFixedArity = 2;
      G__10691.cljs$lang$applyTo = function(arglist__10692) {
        var x = cljs.core.first(arglist__10692);
        var y = cljs.core.first(cljs.core.next(arglist__10692));
        var zs = cljs.core.rest(cljs.core.next(arglist__10692));
        return G__10691__delegate(x, y, zs)
      };
      G__10691.cljs$lang$arity$variadic = G__10691__delegate;
      return G__10691
    }();
    G__10690 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__10690__0.call(this);
        case 1:
          return G__10690__1.call(this, x);
        case 2:
          return G__10690__2.call(this, x, y);
        default:
          return G__10690__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__10690.cljs$lang$maxFixedArity = 2;
    G__10690.cljs$lang$applyTo = G__10690__3.cljs$lang$applyTo;
    return G__10690
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__10693__delegate = function(args) {
      return x
    };
    var G__10693 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10693__delegate.call(this, args)
    };
    G__10693.cljs$lang$maxFixedArity = 0;
    G__10693.cljs$lang$applyTo = function(arglist__10694) {
      var args = cljs.core.seq(arglist__10694);
      return G__10693__delegate(args)
    };
    G__10693.cljs$lang$arity$variadic = G__10693__delegate;
    return G__10693
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__10701 = null;
      var G__10701__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__10701__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__10701__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__10701__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__10701__4 = function() {
        var G__10702__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__10702 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10702__delegate.call(this, x, y, z, args)
        };
        G__10702.cljs$lang$maxFixedArity = 3;
        G__10702.cljs$lang$applyTo = function(arglist__10703) {
          var x = cljs.core.first(arglist__10703);
          var y = cljs.core.first(cljs.core.next(arglist__10703));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10703)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10703)));
          return G__10702__delegate(x, y, z, args)
        };
        G__10702.cljs$lang$arity$variadic = G__10702__delegate;
        return G__10702
      }();
      G__10701 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10701__0.call(this);
          case 1:
            return G__10701__1.call(this, x);
          case 2:
            return G__10701__2.call(this, x, y);
          case 3:
            return G__10701__3.call(this, x, y, z);
          default:
            return G__10701__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10701.cljs$lang$maxFixedArity = 3;
      G__10701.cljs$lang$applyTo = G__10701__4.cljs$lang$applyTo;
      return G__10701
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__10704 = null;
      var G__10704__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__10704__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__10704__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__10704__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__10704__4 = function() {
        var G__10705__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__10705 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10705__delegate.call(this, x, y, z, args)
        };
        G__10705.cljs$lang$maxFixedArity = 3;
        G__10705.cljs$lang$applyTo = function(arglist__10706) {
          var x = cljs.core.first(arglist__10706);
          var y = cljs.core.first(cljs.core.next(arglist__10706));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10706)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10706)));
          return G__10705__delegate(x, y, z, args)
        };
        G__10705.cljs$lang$arity$variadic = G__10705__delegate;
        return G__10705
      }();
      G__10704 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10704__0.call(this);
          case 1:
            return G__10704__1.call(this, x);
          case 2:
            return G__10704__2.call(this, x, y);
          case 3:
            return G__10704__3.call(this, x, y, z);
          default:
            return G__10704__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10704.cljs$lang$maxFixedArity = 3;
      G__10704.cljs$lang$applyTo = G__10704__4.cljs$lang$applyTo;
      return G__10704
    }()
  };
  var comp__4 = function() {
    var G__10707__delegate = function(f1, f2, f3, fs) {
      var fs__10698 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__10708__delegate = function(args) {
          var ret__10699 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__10698), args);
          var fs__10700 = cljs.core.next.call(null, fs__10698);
          while(true) {
            if(fs__10700) {
              var G__10709 = cljs.core.first.call(null, fs__10700).call(null, ret__10699);
              var G__10710 = cljs.core.next.call(null, fs__10700);
              ret__10699 = G__10709;
              fs__10700 = G__10710;
              continue
            }else {
              return ret__10699
            }
            break
          }
        };
        var G__10708 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__10708__delegate.call(this, args)
        };
        G__10708.cljs$lang$maxFixedArity = 0;
        G__10708.cljs$lang$applyTo = function(arglist__10711) {
          var args = cljs.core.seq(arglist__10711);
          return G__10708__delegate(args)
        };
        G__10708.cljs$lang$arity$variadic = G__10708__delegate;
        return G__10708
      }()
    };
    var G__10707 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10707__delegate.call(this, f1, f2, f3, fs)
    };
    G__10707.cljs$lang$maxFixedArity = 3;
    G__10707.cljs$lang$applyTo = function(arglist__10712) {
      var f1 = cljs.core.first(arglist__10712);
      var f2 = cljs.core.first(cljs.core.next(arglist__10712));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10712)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10712)));
      return G__10707__delegate(f1, f2, f3, fs)
    };
    G__10707.cljs$lang$arity$variadic = G__10707__delegate;
    return G__10707
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__10713__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__10713 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__10713__delegate.call(this, args)
      };
      G__10713.cljs$lang$maxFixedArity = 0;
      G__10713.cljs$lang$applyTo = function(arglist__10714) {
        var args = cljs.core.seq(arglist__10714);
        return G__10713__delegate(args)
      };
      G__10713.cljs$lang$arity$variadic = G__10713__delegate;
      return G__10713
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__10715__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__10715 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__10715__delegate.call(this, args)
      };
      G__10715.cljs$lang$maxFixedArity = 0;
      G__10715.cljs$lang$applyTo = function(arglist__10716) {
        var args = cljs.core.seq(arglist__10716);
        return G__10715__delegate(args)
      };
      G__10715.cljs$lang$arity$variadic = G__10715__delegate;
      return G__10715
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__10717__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__10717 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__10717__delegate.call(this, args)
      };
      G__10717.cljs$lang$maxFixedArity = 0;
      G__10717.cljs$lang$applyTo = function(arglist__10718) {
        var args = cljs.core.seq(arglist__10718);
        return G__10717__delegate(args)
      };
      G__10717.cljs$lang$arity$variadic = G__10717__delegate;
      return G__10717
    }()
  };
  var partial__5 = function() {
    var G__10719__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__10720__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__10720 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__10720__delegate.call(this, args)
        };
        G__10720.cljs$lang$maxFixedArity = 0;
        G__10720.cljs$lang$applyTo = function(arglist__10721) {
          var args = cljs.core.seq(arglist__10721);
          return G__10720__delegate(args)
        };
        G__10720.cljs$lang$arity$variadic = G__10720__delegate;
        return G__10720
      }()
    };
    var G__10719 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__10719__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__10719.cljs$lang$maxFixedArity = 4;
    G__10719.cljs$lang$applyTo = function(arglist__10722) {
      var f = cljs.core.first(arglist__10722);
      var arg1 = cljs.core.first(cljs.core.next(arglist__10722));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10722)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10722))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10722))));
      return G__10719__delegate(f, arg1, arg2, arg3, more)
    };
    G__10719.cljs$lang$arity$variadic = G__10719__delegate;
    return G__10719
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__10723 = null;
      var G__10723__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__10723__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__10723__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__10723__4 = function() {
        var G__10724__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__10724 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10724__delegate.call(this, a, b, c, ds)
        };
        G__10724.cljs$lang$maxFixedArity = 3;
        G__10724.cljs$lang$applyTo = function(arglist__10725) {
          var a = cljs.core.first(arglist__10725);
          var b = cljs.core.first(cljs.core.next(arglist__10725));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10725)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10725)));
          return G__10724__delegate(a, b, c, ds)
        };
        G__10724.cljs$lang$arity$variadic = G__10724__delegate;
        return G__10724
      }();
      G__10723 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__10723__1.call(this, a);
          case 2:
            return G__10723__2.call(this, a, b);
          case 3:
            return G__10723__3.call(this, a, b, c);
          default:
            return G__10723__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10723.cljs$lang$maxFixedArity = 3;
      G__10723.cljs$lang$applyTo = G__10723__4.cljs$lang$applyTo;
      return G__10723
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__10726 = null;
      var G__10726__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__10726__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__10726__4 = function() {
        var G__10727__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__10727 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10727__delegate.call(this, a, b, c, ds)
        };
        G__10727.cljs$lang$maxFixedArity = 3;
        G__10727.cljs$lang$applyTo = function(arglist__10728) {
          var a = cljs.core.first(arglist__10728);
          var b = cljs.core.first(cljs.core.next(arglist__10728));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10728)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10728)));
          return G__10727__delegate(a, b, c, ds)
        };
        G__10727.cljs$lang$arity$variadic = G__10727__delegate;
        return G__10727
      }();
      G__10726 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__10726__2.call(this, a, b);
          case 3:
            return G__10726__3.call(this, a, b, c);
          default:
            return G__10726__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10726.cljs$lang$maxFixedArity = 3;
      G__10726.cljs$lang$applyTo = G__10726__4.cljs$lang$applyTo;
      return G__10726
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__10729 = null;
      var G__10729__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__10729__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__10729__4 = function() {
        var G__10730__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__10730 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10730__delegate.call(this, a, b, c, ds)
        };
        G__10730.cljs$lang$maxFixedArity = 3;
        G__10730.cljs$lang$applyTo = function(arglist__10731) {
          var a = cljs.core.first(arglist__10731);
          var b = cljs.core.first(cljs.core.next(arglist__10731));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10731)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10731)));
          return G__10730__delegate(a, b, c, ds)
        };
        G__10730.cljs$lang$arity$variadic = G__10730__delegate;
        return G__10730
      }();
      G__10729 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__10729__2.call(this, a, b);
          case 3:
            return G__10729__3.call(this, a, b, c);
          default:
            return G__10729__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10729.cljs$lang$maxFixedArity = 3;
      G__10729.cljs$lang$applyTo = G__10729__4.cljs$lang$applyTo;
      return G__10729
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__10747 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10755 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10755) {
        var s__10756 = temp__3974__auto____10755;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__10756)) {
          var c__10757 = cljs.core.chunk_first.call(null, s__10756);
          var size__10758 = cljs.core.count.call(null, c__10757);
          var b__10759 = cljs.core.chunk_buffer.call(null, size__10758);
          var n__2523__auto____10760 = size__10758;
          var i__10761 = 0;
          while(true) {
            if(i__10761 < n__2523__auto____10760) {
              cljs.core.chunk_append.call(null, b__10759, f.call(null, idx + i__10761, cljs.core._nth.call(null, c__10757, i__10761)));
              var G__10762 = i__10761 + 1;
              i__10761 = G__10762;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10759), mapi.call(null, idx + size__10758, cljs.core.chunk_rest.call(null, s__10756)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__10756)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__10756)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__10747.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10772 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10772) {
      var s__10773 = temp__3974__auto____10772;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__10773)) {
        var c__10774 = cljs.core.chunk_first.call(null, s__10773);
        var size__10775 = cljs.core.count.call(null, c__10774);
        var b__10776 = cljs.core.chunk_buffer.call(null, size__10775);
        var n__2523__auto____10777 = size__10775;
        var i__10778 = 0;
        while(true) {
          if(i__10778 < n__2523__auto____10777) {
            var x__10779 = f.call(null, cljs.core._nth.call(null, c__10774, i__10778));
            if(x__10779 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__10776, x__10779)
            }
            var G__10781 = i__10778 + 1;
            i__10778 = G__10781;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10776), keep.call(null, f, cljs.core.chunk_rest.call(null, s__10773)))
      }else {
        var x__10780 = f.call(null, cljs.core.first.call(null, s__10773));
        if(x__10780 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__10773))
        }else {
          return cljs.core.cons.call(null, x__10780, keep.call(null, f, cljs.core.rest.call(null, s__10773)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__10807 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10817 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10817) {
        var s__10818 = temp__3974__auto____10817;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__10818)) {
          var c__10819 = cljs.core.chunk_first.call(null, s__10818);
          var size__10820 = cljs.core.count.call(null, c__10819);
          var b__10821 = cljs.core.chunk_buffer.call(null, size__10820);
          var n__2523__auto____10822 = size__10820;
          var i__10823 = 0;
          while(true) {
            if(i__10823 < n__2523__auto____10822) {
              var x__10824 = f.call(null, idx + i__10823, cljs.core._nth.call(null, c__10819, i__10823));
              if(x__10824 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__10821, x__10824)
              }
              var G__10826 = i__10823 + 1;
              i__10823 = G__10826;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10821), keepi.call(null, idx + size__10820, cljs.core.chunk_rest.call(null, s__10818)))
        }else {
          var x__10825 = f.call(null, idx, cljs.core.first.call(null, s__10818));
          if(x__10825 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__10818))
          }else {
            return cljs.core.cons.call(null, x__10825, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__10818)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__10807.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____10912 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____10912)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____10912
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____10913 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____10913)) {
            var and__3822__auto____10914 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____10914)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____10914
            }
          }else {
            return and__3822__auto____10913
          }
        }())
      };
      var ep1__4 = function() {
        var G__10983__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____10915 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____10915)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____10915
            }
          }())
        };
        var G__10983 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10983__delegate.call(this, x, y, z, args)
        };
        G__10983.cljs$lang$maxFixedArity = 3;
        G__10983.cljs$lang$applyTo = function(arglist__10984) {
          var x = cljs.core.first(arglist__10984);
          var y = cljs.core.first(cljs.core.next(arglist__10984));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10984)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10984)));
          return G__10983__delegate(x, y, z, args)
        };
        G__10983.cljs$lang$arity$variadic = G__10983__delegate;
        return G__10983
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____10927 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____10927)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____10927
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____10928 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____10928)) {
            var and__3822__auto____10929 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____10929)) {
              var and__3822__auto____10930 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____10930)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____10930
              }
            }else {
              return and__3822__auto____10929
            }
          }else {
            return and__3822__auto____10928
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____10931 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____10931)) {
            var and__3822__auto____10932 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____10932)) {
              var and__3822__auto____10933 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____10933)) {
                var and__3822__auto____10934 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____10934)) {
                  var and__3822__auto____10935 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____10935)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____10935
                  }
                }else {
                  return and__3822__auto____10934
                }
              }else {
                return and__3822__auto____10933
              }
            }else {
              return and__3822__auto____10932
            }
          }else {
            return and__3822__auto____10931
          }
        }())
      };
      var ep2__4 = function() {
        var G__10985__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____10936 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____10936)) {
              return cljs.core.every_QMARK_.call(null, function(p1__10782_SHARP_) {
                var and__3822__auto____10937 = p1.call(null, p1__10782_SHARP_);
                if(cljs.core.truth_(and__3822__auto____10937)) {
                  return p2.call(null, p1__10782_SHARP_)
                }else {
                  return and__3822__auto____10937
                }
              }, args)
            }else {
              return and__3822__auto____10936
            }
          }())
        };
        var G__10985 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10985__delegate.call(this, x, y, z, args)
        };
        G__10985.cljs$lang$maxFixedArity = 3;
        G__10985.cljs$lang$applyTo = function(arglist__10986) {
          var x = cljs.core.first(arglist__10986);
          var y = cljs.core.first(cljs.core.next(arglist__10986));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10986)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10986)));
          return G__10985__delegate(x, y, z, args)
        };
        G__10985.cljs$lang$arity$variadic = G__10985__delegate;
        return G__10985
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____10956 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____10956)) {
            var and__3822__auto____10957 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____10957)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____10957
            }
          }else {
            return and__3822__auto____10956
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____10958 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____10958)) {
            var and__3822__auto____10959 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____10959)) {
              var and__3822__auto____10960 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____10960)) {
                var and__3822__auto____10961 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____10961)) {
                  var and__3822__auto____10962 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____10962)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____10962
                  }
                }else {
                  return and__3822__auto____10961
                }
              }else {
                return and__3822__auto____10960
              }
            }else {
              return and__3822__auto____10959
            }
          }else {
            return and__3822__auto____10958
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____10963 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____10963)) {
            var and__3822__auto____10964 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____10964)) {
              var and__3822__auto____10965 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____10965)) {
                var and__3822__auto____10966 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____10966)) {
                  var and__3822__auto____10967 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____10967)) {
                    var and__3822__auto____10968 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____10968)) {
                      var and__3822__auto____10969 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____10969)) {
                        var and__3822__auto____10970 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____10970)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____10970
                        }
                      }else {
                        return and__3822__auto____10969
                      }
                    }else {
                      return and__3822__auto____10968
                    }
                  }else {
                    return and__3822__auto____10967
                  }
                }else {
                  return and__3822__auto____10966
                }
              }else {
                return and__3822__auto____10965
              }
            }else {
              return and__3822__auto____10964
            }
          }else {
            return and__3822__auto____10963
          }
        }())
      };
      var ep3__4 = function() {
        var G__10987__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____10971 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____10971)) {
              return cljs.core.every_QMARK_.call(null, function(p1__10783_SHARP_) {
                var and__3822__auto____10972 = p1.call(null, p1__10783_SHARP_);
                if(cljs.core.truth_(and__3822__auto____10972)) {
                  var and__3822__auto____10973 = p2.call(null, p1__10783_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____10973)) {
                    return p3.call(null, p1__10783_SHARP_)
                  }else {
                    return and__3822__auto____10973
                  }
                }else {
                  return and__3822__auto____10972
                }
              }, args)
            }else {
              return and__3822__auto____10971
            }
          }())
        };
        var G__10987 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10987__delegate.call(this, x, y, z, args)
        };
        G__10987.cljs$lang$maxFixedArity = 3;
        G__10987.cljs$lang$applyTo = function(arglist__10988) {
          var x = cljs.core.first(arglist__10988);
          var y = cljs.core.first(cljs.core.next(arglist__10988));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10988)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10988)));
          return G__10987__delegate(x, y, z, args)
        };
        G__10987.cljs$lang$arity$variadic = G__10987__delegate;
        return G__10987
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__10989__delegate = function(p1, p2, p3, ps) {
      var ps__10974 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__10784_SHARP_) {
            return p1__10784_SHARP_.call(null, x)
          }, ps__10974)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__10785_SHARP_) {
            var and__3822__auto____10979 = p1__10785_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____10979)) {
              return p1__10785_SHARP_.call(null, y)
            }else {
              return and__3822__auto____10979
            }
          }, ps__10974)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__10786_SHARP_) {
            var and__3822__auto____10980 = p1__10786_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____10980)) {
              var and__3822__auto____10981 = p1__10786_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____10981)) {
                return p1__10786_SHARP_.call(null, z)
              }else {
                return and__3822__auto____10981
              }
            }else {
              return and__3822__auto____10980
            }
          }, ps__10974)
        };
        var epn__4 = function() {
          var G__10990__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____10982 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____10982)) {
                return cljs.core.every_QMARK_.call(null, function(p1__10787_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__10787_SHARP_, args)
                }, ps__10974)
              }else {
                return and__3822__auto____10982
              }
            }())
          };
          var G__10990 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__10990__delegate.call(this, x, y, z, args)
          };
          G__10990.cljs$lang$maxFixedArity = 3;
          G__10990.cljs$lang$applyTo = function(arglist__10991) {
            var x = cljs.core.first(arglist__10991);
            var y = cljs.core.first(cljs.core.next(arglist__10991));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10991)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10991)));
            return G__10990__delegate(x, y, z, args)
          };
          G__10990.cljs$lang$arity$variadic = G__10990__delegate;
          return G__10990
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__10989 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10989__delegate.call(this, p1, p2, p3, ps)
    };
    G__10989.cljs$lang$maxFixedArity = 3;
    G__10989.cljs$lang$applyTo = function(arglist__10992) {
      var p1 = cljs.core.first(arglist__10992);
      var p2 = cljs.core.first(cljs.core.next(arglist__10992));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10992)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10992)));
      return G__10989__delegate(p1, p2, p3, ps)
    };
    G__10989.cljs$lang$arity$variadic = G__10989__delegate;
    return G__10989
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____11073 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____11073)) {
          return or__3824__auto____11073
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____11074 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____11074)) {
          return or__3824__auto____11074
        }else {
          var or__3824__auto____11075 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____11075)) {
            return or__3824__auto____11075
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__11144__delegate = function(x, y, z, args) {
          var or__3824__auto____11076 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____11076)) {
            return or__3824__auto____11076
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__11144 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11144__delegate.call(this, x, y, z, args)
        };
        G__11144.cljs$lang$maxFixedArity = 3;
        G__11144.cljs$lang$applyTo = function(arglist__11145) {
          var x = cljs.core.first(arglist__11145);
          var y = cljs.core.first(cljs.core.next(arglist__11145));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11145)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11145)));
          return G__11144__delegate(x, y, z, args)
        };
        G__11144.cljs$lang$arity$variadic = G__11144__delegate;
        return G__11144
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____11088 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____11088)) {
          return or__3824__auto____11088
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____11089 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____11089)) {
          return or__3824__auto____11089
        }else {
          var or__3824__auto____11090 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____11090)) {
            return or__3824__auto____11090
          }else {
            var or__3824__auto____11091 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____11091)) {
              return or__3824__auto____11091
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____11092 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____11092)) {
          return or__3824__auto____11092
        }else {
          var or__3824__auto____11093 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____11093)) {
            return or__3824__auto____11093
          }else {
            var or__3824__auto____11094 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____11094)) {
              return or__3824__auto____11094
            }else {
              var or__3824__auto____11095 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____11095)) {
                return or__3824__auto____11095
              }else {
                var or__3824__auto____11096 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____11096)) {
                  return or__3824__auto____11096
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__11146__delegate = function(x, y, z, args) {
          var or__3824__auto____11097 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____11097)) {
            return or__3824__auto____11097
          }else {
            return cljs.core.some.call(null, function(p1__10827_SHARP_) {
              var or__3824__auto____11098 = p1.call(null, p1__10827_SHARP_);
              if(cljs.core.truth_(or__3824__auto____11098)) {
                return or__3824__auto____11098
              }else {
                return p2.call(null, p1__10827_SHARP_)
              }
            }, args)
          }
        };
        var G__11146 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11146__delegate.call(this, x, y, z, args)
        };
        G__11146.cljs$lang$maxFixedArity = 3;
        G__11146.cljs$lang$applyTo = function(arglist__11147) {
          var x = cljs.core.first(arglist__11147);
          var y = cljs.core.first(cljs.core.next(arglist__11147));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11147)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11147)));
          return G__11146__delegate(x, y, z, args)
        };
        G__11146.cljs$lang$arity$variadic = G__11146__delegate;
        return G__11146
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____11117 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____11117)) {
          return or__3824__auto____11117
        }else {
          var or__3824__auto____11118 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____11118)) {
            return or__3824__auto____11118
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____11119 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____11119)) {
          return or__3824__auto____11119
        }else {
          var or__3824__auto____11120 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____11120)) {
            return or__3824__auto____11120
          }else {
            var or__3824__auto____11121 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____11121)) {
              return or__3824__auto____11121
            }else {
              var or__3824__auto____11122 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____11122)) {
                return or__3824__auto____11122
              }else {
                var or__3824__auto____11123 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____11123)) {
                  return or__3824__auto____11123
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____11124 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____11124)) {
          return or__3824__auto____11124
        }else {
          var or__3824__auto____11125 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____11125)) {
            return or__3824__auto____11125
          }else {
            var or__3824__auto____11126 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____11126)) {
              return or__3824__auto____11126
            }else {
              var or__3824__auto____11127 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____11127)) {
                return or__3824__auto____11127
              }else {
                var or__3824__auto____11128 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____11128)) {
                  return or__3824__auto____11128
                }else {
                  var or__3824__auto____11129 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____11129)) {
                    return or__3824__auto____11129
                  }else {
                    var or__3824__auto____11130 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____11130)) {
                      return or__3824__auto____11130
                    }else {
                      var or__3824__auto____11131 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____11131)) {
                        return or__3824__auto____11131
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__11148__delegate = function(x, y, z, args) {
          var or__3824__auto____11132 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____11132)) {
            return or__3824__auto____11132
          }else {
            return cljs.core.some.call(null, function(p1__10828_SHARP_) {
              var or__3824__auto____11133 = p1.call(null, p1__10828_SHARP_);
              if(cljs.core.truth_(or__3824__auto____11133)) {
                return or__3824__auto____11133
              }else {
                var or__3824__auto____11134 = p2.call(null, p1__10828_SHARP_);
                if(cljs.core.truth_(or__3824__auto____11134)) {
                  return or__3824__auto____11134
                }else {
                  return p3.call(null, p1__10828_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__11148 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11148__delegate.call(this, x, y, z, args)
        };
        G__11148.cljs$lang$maxFixedArity = 3;
        G__11148.cljs$lang$applyTo = function(arglist__11149) {
          var x = cljs.core.first(arglist__11149);
          var y = cljs.core.first(cljs.core.next(arglist__11149));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11149)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11149)));
          return G__11148__delegate(x, y, z, args)
        };
        G__11148.cljs$lang$arity$variadic = G__11148__delegate;
        return G__11148
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__11150__delegate = function(p1, p2, p3, ps) {
      var ps__11135 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__10829_SHARP_) {
            return p1__10829_SHARP_.call(null, x)
          }, ps__11135)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__10830_SHARP_) {
            var or__3824__auto____11140 = p1__10830_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____11140)) {
              return or__3824__auto____11140
            }else {
              return p1__10830_SHARP_.call(null, y)
            }
          }, ps__11135)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__10831_SHARP_) {
            var or__3824__auto____11141 = p1__10831_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____11141)) {
              return or__3824__auto____11141
            }else {
              var or__3824__auto____11142 = p1__10831_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____11142)) {
                return or__3824__auto____11142
              }else {
                return p1__10831_SHARP_.call(null, z)
              }
            }
          }, ps__11135)
        };
        var spn__4 = function() {
          var G__11151__delegate = function(x, y, z, args) {
            var or__3824__auto____11143 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____11143)) {
              return or__3824__auto____11143
            }else {
              return cljs.core.some.call(null, function(p1__10832_SHARP_) {
                return cljs.core.some.call(null, p1__10832_SHARP_, args)
              }, ps__11135)
            }
          };
          var G__11151 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__11151__delegate.call(this, x, y, z, args)
          };
          G__11151.cljs$lang$maxFixedArity = 3;
          G__11151.cljs$lang$applyTo = function(arglist__11152) {
            var x = cljs.core.first(arglist__11152);
            var y = cljs.core.first(cljs.core.next(arglist__11152));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11152)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11152)));
            return G__11151__delegate(x, y, z, args)
          };
          G__11151.cljs$lang$arity$variadic = G__11151__delegate;
          return G__11151
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__11150 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11150__delegate.call(this, p1, p2, p3, ps)
    };
    G__11150.cljs$lang$maxFixedArity = 3;
    G__11150.cljs$lang$applyTo = function(arglist__11153) {
      var p1 = cljs.core.first(arglist__11153);
      var p2 = cljs.core.first(cljs.core.next(arglist__11153));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11153)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11153)));
      return G__11150__delegate(p1, p2, p3, ps)
    };
    G__11150.cljs$lang$arity$variadic = G__11150__delegate;
    return G__11150
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____11172 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____11172) {
        var s__11173 = temp__3974__auto____11172;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__11173)) {
          var c__11174 = cljs.core.chunk_first.call(null, s__11173);
          var size__11175 = cljs.core.count.call(null, c__11174);
          var b__11176 = cljs.core.chunk_buffer.call(null, size__11175);
          var n__2523__auto____11177 = size__11175;
          var i__11178 = 0;
          while(true) {
            if(i__11178 < n__2523__auto____11177) {
              cljs.core.chunk_append.call(null, b__11176, f.call(null, cljs.core._nth.call(null, c__11174, i__11178)));
              var G__11190 = i__11178 + 1;
              i__11178 = G__11190;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11176), map.call(null, f, cljs.core.chunk_rest.call(null, s__11173)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__11173)), map.call(null, f, cljs.core.rest.call(null, s__11173)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__11179 = cljs.core.seq.call(null, c1);
      var s2__11180 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____11181 = s1__11179;
        if(and__3822__auto____11181) {
          return s2__11180
        }else {
          return and__3822__auto____11181
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__11179), cljs.core.first.call(null, s2__11180)), map.call(null, f, cljs.core.rest.call(null, s1__11179), cljs.core.rest.call(null, s2__11180)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__11182 = cljs.core.seq.call(null, c1);
      var s2__11183 = cljs.core.seq.call(null, c2);
      var s3__11184 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____11185 = s1__11182;
        if(and__3822__auto____11185) {
          var and__3822__auto____11186 = s2__11183;
          if(and__3822__auto____11186) {
            return s3__11184
          }else {
            return and__3822__auto____11186
          }
        }else {
          return and__3822__auto____11185
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__11182), cljs.core.first.call(null, s2__11183), cljs.core.first.call(null, s3__11184)), map.call(null, f, cljs.core.rest.call(null, s1__11182), cljs.core.rest.call(null, s2__11183), cljs.core.rest.call(null, s3__11184)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__11191__delegate = function(f, c1, c2, c3, colls) {
      var step__11189 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__11188 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__11188)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__11188), step.call(null, map.call(null, cljs.core.rest, ss__11188)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__10993_SHARP_) {
        return cljs.core.apply.call(null, f, p1__10993_SHARP_)
      }, step__11189.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__11191 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__11191__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__11191.cljs$lang$maxFixedArity = 4;
    G__11191.cljs$lang$applyTo = function(arglist__11192) {
      var f = cljs.core.first(arglist__11192);
      var c1 = cljs.core.first(cljs.core.next(arglist__11192));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11192)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11192))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11192))));
      return G__11191__delegate(f, c1, c2, c3, colls)
    };
    G__11191.cljs$lang$arity$variadic = G__11191__delegate;
    return G__11191
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____11195 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____11195) {
        var s__11196 = temp__3974__auto____11195;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__11196), take.call(null, n - 1, cljs.core.rest.call(null, s__11196)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__11202 = function(n, coll) {
    while(true) {
      var s__11200 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____11201 = n > 0;
        if(and__3822__auto____11201) {
          return s__11200
        }else {
          return and__3822__auto____11201
        }
      }())) {
        var G__11203 = n - 1;
        var G__11204 = cljs.core.rest.call(null, s__11200);
        n = G__11203;
        coll = G__11204;
        continue
      }else {
        return s__11200
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__11202.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__11207 = cljs.core.seq.call(null, coll);
  var lead__11208 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__11208) {
      var G__11209 = cljs.core.next.call(null, s__11207);
      var G__11210 = cljs.core.next.call(null, lead__11208);
      s__11207 = G__11209;
      lead__11208 = G__11210;
      continue
    }else {
      return s__11207
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__11216 = function(pred, coll) {
    while(true) {
      var s__11214 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____11215 = s__11214;
        if(and__3822__auto____11215) {
          return pred.call(null, cljs.core.first.call(null, s__11214))
        }else {
          return and__3822__auto____11215
        }
      }())) {
        var G__11217 = pred;
        var G__11218 = cljs.core.rest.call(null, s__11214);
        pred = G__11217;
        coll = G__11218;
        continue
      }else {
        return s__11214
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__11216.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____11221 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____11221) {
      var s__11222 = temp__3974__auto____11221;
      return cljs.core.concat.call(null, s__11222, cycle.call(null, s__11222))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__11227 = cljs.core.seq.call(null, c1);
      var s2__11228 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____11229 = s1__11227;
        if(and__3822__auto____11229) {
          return s2__11228
        }else {
          return and__3822__auto____11229
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__11227), cljs.core.cons.call(null, cljs.core.first.call(null, s2__11228), interleave.call(null, cljs.core.rest.call(null, s1__11227), cljs.core.rest.call(null, s2__11228))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__11231__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__11230 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__11230)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__11230), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__11230)))
        }else {
          return null
        }
      }, null)
    };
    var G__11231 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11231__delegate.call(this, c1, c2, colls)
    };
    G__11231.cljs$lang$maxFixedArity = 2;
    G__11231.cljs$lang$applyTo = function(arglist__11232) {
      var c1 = cljs.core.first(arglist__11232);
      var c2 = cljs.core.first(cljs.core.next(arglist__11232));
      var colls = cljs.core.rest(cljs.core.next(arglist__11232));
      return G__11231__delegate(c1, c2, colls)
    };
    G__11231.cljs$lang$arity$variadic = G__11231__delegate;
    return G__11231
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__11242 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____11240 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____11240) {
        var coll__11241 = temp__3971__auto____11240;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__11241), cat.call(null, cljs.core.rest.call(null, coll__11241), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__11242.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__11243__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__11243 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11243__delegate.call(this, f, coll, colls)
    };
    G__11243.cljs$lang$maxFixedArity = 2;
    G__11243.cljs$lang$applyTo = function(arglist__11244) {
      var f = cljs.core.first(arglist__11244);
      var coll = cljs.core.first(cljs.core.next(arglist__11244));
      var colls = cljs.core.rest(cljs.core.next(arglist__11244));
      return G__11243__delegate(f, coll, colls)
    };
    G__11243.cljs$lang$arity$variadic = G__11243__delegate;
    return G__11243
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____11254 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____11254) {
      var s__11255 = temp__3974__auto____11254;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__11255)) {
        var c__11256 = cljs.core.chunk_first.call(null, s__11255);
        var size__11257 = cljs.core.count.call(null, c__11256);
        var b__11258 = cljs.core.chunk_buffer.call(null, size__11257);
        var n__2523__auto____11259 = size__11257;
        var i__11260 = 0;
        while(true) {
          if(i__11260 < n__2523__auto____11259) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__11256, i__11260)))) {
              cljs.core.chunk_append.call(null, b__11258, cljs.core._nth.call(null, c__11256, i__11260))
            }else {
            }
            var G__11263 = i__11260 + 1;
            i__11260 = G__11263;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11258), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__11255)))
      }else {
        var f__11261 = cljs.core.first.call(null, s__11255);
        var r__11262 = cljs.core.rest.call(null, s__11255);
        if(cljs.core.truth_(pred.call(null, f__11261))) {
          return cljs.core.cons.call(null, f__11261, filter.call(null, pred, r__11262))
        }else {
          return filter.call(null, pred, r__11262)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__11266 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__11266.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__11264_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__11264_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__11270__11271 = to;
    if(G__11270__11271) {
      if(function() {
        var or__3824__auto____11272 = G__11270__11271.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____11272) {
          return or__3824__auto____11272
        }else {
          return G__11270__11271.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__11270__11271.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__11270__11271)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__11270__11271)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__11273__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__11273 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__11273__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__11273.cljs$lang$maxFixedArity = 4;
    G__11273.cljs$lang$applyTo = function(arglist__11274) {
      var f = cljs.core.first(arglist__11274);
      var c1 = cljs.core.first(cljs.core.next(arglist__11274));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11274)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11274))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11274))));
      return G__11273__delegate(f, c1, c2, c3, colls)
    };
    G__11273.cljs$lang$arity$variadic = G__11273__delegate;
    return G__11273
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____11281 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____11281) {
        var s__11282 = temp__3974__auto____11281;
        var p__11283 = cljs.core.take.call(null, n, s__11282);
        if(n === cljs.core.count.call(null, p__11283)) {
          return cljs.core.cons.call(null, p__11283, partition.call(null, n, step, cljs.core.drop.call(null, step, s__11282)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____11284 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____11284) {
        var s__11285 = temp__3974__auto____11284;
        var p__11286 = cljs.core.take.call(null, n, s__11285);
        if(n === cljs.core.count.call(null, p__11286)) {
          return cljs.core.cons.call(null, p__11286, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__11285)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__11286, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__11291 = cljs.core.lookup_sentinel;
    var m__11292 = m;
    var ks__11293 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__11293) {
        var m__11294 = cljs.core._lookup.call(null, m__11292, cljs.core.first.call(null, ks__11293), sentinel__11291);
        if(sentinel__11291 === m__11294) {
          return not_found
        }else {
          var G__11295 = sentinel__11291;
          var G__11296 = m__11294;
          var G__11297 = cljs.core.next.call(null, ks__11293);
          sentinel__11291 = G__11295;
          m__11292 = G__11296;
          ks__11293 = G__11297;
          continue
        }
      }else {
        return m__11292
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__11298, v) {
  var vec__11303__11304 = p__11298;
  var k__11305 = cljs.core.nth.call(null, vec__11303__11304, 0, null);
  var ks__11306 = cljs.core.nthnext.call(null, vec__11303__11304, 1);
  if(cljs.core.truth_(ks__11306)) {
    return cljs.core.assoc.call(null, m, k__11305, assoc_in.call(null, cljs.core._lookup.call(null, m, k__11305, null), ks__11306, v))
  }else {
    return cljs.core.assoc.call(null, m, k__11305, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__11307, f, args) {
    var vec__11312__11313 = p__11307;
    var k__11314 = cljs.core.nth.call(null, vec__11312__11313, 0, null);
    var ks__11315 = cljs.core.nthnext.call(null, vec__11312__11313, 1);
    if(cljs.core.truth_(ks__11315)) {
      return cljs.core.assoc.call(null, m, k__11314, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__11314, null), ks__11315, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__11314, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__11314, null), args))
    }
  };
  var update_in = function(m, p__11307, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__11307, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__11316) {
    var m = cljs.core.first(arglist__11316);
    var p__11307 = cljs.core.first(cljs.core.next(arglist__11316));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11316)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11316)));
    return update_in__delegate(m, p__11307, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11319 = this;
  var h__2188__auto____11320 = this__11319.__hash;
  if(!(h__2188__auto____11320 == null)) {
    return h__2188__auto____11320
  }else {
    var h__2188__auto____11321 = cljs.core.hash_coll.call(null, coll);
    this__11319.__hash = h__2188__auto____11321;
    return h__2188__auto____11321
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__11322 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__11323 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__11324 = this;
  var new_array__11325 = this__11324.array.slice();
  new_array__11325[k] = v;
  return new cljs.core.Vector(this__11324.meta, new_array__11325, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__11356 = null;
  var G__11356__2 = function(this_sym11326, k) {
    var this__11328 = this;
    var this_sym11326__11329 = this;
    var coll__11330 = this_sym11326__11329;
    return coll__11330.cljs$core$ILookup$_lookup$arity$2(coll__11330, k)
  };
  var G__11356__3 = function(this_sym11327, k, not_found) {
    var this__11328 = this;
    var this_sym11327__11331 = this;
    var coll__11332 = this_sym11327__11331;
    return coll__11332.cljs$core$ILookup$_lookup$arity$3(coll__11332, k, not_found)
  };
  G__11356 = function(this_sym11327, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11356__2.call(this, this_sym11327, k);
      case 3:
        return G__11356__3.call(this, this_sym11327, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11356
}();
cljs.core.Vector.prototype.apply = function(this_sym11317, args11318) {
  var this__11333 = this;
  return this_sym11317.call.apply(this_sym11317, [this_sym11317].concat(args11318.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11334 = this;
  var new_array__11335 = this__11334.array.slice();
  new_array__11335.push(o);
  return new cljs.core.Vector(this__11334.meta, new_array__11335, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__11336 = this;
  var this__11337 = this;
  return cljs.core.pr_str.call(null, this__11337)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__11338 = this;
  return cljs.core.ci_reduce.call(null, this__11338.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__11339 = this;
  return cljs.core.ci_reduce.call(null, this__11339.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11340 = this;
  if(this__11340.array.length > 0) {
    var vector_seq__11341 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__11340.array.length) {
          return cljs.core.cons.call(null, this__11340.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__11341.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11342 = this;
  return this__11342.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__11343 = this;
  var count__11344 = this__11343.array.length;
  if(count__11344 > 0) {
    return this__11343.array[count__11344 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__11345 = this;
  if(this__11345.array.length > 0) {
    var new_array__11346 = this__11345.array.slice();
    new_array__11346.pop();
    return new cljs.core.Vector(this__11345.meta, new_array__11346, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__11347 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11348 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11349 = this;
  return new cljs.core.Vector(meta, this__11349.array, this__11349.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11350 = this;
  return this__11350.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__11351 = this;
  if(function() {
    var and__3822__auto____11352 = 0 <= n;
    if(and__3822__auto____11352) {
      return n < this__11351.array.length
    }else {
      return and__3822__auto____11352
    }
  }()) {
    return this__11351.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__11353 = this;
  if(function() {
    var and__3822__auto____11354 = 0 <= n;
    if(and__3822__auto____11354) {
      return n < this__11353.array.length
    }else {
      return and__3822__auto____11354
    }
  }()) {
    return this__11353.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11355 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__11355.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2306__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__11358 = pv.cnt;
  if(cnt__11358 < 32) {
    return 0
  }else {
    return cnt__11358 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__11364 = level;
  var ret__11365 = node;
  while(true) {
    if(ll__11364 === 0) {
      return ret__11365
    }else {
      var embed__11366 = ret__11365;
      var r__11367 = cljs.core.pv_fresh_node.call(null, edit);
      var ___11368 = cljs.core.pv_aset.call(null, r__11367, 0, embed__11366);
      var G__11369 = ll__11364 - 5;
      var G__11370 = r__11367;
      ll__11364 = G__11369;
      ret__11365 = G__11370;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__11376 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__11377 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__11376, subidx__11377, tailnode);
    return ret__11376
  }else {
    var child__11378 = cljs.core.pv_aget.call(null, parent, subidx__11377);
    if(!(child__11378 == null)) {
      var node_to_insert__11379 = push_tail.call(null, pv, level - 5, child__11378, tailnode);
      cljs.core.pv_aset.call(null, ret__11376, subidx__11377, node_to_insert__11379);
      return ret__11376
    }else {
      var node_to_insert__11380 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__11376, subidx__11377, node_to_insert__11380);
      return ret__11376
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____11384 = 0 <= i;
    if(and__3822__auto____11384) {
      return i < pv.cnt
    }else {
      return and__3822__auto____11384
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__11385 = pv.root;
      var level__11386 = pv.shift;
      while(true) {
        if(level__11386 > 0) {
          var G__11387 = cljs.core.pv_aget.call(null, node__11385, i >>> level__11386 & 31);
          var G__11388 = level__11386 - 5;
          node__11385 = G__11387;
          level__11386 = G__11388;
          continue
        }else {
          return node__11385.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__11391 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__11391, i & 31, val);
    return ret__11391
  }else {
    var subidx__11392 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__11391, subidx__11392, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__11392), i, val));
    return ret__11391
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__11398 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__11399 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__11398));
    if(function() {
      var and__3822__auto____11400 = new_child__11399 == null;
      if(and__3822__auto____11400) {
        return subidx__11398 === 0
      }else {
        return and__3822__auto____11400
      }
    }()) {
      return null
    }else {
      var ret__11401 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__11401, subidx__11398, new_child__11399);
      return ret__11401
    }
  }else {
    if(subidx__11398 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__11402 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__11402, subidx__11398, null);
        return ret__11402
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__11405 = this;
  return new cljs.core.TransientVector(this__11405.cnt, this__11405.shift, cljs.core.tv_editable_root.call(null, this__11405.root), cljs.core.tv_editable_tail.call(null, this__11405.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11406 = this;
  var h__2188__auto____11407 = this__11406.__hash;
  if(!(h__2188__auto____11407 == null)) {
    return h__2188__auto____11407
  }else {
    var h__2188__auto____11408 = cljs.core.hash_coll.call(null, coll);
    this__11406.__hash = h__2188__auto____11408;
    return h__2188__auto____11408
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__11409 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__11410 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__11411 = this;
  if(function() {
    var and__3822__auto____11412 = 0 <= k;
    if(and__3822__auto____11412) {
      return k < this__11411.cnt
    }else {
      return and__3822__auto____11412
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__11413 = this__11411.tail.slice();
      new_tail__11413[k & 31] = v;
      return new cljs.core.PersistentVector(this__11411.meta, this__11411.cnt, this__11411.shift, this__11411.root, new_tail__11413, null)
    }else {
      return new cljs.core.PersistentVector(this__11411.meta, this__11411.cnt, this__11411.shift, cljs.core.do_assoc.call(null, coll, this__11411.shift, this__11411.root, k, v), this__11411.tail, null)
    }
  }else {
    if(k === this__11411.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__11411.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__11461 = null;
  var G__11461__2 = function(this_sym11414, k) {
    var this__11416 = this;
    var this_sym11414__11417 = this;
    var coll__11418 = this_sym11414__11417;
    return coll__11418.cljs$core$ILookup$_lookup$arity$2(coll__11418, k)
  };
  var G__11461__3 = function(this_sym11415, k, not_found) {
    var this__11416 = this;
    var this_sym11415__11419 = this;
    var coll__11420 = this_sym11415__11419;
    return coll__11420.cljs$core$ILookup$_lookup$arity$3(coll__11420, k, not_found)
  };
  G__11461 = function(this_sym11415, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11461__2.call(this, this_sym11415, k);
      case 3:
        return G__11461__3.call(this, this_sym11415, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11461
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym11403, args11404) {
  var this__11421 = this;
  return this_sym11403.call.apply(this_sym11403, [this_sym11403].concat(args11404.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__11422 = this;
  var step_init__11423 = [0, init];
  var i__11424 = 0;
  while(true) {
    if(i__11424 < this__11422.cnt) {
      var arr__11425 = cljs.core.array_for.call(null, v, i__11424);
      var len__11426 = arr__11425.length;
      var init__11430 = function() {
        var j__11427 = 0;
        var init__11428 = step_init__11423[1];
        while(true) {
          if(j__11427 < len__11426) {
            var init__11429 = f.call(null, init__11428, j__11427 + i__11424, arr__11425[j__11427]);
            if(cljs.core.reduced_QMARK_.call(null, init__11429)) {
              return init__11429
            }else {
              var G__11462 = j__11427 + 1;
              var G__11463 = init__11429;
              j__11427 = G__11462;
              init__11428 = G__11463;
              continue
            }
          }else {
            step_init__11423[0] = len__11426;
            step_init__11423[1] = init__11428;
            return init__11428
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__11430)) {
        return cljs.core.deref.call(null, init__11430)
      }else {
        var G__11464 = i__11424 + step_init__11423[0];
        i__11424 = G__11464;
        continue
      }
    }else {
      return step_init__11423[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11431 = this;
  if(this__11431.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__11432 = this__11431.tail.slice();
    new_tail__11432.push(o);
    return new cljs.core.PersistentVector(this__11431.meta, this__11431.cnt + 1, this__11431.shift, this__11431.root, new_tail__11432, null)
  }else {
    var root_overflow_QMARK___11433 = this__11431.cnt >>> 5 > 1 << this__11431.shift;
    var new_shift__11434 = root_overflow_QMARK___11433 ? this__11431.shift + 5 : this__11431.shift;
    var new_root__11436 = root_overflow_QMARK___11433 ? function() {
      var n_r__11435 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__11435, 0, this__11431.root);
      cljs.core.pv_aset.call(null, n_r__11435, 1, cljs.core.new_path.call(null, null, this__11431.shift, new cljs.core.VectorNode(null, this__11431.tail)));
      return n_r__11435
    }() : cljs.core.push_tail.call(null, coll, this__11431.shift, this__11431.root, new cljs.core.VectorNode(null, this__11431.tail));
    return new cljs.core.PersistentVector(this__11431.meta, this__11431.cnt + 1, new_shift__11434, new_root__11436, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__11437 = this;
  if(this__11437.cnt > 0) {
    return new cljs.core.RSeq(coll, this__11437.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__11438 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__11439 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__11440 = this;
  var this__11441 = this;
  return cljs.core.pr_str.call(null, this__11441)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__11442 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__11443 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11444 = this;
  if(this__11444.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11445 = this;
  return this__11445.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__11446 = this;
  if(this__11446.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__11446.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__11447 = this;
  if(this__11447.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__11447.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__11447.meta)
    }else {
      if(1 < this__11447.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__11447.meta, this__11447.cnt - 1, this__11447.shift, this__11447.root, this__11447.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__11448 = cljs.core.array_for.call(null, coll, this__11447.cnt - 2);
          var nr__11449 = cljs.core.pop_tail.call(null, coll, this__11447.shift, this__11447.root);
          var new_root__11450 = nr__11449 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__11449;
          var cnt_1__11451 = this__11447.cnt - 1;
          if(function() {
            var and__3822__auto____11452 = 5 < this__11447.shift;
            if(and__3822__auto____11452) {
              return cljs.core.pv_aget.call(null, new_root__11450, 1) == null
            }else {
              return and__3822__auto____11452
            }
          }()) {
            return new cljs.core.PersistentVector(this__11447.meta, cnt_1__11451, this__11447.shift - 5, cljs.core.pv_aget.call(null, new_root__11450, 0), new_tail__11448, null)
          }else {
            return new cljs.core.PersistentVector(this__11447.meta, cnt_1__11451, this__11447.shift, new_root__11450, new_tail__11448, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__11453 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11454 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11455 = this;
  return new cljs.core.PersistentVector(meta, this__11455.cnt, this__11455.shift, this__11455.root, this__11455.tail, this__11455.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11456 = this;
  return this__11456.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__11457 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__11458 = this;
  if(function() {
    var and__3822__auto____11459 = 0 <= n;
    if(and__3822__auto____11459) {
      return n < this__11458.cnt
    }else {
      return and__3822__auto____11459
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11460 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__11460.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__11465 = xs.length;
  var xs__11466 = no_clone === true ? xs : xs.slice();
  if(l__11465 < 32) {
    return new cljs.core.PersistentVector(null, l__11465, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__11466, null)
  }else {
    var node__11467 = xs__11466.slice(0, 32);
    var v__11468 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__11467, null);
    var i__11469 = 32;
    var out__11470 = cljs.core._as_transient.call(null, v__11468);
    while(true) {
      if(i__11469 < l__11465) {
        var G__11471 = i__11469 + 1;
        var G__11472 = cljs.core.conj_BANG_.call(null, out__11470, xs__11466[i__11469]);
        i__11469 = G__11471;
        out__11470 = G__11472;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__11470)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__11473) {
    var args = cljs.core.seq(arglist__11473);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__11474 = this;
  if(this__11474.off + 1 < this__11474.node.length) {
    var s__11475 = cljs.core.chunked_seq.call(null, this__11474.vec, this__11474.node, this__11474.i, this__11474.off + 1);
    if(s__11475 == null) {
      return null
    }else {
      return s__11475
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11476 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11477 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11478 = this;
  return this__11478.node[this__11478.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11479 = this;
  if(this__11479.off + 1 < this__11479.node.length) {
    var s__11480 = cljs.core.chunked_seq.call(null, this__11479.vec, this__11479.node, this__11479.i, this__11479.off + 1);
    if(s__11480 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__11480
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__11481 = this;
  var l__11482 = this__11481.node.length;
  var s__11483 = this__11481.i + l__11482 < cljs.core._count.call(null, this__11481.vec) ? cljs.core.chunked_seq.call(null, this__11481.vec, this__11481.i + l__11482, 0) : null;
  if(s__11483 == null) {
    return null
  }else {
    return s__11483
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11484 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__11485 = this;
  return cljs.core.chunked_seq.call(null, this__11485.vec, this__11485.node, this__11485.i, this__11485.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__11486 = this;
  return this__11486.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11487 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__11487.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__11488 = this;
  return cljs.core.array_chunk.call(null, this__11488.node, this__11488.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__11489 = this;
  var l__11490 = this__11489.node.length;
  var s__11491 = this__11489.i + l__11490 < cljs.core._count.call(null, this__11489.vec) ? cljs.core.chunked_seq.call(null, this__11489.vec, this__11489.i + l__11490, 0) : null;
  if(s__11491 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__11491
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11494 = this;
  var h__2188__auto____11495 = this__11494.__hash;
  if(!(h__2188__auto____11495 == null)) {
    return h__2188__auto____11495
  }else {
    var h__2188__auto____11496 = cljs.core.hash_coll.call(null, coll);
    this__11494.__hash = h__2188__auto____11496;
    return h__2188__auto____11496
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__11497 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__11498 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__11499 = this;
  var v_pos__11500 = this__11499.start + key;
  return new cljs.core.Subvec(this__11499.meta, cljs.core._assoc.call(null, this__11499.v, v_pos__11500, val), this__11499.start, this__11499.end > v_pos__11500 + 1 ? this__11499.end : v_pos__11500 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__11526 = null;
  var G__11526__2 = function(this_sym11501, k) {
    var this__11503 = this;
    var this_sym11501__11504 = this;
    var coll__11505 = this_sym11501__11504;
    return coll__11505.cljs$core$ILookup$_lookup$arity$2(coll__11505, k)
  };
  var G__11526__3 = function(this_sym11502, k, not_found) {
    var this__11503 = this;
    var this_sym11502__11506 = this;
    var coll__11507 = this_sym11502__11506;
    return coll__11507.cljs$core$ILookup$_lookup$arity$3(coll__11507, k, not_found)
  };
  G__11526 = function(this_sym11502, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11526__2.call(this, this_sym11502, k);
      case 3:
        return G__11526__3.call(this, this_sym11502, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11526
}();
cljs.core.Subvec.prototype.apply = function(this_sym11492, args11493) {
  var this__11508 = this;
  return this_sym11492.call.apply(this_sym11492, [this_sym11492].concat(args11493.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11509 = this;
  return new cljs.core.Subvec(this__11509.meta, cljs.core._assoc_n.call(null, this__11509.v, this__11509.end, o), this__11509.start, this__11509.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__11510 = this;
  var this__11511 = this;
  return cljs.core.pr_str.call(null, this__11511)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__11512 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__11513 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11514 = this;
  var subvec_seq__11515 = function subvec_seq(i) {
    if(i === this__11514.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__11514.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__11515.call(null, this__11514.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11516 = this;
  return this__11516.end - this__11516.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__11517 = this;
  return cljs.core._nth.call(null, this__11517.v, this__11517.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__11518 = this;
  if(this__11518.start === this__11518.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__11518.meta, this__11518.v, this__11518.start, this__11518.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__11519 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11520 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11521 = this;
  return new cljs.core.Subvec(meta, this__11521.v, this__11521.start, this__11521.end, this__11521.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11522 = this;
  return this__11522.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__11523 = this;
  return cljs.core._nth.call(null, this__11523.v, this__11523.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__11524 = this;
  return cljs.core._nth.call(null, this__11524.v, this__11524.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11525 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__11525.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__11528 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__11528, 0, tl.length);
  return ret__11528
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__11532 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__11533 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__11532, subidx__11533, level === 5 ? tail_node : function() {
    var child__11534 = cljs.core.pv_aget.call(null, ret__11532, subidx__11533);
    if(!(child__11534 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__11534, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__11532
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__11539 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__11540 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__11541 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__11539, subidx__11540));
    if(function() {
      var and__3822__auto____11542 = new_child__11541 == null;
      if(and__3822__auto____11542) {
        return subidx__11540 === 0
      }else {
        return and__3822__auto____11542
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__11539, subidx__11540, new_child__11541);
      return node__11539
    }
  }else {
    if(subidx__11540 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__11539, subidx__11540, null);
        return node__11539
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____11547 = 0 <= i;
    if(and__3822__auto____11547) {
      return i < tv.cnt
    }else {
      return and__3822__auto____11547
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__11548 = tv.root;
      var node__11549 = root__11548;
      var level__11550 = tv.shift;
      while(true) {
        if(level__11550 > 0) {
          var G__11551 = cljs.core.tv_ensure_editable.call(null, root__11548.edit, cljs.core.pv_aget.call(null, node__11549, i >>> level__11550 & 31));
          var G__11552 = level__11550 - 5;
          node__11549 = G__11551;
          level__11550 = G__11552;
          continue
        }else {
          return node__11549.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__11592 = null;
  var G__11592__2 = function(this_sym11555, k) {
    var this__11557 = this;
    var this_sym11555__11558 = this;
    var coll__11559 = this_sym11555__11558;
    return coll__11559.cljs$core$ILookup$_lookup$arity$2(coll__11559, k)
  };
  var G__11592__3 = function(this_sym11556, k, not_found) {
    var this__11557 = this;
    var this_sym11556__11560 = this;
    var coll__11561 = this_sym11556__11560;
    return coll__11561.cljs$core$ILookup$_lookup$arity$3(coll__11561, k, not_found)
  };
  G__11592 = function(this_sym11556, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11592__2.call(this, this_sym11556, k);
      case 3:
        return G__11592__3.call(this, this_sym11556, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11592
}();
cljs.core.TransientVector.prototype.apply = function(this_sym11553, args11554) {
  var this__11562 = this;
  return this_sym11553.call.apply(this_sym11553, [this_sym11553].concat(args11554.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__11563 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__11564 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__11565 = this;
  if(this__11565.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__11566 = this;
  if(function() {
    var and__3822__auto____11567 = 0 <= n;
    if(and__3822__auto____11567) {
      return n < this__11566.cnt
    }else {
      return and__3822__auto____11567
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11568 = this;
  if(this__11568.root.edit) {
    return this__11568.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__11569 = this;
  if(this__11569.root.edit) {
    if(function() {
      var and__3822__auto____11570 = 0 <= n;
      if(and__3822__auto____11570) {
        return n < this__11569.cnt
      }else {
        return and__3822__auto____11570
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__11569.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__11575 = function go(level, node) {
          var node__11573 = cljs.core.tv_ensure_editable.call(null, this__11569.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__11573, n & 31, val);
            return node__11573
          }else {
            var subidx__11574 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__11573, subidx__11574, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__11573, subidx__11574)));
            return node__11573
          }
        }.call(null, this__11569.shift, this__11569.root);
        this__11569.root = new_root__11575;
        return tcoll
      }
    }else {
      if(n === this__11569.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__11569.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__11576 = this;
  if(this__11576.root.edit) {
    if(this__11576.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__11576.cnt) {
        this__11576.cnt = 0;
        return tcoll
      }else {
        if((this__11576.cnt - 1 & 31) > 0) {
          this__11576.cnt = this__11576.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__11577 = cljs.core.editable_array_for.call(null, tcoll, this__11576.cnt - 2);
            var new_root__11579 = function() {
              var nr__11578 = cljs.core.tv_pop_tail.call(null, tcoll, this__11576.shift, this__11576.root);
              if(!(nr__11578 == null)) {
                return nr__11578
              }else {
                return new cljs.core.VectorNode(this__11576.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____11580 = 5 < this__11576.shift;
              if(and__3822__auto____11580) {
                return cljs.core.pv_aget.call(null, new_root__11579, 1) == null
              }else {
                return and__3822__auto____11580
              }
            }()) {
              var new_root__11581 = cljs.core.tv_ensure_editable.call(null, this__11576.root.edit, cljs.core.pv_aget.call(null, new_root__11579, 0));
              this__11576.root = new_root__11581;
              this__11576.shift = this__11576.shift - 5;
              this__11576.cnt = this__11576.cnt - 1;
              this__11576.tail = new_tail__11577;
              return tcoll
            }else {
              this__11576.root = new_root__11579;
              this__11576.cnt = this__11576.cnt - 1;
              this__11576.tail = new_tail__11577;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__11582 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__11583 = this;
  if(this__11583.root.edit) {
    if(this__11583.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__11583.tail[this__11583.cnt & 31] = o;
      this__11583.cnt = this__11583.cnt + 1;
      return tcoll
    }else {
      var tail_node__11584 = new cljs.core.VectorNode(this__11583.root.edit, this__11583.tail);
      var new_tail__11585 = cljs.core.make_array.call(null, 32);
      new_tail__11585[0] = o;
      this__11583.tail = new_tail__11585;
      if(this__11583.cnt >>> 5 > 1 << this__11583.shift) {
        var new_root_array__11586 = cljs.core.make_array.call(null, 32);
        var new_shift__11587 = this__11583.shift + 5;
        new_root_array__11586[0] = this__11583.root;
        new_root_array__11586[1] = cljs.core.new_path.call(null, this__11583.root.edit, this__11583.shift, tail_node__11584);
        this__11583.root = new cljs.core.VectorNode(this__11583.root.edit, new_root_array__11586);
        this__11583.shift = new_shift__11587;
        this__11583.cnt = this__11583.cnt + 1;
        return tcoll
      }else {
        var new_root__11588 = cljs.core.tv_push_tail.call(null, tcoll, this__11583.shift, this__11583.root, tail_node__11584);
        this__11583.root = new_root__11588;
        this__11583.cnt = this__11583.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__11589 = this;
  if(this__11589.root.edit) {
    this__11589.root.edit = null;
    var len__11590 = this__11589.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__11591 = cljs.core.make_array.call(null, len__11590);
    cljs.core.array_copy.call(null, this__11589.tail, 0, trimmed_tail__11591, 0, len__11590);
    return new cljs.core.PersistentVector(null, this__11589.cnt, this__11589.shift, this__11589.root, trimmed_tail__11591, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11593 = this;
  var h__2188__auto____11594 = this__11593.__hash;
  if(!(h__2188__auto____11594 == null)) {
    return h__2188__auto____11594
  }else {
    var h__2188__auto____11595 = cljs.core.hash_coll.call(null, coll);
    this__11593.__hash = h__2188__auto____11595;
    return h__2188__auto____11595
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11596 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__11597 = this;
  var this__11598 = this;
  return cljs.core.pr_str.call(null, this__11598)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11599 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11600 = this;
  return cljs.core._first.call(null, this__11600.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11601 = this;
  var temp__3971__auto____11602 = cljs.core.next.call(null, this__11601.front);
  if(temp__3971__auto____11602) {
    var f1__11603 = temp__3971__auto____11602;
    return new cljs.core.PersistentQueueSeq(this__11601.meta, f1__11603, this__11601.rear, null)
  }else {
    if(this__11601.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__11601.meta, this__11601.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11604 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11605 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__11605.front, this__11605.rear, this__11605.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11606 = this;
  return this__11606.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11607 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__11607.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11608 = this;
  var h__2188__auto____11609 = this__11608.__hash;
  if(!(h__2188__auto____11609 == null)) {
    return h__2188__auto____11609
  }else {
    var h__2188__auto____11610 = cljs.core.hash_coll.call(null, coll);
    this__11608.__hash = h__2188__auto____11610;
    return h__2188__auto____11610
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11611 = this;
  if(cljs.core.truth_(this__11611.front)) {
    return new cljs.core.PersistentQueue(this__11611.meta, this__11611.count + 1, this__11611.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____11612 = this__11611.rear;
      if(cljs.core.truth_(or__3824__auto____11612)) {
        return or__3824__auto____11612
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__11611.meta, this__11611.count + 1, cljs.core.conj.call(null, this__11611.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__11613 = this;
  var this__11614 = this;
  return cljs.core.pr_str.call(null, this__11614)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11615 = this;
  var rear__11616 = cljs.core.seq.call(null, this__11615.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____11617 = this__11615.front;
    if(cljs.core.truth_(or__3824__auto____11617)) {
      return or__3824__auto____11617
    }else {
      return rear__11616
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__11615.front, cljs.core.seq.call(null, rear__11616), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11618 = this;
  return this__11618.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__11619 = this;
  return cljs.core._first.call(null, this__11619.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__11620 = this;
  if(cljs.core.truth_(this__11620.front)) {
    var temp__3971__auto____11621 = cljs.core.next.call(null, this__11620.front);
    if(temp__3971__auto____11621) {
      var f1__11622 = temp__3971__auto____11621;
      return new cljs.core.PersistentQueue(this__11620.meta, this__11620.count - 1, f1__11622, this__11620.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__11620.meta, this__11620.count - 1, cljs.core.seq.call(null, this__11620.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11623 = this;
  return cljs.core.first.call(null, this__11623.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11624 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11625 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11626 = this;
  return new cljs.core.PersistentQueue(meta, this__11626.count, this__11626.front, this__11626.rear, this__11626.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11627 = this;
  return this__11627.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11628 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__11629 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__11632 = array.length;
  var i__11633 = 0;
  while(true) {
    if(i__11633 < len__11632) {
      if(k === array[i__11633]) {
        return i__11633
      }else {
        var G__11634 = i__11633 + incr;
        i__11633 = G__11634;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__11637 = cljs.core.hash.call(null, a);
  var b__11638 = cljs.core.hash.call(null, b);
  if(a__11637 < b__11638) {
    return-1
  }else {
    if(a__11637 > b__11638) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__11646 = m.keys;
  var len__11647 = ks__11646.length;
  var so__11648 = m.strobj;
  var out__11649 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__11650 = 0;
  var out__11651 = cljs.core.transient$.call(null, out__11649);
  while(true) {
    if(i__11650 < len__11647) {
      var k__11652 = ks__11646[i__11650];
      var G__11653 = i__11650 + 1;
      var G__11654 = cljs.core.assoc_BANG_.call(null, out__11651, k__11652, so__11648[k__11652]);
      i__11650 = G__11653;
      out__11651 = G__11654;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__11651, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__11660 = {};
  var l__11661 = ks.length;
  var i__11662 = 0;
  while(true) {
    if(i__11662 < l__11661) {
      var k__11663 = ks[i__11662];
      new_obj__11660[k__11663] = obj[k__11663];
      var G__11664 = i__11662 + 1;
      i__11662 = G__11664;
      continue
    }else {
    }
    break
  }
  return new_obj__11660
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__11667 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11668 = this;
  var h__2188__auto____11669 = this__11668.__hash;
  if(!(h__2188__auto____11669 == null)) {
    return h__2188__auto____11669
  }else {
    var h__2188__auto____11670 = cljs.core.hash_imap.call(null, coll);
    this__11668.__hash = h__2188__auto____11670;
    return h__2188__auto____11670
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__11671 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__11672 = this;
  if(function() {
    var and__3822__auto____11673 = goog.isString(k);
    if(and__3822__auto____11673) {
      return!(cljs.core.scan_array.call(null, 1, k, this__11672.keys) == null)
    }else {
      return and__3822__auto____11673
    }
  }()) {
    return this__11672.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__11674 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____11675 = this__11674.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____11675) {
        return or__3824__auto____11675
      }else {
        return this__11674.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__11674.keys) == null)) {
        var new_strobj__11676 = cljs.core.obj_clone.call(null, this__11674.strobj, this__11674.keys);
        new_strobj__11676[k] = v;
        return new cljs.core.ObjMap(this__11674.meta, this__11674.keys, new_strobj__11676, this__11674.update_count + 1, null)
      }else {
        var new_strobj__11677 = cljs.core.obj_clone.call(null, this__11674.strobj, this__11674.keys);
        var new_keys__11678 = this__11674.keys.slice();
        new_strobj__11677[k] = v;
        new_keys__11678.push(k);
        return new cljs.core.ObjMap(this__11674.meta, new_keys__11678, new_strobj__11677, this__11674.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__11679 = this;
  if(function() {
    var and__3822__auto____11680 = goog.isString(k);
    if(and__3822__auto____11680) {
      return!(cljs.core.scan_array.call(null, 1, k, this__11679.keys) == null)
    }else {
      return and__3822__auto____11680
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__11702 = null;
  var G__11702__2 = function(this_sym11681, k) {
    var this__11683 = this;
    var this_sym11681__11684 = this;
    var coll__11685 = this_sym11681__11684;
    return coll__11685.cljs$core$ILookup$_lookup$arity$2(coll__11685, k)
  };
  var G__11702__3 = function(this_sym11682, k, not_found) {
    var this__11683 = this;
    var this_sym11682__11686 = this;
    var coll__11687 = this_sym11682__11686;
    return coll__11687.cljs$core$ILookup$_lookup$arity$3(coll__11687, k, not_found)
  };
  G__11702 = function(this_sym11682, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11702__2.call(this, this_sym11682, k);
      case 3:
        return G__11702__3.call(this, this_sym11682, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11702
}();
cljs.core.ObjMap.prototype.apply = function(this_sym11665, args11666) {
  var this__11688 = this;
  return this_sym11665.call.apply(this_sym11665, [this_sym11665].concat(args11666.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__11689 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__11690 = this;
  var this__11691 = this;
  return cljs.core.pr_str.call(null, this__11691)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11692 = this;
  if(this__11692.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__11655_SHARP_) {
      return cljs.core.vector.call(null, p1__11655_SHARP_, this__11692.strobj[p1__11655_SHARP_])
    }, this__11692.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11693 = this;
  return this__11693.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11694 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11695 = this;
  return new cljs.core.ObjMap(meta, this__11695.keys, this__11695.strobj, this__11695.update_count, this__11695.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11696 = this;
  return this__11696.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11697 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__11697.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__11698 = this;
  if(function() {
    var and__3822__auto____11699 = goog.isString(k);
    if(and__3822__auto____11699) {
      return!(cljs.core.scan_array.call(null, 1, k, this__11698.keys) == null)
    }else {
      return and__3822__auto____11699
    }
  }()) {
    var new_keys__11700 = this__11698.keys.slice();
    var new_strobj__11701 = cljs.core.obj_clone.call(null, this__11698.strobj, this__11698.keys);
    new_keys__11700.splice(cljs.core.scan_array.call(null, 1, k, new_keys__11700), 1);
    cljs.core.js_delete.call(null, new_strobj__11701, k);
    return new cljs.core.ObjMap(this__11698.meta, new_keys__11700, new_strobj__11701, this__11698.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11706 = this;
  var h__2188__auto____11707 = this__11706.__hash;
  if(!(h__2188__auto____11707 == null)) {
    return h__2188__auto____11707
  }else {
    var h__2188__auto____11708 = cljs.core.hash_imap.call(null, coll);
    this__11706.__hash = h__2188__auto____11708;
    return h__2188__auto____11708
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__11709 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__11710 = this;
  var bucket__11711 = this__11710.hashobj[cljs.core.hash.call(null, k)];
  var i__11712 = cljs.core.truth_(bucket__11711) ? cljs.core.scan_array.call(null, 2, k, bucket__11711) : null;
  if(cljs.core.truth_(i__11712)) {
    return bucket__11711[i__11712 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__11713 = this;
  var h__11714 = cljs.core.hash.call(null, k);
  var bucket__11715 = this__11713.hashobj[h__11714];
  if(cljs.core.truth_(bucket__11715)) {
    var new_bucket__11716 = bucket__11715.slice();
    var new_hashobj__11717 = goog.object.clone(this__11713.hashobj);
    new_hashobj__11717[h__11714] = new_bucket__11716;
    var temp__3971__auto____11718 = cljs.core.scan_array.call(null, 2, k, new_bucket__11716);
    if(cljs.core.truth_(temp__3971__auto____11718)) {
      var i__11719 = temp__3971__auto____11718;
      new_bucket__11716[i__11719 + 1] = v;
      return new cljs.core.HashMap(this__11713.meta, this__11713.count, new_hashobj__11717, null)
    }else {
      new_bucket__11716.push(k, v);
      return new cljs.core.HashMap(this__11713.meta, this__11713.count + 1, new_hashobj__11717, null)
    }
  }else {
    var new_hashobj__11720 = goog.object.clone(this__11713.hashobj);
    new_hashobj__11720[h__11714] = [k, v];
    return new cljs.core.HashMap(this__11713.meta, this__11713.count + 1, new_hashobj__11720, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__11721 = this;
  var bucket__11722 = this__11721.hashobj[cljs.core.hash.call(null, k)];
  var i__11723 = cljs.core.truth_(bucket__11722) ? cljs.core.scan_array.call(null, 2, k, bucket__11722) : null;
  if(cljs.core.truth_(i__11723)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__11748 = null;
  var G__11748__2 = function(this_sym11724, k) {
    var this__11726 = this;
    var this_sym11724__11727 = this;
    var coll__11728 = this_sym11724__11727;
    return coll__11728.cljs$core$ILookup$_lookup$arity$2(coll__11728, k)
  };
  var G__11748__3 = function(this_sym11725, k, not_found) {
    var this__11726 = this;
    var this_sym11725__11729 = this;
    var coll__11730 = this_sym11725__11729;
    return coll__11730.cljs$core$ILookup$_lookup$arity$3(coll__11730, k, not_found)
  };
  G__11748 = function(this_sym11725, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11748__2.call(this, this_sym11725, k);
      case 3:
        return G__11748__3.call(this, this_sym11725, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11748
}();
cljs.core.HashMap.prototype.apply = function(this_sym11704, args11705) {
  var this__11731 = this;
  return this_sym11704.call.apply(this_sym11704, [this_sym11704].concat(args11705.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__11732 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__11733 = this;
  var this__11734 = this;
  return cljs.core.pr_str.call(null, this__11734)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11735 = this;
  if(this__11735.count > 0) {
    var hashes__11736 = cljs.core.js_keys.call(null, this__11735.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__11703_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__11735.hashobj[p1__11703_SHARP_]))
    }, hashes__11736)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11737 = this;
  return this__11737.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11738 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11739 = this;
  return new cljs.core.HashMap(meta, this__11739.count, this__11739.hashobj, this__11739.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11740 = this;
  return this__11740.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11741 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__11741.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__11742 = this;
  var h__11743 = cljs.core.hash.call(null, k);
  var bucket__11744 = this__11742.hashobj[h__11743];
  var i__11745 = cljs.core.truth_(bucket__11744) ? cljs.core.scan_array.call(null, 2, k, bucket__11744) : null;
  if(cljs.core.not.call(null, i__11745)) {
    return coll
  }else {
    var new_hashobj__11746 = goog.object.clone(this__11742.hashobj);
    if(3 > bucket__11744.length) {
      cljs.core.js_delete.call(null, new_hashobj__11746, h__11743)
    }else {
      var new_bucket__11747 = bucket__11744.slice();
      new_bucket__11747.splice(i__11745, 2);
      new_hashobj__11746[h__11743] = new_bucket__11747
    }
    return new cljs.core.HashMap(this__11742.meta, this__11742.count - 1, new_hashobj__11746, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__11749 = ks.length;
  var i__11750 = 0;
  var out__11751 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__11750 < len__11749) {
      var G__11752 = i__11750 + 1;
      var G__11753 = cljs.core.assoc.call(null, out__11751, ks[i__11750], vs[i__11750]);
      i__11750 = G__11752;
      out__11751 = G__11753;
      continue
    }else {
      return out__11751
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__11757 = m.arr;
  var len__11758 = arr__11757.length;
  var i__11759 = 0;
  while(true) {
    if(len__11758 <= i__11759) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__11757[i__11759], k)) {
        return i__11759
      }else {
        if("\ufdd0'else") {
          var G__11760 = i__11759 + 2;
          i__11759 = G__11760;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__11763 = this;
  return new cljs.core.TransientArrayMap({}, this__11763.arr.length, this__11763.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11764 = this;
  var h__2188__auto____11765 = this__11764.__hash;
  if(!(h__2188__auto____11765 == null)) {
    return h__2188__auto____11765
  }else {
    var h__2188__auto____11766 = cljs.core.hash_imap.call(null, coll);
    this__11764.__hash = h__2188__auto____11766;
    return h__2188__auto____11766
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__11767 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__11768 = this;
  var idx__11769 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__11769 === -1) {
    return not_found
  }else {
    return this__11768.arr[idx__11769 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__11770 = this;
  var idx__11771 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__11771 === -1) {
    if(this__11770.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__11770.meta, this__11770.cnt + 1, function() {
        var G__11772__11773 = this__11770.arr.slice();
        G__11772__11773.push(k);
        G__11772__11773.push(v);
        return G__11772__11773
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__11770.arr[idx__11771 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__11770.meta, this__11770.cnt, function() {
          var G__11774__11775 = this__11770.arr.slice();
          G__11774__11775[idx__11771 + 1] = v;
          return G__11774__11775
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__11776 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__11808 = null;
  var G__11808__2 = function(this_sym11777, k) {
    var this__11779 = this;
    var this_sym11777__11780 = this;
    var coll__11781 = this_sym11777__11780;
    return coll__11781.cljs$core$ILookup$_lookup$arity$2(coll__11781, k)
  };
  var G__11808__3 = function(this_sym11778, k, not_found) {
    var this__11779 = this;
    var this_sym11778__11782 = this;
    var coll__11783 = this_sym11778__11782;
    return coll__11783.cljs$core$ILookup$_lookup$arity$3(coll__11783, k, not_found)
  };
  G__11808 = function(this_sym11778, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11808__2.call(this, this_sym11778, k);
      case 3:
        return G__11808__3.call(this, this_sym11778, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11808
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym11761, args11762) {
  var this__11784 = this;
  return this_sym11761.call.apply(this_sym11761, [this_sym11761].concat(args11762.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__11785 = this;
  var len__11786 = this__11785.arr.length;
  var i__11787 = 0;
  var init__11788 = init;
  while(true) {
    if(i__11787 < len__11786) {
      var init__11789 = f.call(null, init__11788, this__11785.arr[i__11787], this__11785.arr[i__11787 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__11789)) {
        return cljs.core.deref.call(null, init__11789)
      }else {
        var G__11809 = i__11787 + 2;
        var G__11810 = init__11789;
        i__11787 = G__11809;
        init__11788 = G__11810;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__11790 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__11791 = this;
  var this__11792 = this;
  return cljs.core.pr_str.call(null, this__11792)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11793 = this;
  if(this__11793.cnt > 0) {
    var len__11794 = this__11793.arr.length;
    var array_map_seq__11795 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__11794) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__11793.arr[i], this__11793.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__11795.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11796 = this;
  return this__11796.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11797 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11798 = this;
  return new cljs.core.PersistentArrayMap(meta, this__11798.cnt, this__11798.arr, this__11798.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11799 = this;
  return this__11799.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11800 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__11800.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__11801 = this;
  var idx__11802 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__11802 >= 0) {
    var len__11803 = this__11801.arr.length;
    var new_len__11804 = len__11803 - 2;
    if(new_len__11804 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__11805 = cljs.core.make_array.call(null, new_len__11804);
      var s__11806 = 0;
      var d__11807 = 0;
      while(true) {
        if(s__11806 >= len__11803) {
          return new cljs.core.PersistentArrayMap(this__11801.meta, this__11801.cnt - 1, new_arr__11805, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__11801.arr[s__11806])) {
            var G__11811 = s__11806 + 2;
            var G__11812 = d__11807;
            s__11806 = G__11811;
            d__11807 = G__11812;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__11805[d__11807] = this__11801.arr[s__11806];
              new_arr__11805[d__11807 + 1] = this__11801.arr[s__11806 + 1];
              var G__11813 = s__11806 + 2;
              var G__11814 = d__11807 + 2;
              s__11806 = G__11813;
              d__11807 = G__11814;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__11815 = cljs.core.count.call(null, ks);
  var i__11816 = 0;
  var out__11817 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__11816 < len__11815) {
      var G__11818 = i__11816 + 1;
      var G__11819 = cljs.core.assoc_BANG_.call(null, out__11817, ks[i__11816], vs[i__11816]);
      i__11816 = G__11818;
      out__11817 = G__11819;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__11817)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__11820 = this;
  if(cljs.core.truth_(this__11820.editable_QMARK_)) {
    var idx__11821 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__11821 >= 0) {
      this__11820.arr[idx__11821] = this__11820.arr[this__11820.len - 2];
      this__11820.arr[idx__11821 + 1] = this__11820.arr[this__11820.len - 1];
      var G__11822__11823 = this__11820.arr;
      G__11822__11823.pop();
      G__11822__11823.pop();
      G__11822__11823;
      this__11820.len = this__11820.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__11824 = this;
  if(cljs.core.truth_(this__11824.editable_QMARK_)) {
    var idx__11825 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__11825 === -1) {
      if(this__11824.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__11824.len = this__11824.len + 2;
        this__11824.arr.push(key);
        this__11824.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__11824.len, this__11824.arr), key, val)
      }
    }else {
      if(val === this__11824.arr[idx__11825 + 1]) {
        return tcoll
      }else {
        this__11824.arr[idx__11825 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__11826 = this;
  if(cljs.core.truth_(this__11826.editable_QMARK_)) {
    if(function() {
      var G__11827__11828 = o;
      if(G__11827__11828) {
        if(function() {
          var or__3824__auto____11829 = G__11827__11828.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____11829) {
            return or__3824__auto____11829
          }else {
            return G__11827__11828.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__11827__11828.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__11827__11828)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__11827__11828)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__11830 = cljs.core.seq.call(null, o);
      var tcoll__11831 = tcoll;
      while(true) {
        var temp__3971__auto____11832 = cljs.core.first.call(null, es__11830);
        if(cljs.core.truth_(temp__3971__auto____11832)) {
          var e__11833 = temp__3971__auto____11832;
          var G__11839 = cljs.core.next.call(null, es__11830);
          var G__11840 = tcoll__11831.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__11831, cljs.core.key.call(null, e__11833), cljs.core.val.call(null, e__11833));
          es__11830 = G__11839;
          tcoll__11831 = G__11840;
          continue
        }else {
          return tcoll__11831
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__11834 = this;
  if(cljs.core.truth_(this__11834.editable_QMARK_)) {
    this__11834.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__11834.len, 2), this__11834.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__11835 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__11836 = this;
  if(cljs.core.truth_(this__11836.editable_QMARK_)) {
    var idx__11837 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__11837 === -1) {
      return not_found
    }else {
      return this__11836.arr[idx__11837 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__11838 = this;
  if(cljs.core.truth_(this__11838.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__11838.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__11843 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__11844 = 0;
  while(true) {
    if(i__11844 < len) {
      var G__11845 = cljs.core.assoc_BANG_.call(null, out__11843, arr[i__11844], arr[i__11844 + 1]);
      var G__11846 = i__11844 + 2;
      out__11843 = G__11845;
      i__11844 = G__11846;
      continue
    }else {
      return out__11843
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2306__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__11851__11852 = arr.slice();
    G__11851__11852[i] = a;
    return G__11851__11852
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__11853__11854 = arr.slice();
    G__11853__11854[i] = a;
    G__11853__11854[j] = b;
    return G__11853__11854
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__11856 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__11856, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__11856, 2 * i, new_arr__11856.length - 2 * i);
  return new_arr__11856
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__11859 = inode.ensure_editable(edit);
    editable__11859.arr[i] = a;
    return editable__11859
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__11860 = inode.ensure_editable(edit);
    editable__11860.arr[i] = a;
    editable__11860.arr[j] = b;
    return editable__11860
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__11867 = arr.length;
  var i__11868 = 0;
  var init__11869 = init;
  while(true) {
    if(i__11868 < len__11867) {
      var init__11872 = function() {
        var k__11870 = arr[i__11868];
        if(!(k__11870 == null)) {
          return f.call(null, init__11869, k__11870, arr[i__11868 + 1])
        }else {
          var node__11871 = arr[i__11868 + 1];
          if(!(node__11871 == null)) {
            return node__11871.kv_reduce(f, init__11869)
          }else {
            return init__11869
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__11872)) {
        return cljs.core.deref.call(null, init__11872)
      }else {
        var G__11873 = i__11868 + 2;
        var G__11874 = init__11872;
        i__11868 = G__11873;
        init__11869 = G__11874;
        continue
      }
    }else {
      return init__11869
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__11875 = this;
  var inode__11876 = this;
  if(this__11875.bitmap === bit) {
    return null
  }else {
    var editable__11877 = inode__11876.ensure_editable(e);
    var earr__11878 = editable__11877.arr;
    var len__11879 = earr__11878.length;
    editable__11877.bitmap = bit ^ editable__11877.bitmap;
    cljs.core.array_copy.call(null, earr__11878, 2 * (i + 1), earr__11878, 2 * i, len__11879 - 2 * (i + 1));
    earr__11878[len__11879 - 2] = null;
    earr__11878[len__11879 - 1] = null;
    return editable__11877
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__11880 = this;
  var inode__11881 = this;
  var bit__11882 = 1 << (hash >>> shift & 31);
  var idx__11883 = cljs.core.bitmap_indexed_node_index.call(null, this__11880.bitmap, bit__11882);
  if((this__11880.bitmap & bit__11882) === 0) {
    var n__11884 = cljs.core.bit_count.call(null, this__11880.bitmap);
    if(2 * n__11884 < this__11880.arr.length) {
      var editable__11885 = inode__11881.ensure_editable(edit);
      var earr__11886 = editable__11885.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__11886, 2 * idx__11883, earr__11886, 2 * (idx__11883 + 1), 2 * (n__11884 - idx__11883));
      earr__11886[2 * idx__11883] = key;
      earr__11886[2 * idx__11883 + 1] = val;
      editable__11885.bitmap = editable__11885.bitmap | bit__11882;
      return editable__11885
    }else {
      if(n__11884 >= 16) {
        var nodes__11887 = cljs.core.make_array.call(null, 32);
        var jdx__11888 = hash >>> shift & 31;
        nodes__11887[jdx__11888] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__11889 = 0;
        var j__11890 = 0;
        while(true) {
          if(i__11889 < 32) {
            if((this__11880.bitmap >>> i__11889 & 1) === 0) {
              var G__11943 = i__11889 + 1;
              var G__11944 = j__11890;
              i__11889 = G__11943;
              j__11890 = G__11944;
              continue
            }else {
              nodes__11887[i__11889] = !(this__11880.arr[j__11890] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__11880.arr[j__11890]), this__11880.arr[j__11890], this__11880.arr[j__11890 + 1], added_leaf_QMARK_) : this__11880.arr[j__11890 + 1];
              var G__11945 = i__11889 + 1;
              var G__11946 = j__11890 + 2;
              i__11889 = G__11945;
              j__11890 = G__11946;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__11884 + 1, nodes__11887)
      }else {
        if("\ufdd0'else") {
          var new_arr__11891 = cljs.core.make_array.call(null, 2 * (n__11884 + 4));
          cljs.core.array_copy.call(null, this__11880.arr, 0, new_arr__11891, 0, 2 * idx__11883);
          new_arr__11891[2 * idx__11883] = key;
          new_arr__11891[2 * idx__11883 + 1] = val;
          cljs.core.array_copy.call(null, this__11880.arr, 2 * idx__11883, new_arr__11891, 2 * (idx__11883 + 1), 2 * (n__11884 - idx__11883));
          added_leaf_QMARK_.val = true;
          var editable__11892 = inode__11881.ensure_editable(edit);
          editable__11892.arr = new_arr__11891;
          editable__11892.bitmap = editable__11892.bitmap | bit__11882;
          return editable__11892
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__11893 = this__11880.arr[2 * idx__11883];
    var val_or_node__11894 = this__11880.arr[2 * idx__11883 + 1];
    if(key_or_nil__11893 == null) {
      var n__11895 = val_or_node__11894.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__11895 === val_or_node__11894) {
        return inode__11881
      }else {
        return cljs.core.edit_and_set.call(null, inode__11881, edit, 2 * idx__11883 + 1, n__11895)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__11893)) {
        if(val === val_or_node__11894) {
          return inode__11881
        }else {
          return cljs.core.edit_and_set.call(null, inode__11881, edit, 2 * idx__11883 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__11881, edit, 2 * idx__11883, null, 2 * idx__11883 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__11893, val_or_node__11894, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__11896 = this;
  var inode__11897 = this;
  return cljs.core.create_inode_seq.call(null, this__11896.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__11898 = this;
  var inode__11899 = this;
  var bit__11900 = 1 << (hash >>> shift & 31);
  if((this__11898.bitmap & bit__11900) === 0) {
    return inode__11899
  }else {
    var idx__11901 = cljs.core.bitmap_indexed_node_index.call(null, this__11898.bitmap, bit__11900);
    var key_or_nil__11902 = this__11898.arr[2 * idx__11901];
    var val_or_node__11903 = this__11898.arr[2 * idx__11901 + 1];
    if(key_or_nil__11902 == null) {
      var n__11904 = val_or_node__11903.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__11904 === val_or_node__11903) {
        return inode__11899
      }else {
        if(!(n__11904 == null)) {
          return cljs.core.edit_and_set.call(null, inode__11899, edit, 2 * idx__11901 + 1, n__11904)
        }else {
          if(this__11898.bitmap === bit__11900) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__11899.edit_and_remove_pair(edit, bit__11900, idx__11901)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__11902)) {
        removed_leaf_QMARK_[0] = true;
        return inode__11899.edit_and_remove_pair(edit, bit__11900, idx__11901)
      }else {
        if("\ufdd0'else") {
          return inode__11899
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__11905 = this;
  var inode__11906 = this;
  if(e === this__11905.edit) {
    return inode__11906
  }else {
    var n__11907 = cljs.core.bit_count.call(null, this__11905.bitmap);
    var new_arr__11908 = cljs.core.make_array.call(null, n__11907 < 0 ? 4 : 2 * (n__11907 + 1));
    cljs.core.array_copy.call(null, this__11905.arr, 0, new_arr__11908, 0, 2 * n__11907);
    return new cljs.core.BitmapIndexedNode(e, this__11905.bitmap, new_arr__11908)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__11909 = this;
  var inode__11910 = this;
  return cljs.core.inode_kv_reduce.call(null, this__11909.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__11911 = this;
  var inode__11912 = this;
  var bit__11913 = 1 << (hash >>> shift & 31);
  if((this__11911.bitmap & bit__11913) === 0) {
    return not_found
  }else {
    var idx__11914 = cljs.core.bitmap_indexed_node_index.call(null, this__11911.bitmap, bit__11913);
    var key_or_nil__11915 = this__11911.arr[2 * idx__11914];
    var val_or_node__11916 = this__11911.arr[2 * idx__11914 + 1];
    if(key_or_nil__11915 == null) {
      return val_or_node__11916.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__11915)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__11915, val_or_node__11916], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__11917 = this;
  var inode__11918 = this;
  var bit__11919 = 1 << (hash >>> shift & 31);
  if((this__11917.bitmap & bit__11919) === 0) {
    return inode__11918
  }else {
    var idx__11920 = cljs.core.bitmap_indexed_node_index.call(null, this__11917.bitmap, bit__11919);
    var key_or_nil__11921 = this__11917.arr[2 * idx__11920];
    var val_or_node__11922 = this__11917.arr[2 * idx__11920 + 1];
    if(key_or_nil__11921 == null) {
      var n__11923 = val_or_node__11922.inode_without(shift + 5, hash, key);
      if(n__11923 === val_or_node__11922) {
        return inode__11918
      }else {
        if(!(n__11923 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__11917.bitmap, cljs.core.clone_and_set.call(null, this__11917.arr, 2 * idx__11920 + 1, n__11923))
        }else {
          if(this__11917.bitmap === bit__11919) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__11917.bitmap ^ bit__11919, cljs.core.remove_pair.call(null, this__11917.arr, idx__11920))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__11921)) {
        return new cljs.core.BitmapIndexedNode(null, this__11917.bitmap ^ bit__11919, cljs.core.remove_pair.call(null, this__11917.arr, idx__11920))
      }else {
        if("\ufdd0'else") {
          return inode__11918
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__11924 = this;
  var inode__11925 = this;
  var bit__11926 = 1 << (hash >>> shift & 31);
  var idx__11927 = cljs.core.bitmap_indexed_node_index.call(null, this__11924.bitmap, bit__11926);
  if((this__11924.bitmap & bit__11926) === 0) {
    var n__11928 = cljs.core.bit_count.call(null, this__11924.bitmap);
    if(n__11928 >= 16) {
      var nodes__11929 = cljs.core.make_array.call(null, 32);
      var jdx__11930 = hash >>> shift & 31;
      nodes__11929[jdx__11930] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__11931 = 0;
      var j__11932 = 0;
      while(true) {
        if(i__11931 < 32) {
          if((this__11924.bitmap >>> i__11931 & 1) === 0) {
            var G__11947 = i__11931 + 1;
            var G__11948 = j__11932;
            i__11931 = G__11947;
            j__11932 = G__11948;
            continue
          }else {
            nodes__11929[i__11931] = !(this__11924.arr[j__11932] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__11924.arr[j__11932]), this__11924.arr[j__11932], this__11924.arr[j__11932 + 1], added_leaf_QMARK_) : this__11924.arr[j__11932 + 1];
            var G__11949 = i__11931 + 1;
            var G__11950 = j__11932 + 2;
            i__11931 = G__11949;
            j__11932 = G__11950;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__11928 + 1, nodes__11929)
    }else {
      var new_arr__11933 = cljs.core.make_array.call(null, 2 * (n__11928 + 1));
      cljs.core.array_copy.call(null, this__11924.arr, 0, new_arr__11933, 0, 2 * idx__11927);
      new_arr__11933[2 * idx__11927] = key;
      new_arr__11933[2 * idx__11927 + 1] = val;
      cljs.core.array_copy.call(null, this__11924.arr, 2 * idx__11927, new_arr__11933, 2 * (idx__11927 + 1), 2 * (n__11928 - idx__11927));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__11924.bitmap | bit__11926, new_arr__11933)
    }
  }else {
    var key_or_nil__11934 = this__11924.arr[2 * idx__11927];
    var val_or_node__11935 = this__11924.arr[2 * idx__11927 + 1];
    if(key_or_nil__11934 == null) {
      var n__11936 = val_or_node__11935.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__11936 === val_or_node__11935) {
        return inode__11925
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__11924.bitmap, cljs.core.clone_and_set.call(null, this__11924.arr, 2 * idx__11927 + 1, n__11936))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__11934)) {
        if(val === val_or_node__11935) {
          return inode__11925
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__11924.bitmap, cljs.core.clone_and_set.call(null, this__11924.arr, 2 * idx__11927 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__11924.bitmap, cljs.core.clone_and_set.call(null, this__11924.arr, 2 * idx__11927, null, 2 * idx__11927 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__11934, val_or_node__11935, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__11937 = this;
  var inode__11938 = this;
  var bit__11939 = 1 << (hash >>> shift & 31);
  if((this__11937.bitmap & bit__11939) === 0) {
    return not_found
  }else {
    var idx__11940 = cljs.core.bitmap_indexed_node_index.call(null, this__11937.bitmap, bit__11939);
    var key_or_nil__11941 = this__11937.arr[2 * idx__11940];
    var val_or_node__11942 = this__11937.arr[2 * idx__11940 + 1];
    if(key_or_nil__11941 == null) {
      return val_or_node__11942.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__11941)) {
        return val_or_node__11942
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__11958 = array_node.arr;
  var len__11959 = 2 * (array_node.cnt - 1);
  var new_arr__11960 = cljs.core.make_array.call(null, len__11959);
  var i__11961 = 0;
  var j__11962 = 1;
  var bitmap__11963 = 0;
  while(true) {
    if(i__11961 < len__11959) {
      if(function() {
        var and__3822__auto____11964 = !(i__11961 === idx);
        if(and__3822__auto____11964) {
          return!(arr__11958[i__11961] == null)
        }else {
          return and__3822__auto____11964
        }
      }()) {
        new_arr__11960[j__11962] = arr__11958[i__11961];
        var G__11965 = i__11961 + 1;
        var G__11966 = j__11962 + 2;
        var G__11967 = bitmap__11963 | 1 << i__11961;
        i__11961 = G__11965;
        j__11962 = G__11966;
        bitmap__11963 = G__11967;
        continue
      }else {
        var G__11968 = i__11961 + 1;
        var G__11969 = j__11962;
        var G__11970 = bitmap__11963;
        i__11961 = G__11968;
        j__11962 = G__11969;
        bitmap__11963 = G__11970;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__11963, new_arr__11960)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__11971 = this;
  var inode__11972 = this;
  var idx__11973 = hash >>> shift & 31;
  var node__11974 = this__11971.arr[idx__11973];
  if(node__11974 == null) {
    var editable__11975 = cljs.core.edit_and_set.call(null, inode__11972, edit, idx__11973, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__11975.cnt = editable__11975.cnt + 1;
    return editable__11975
  }else {
    var n__11976 = node__11974.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__11976 === node__11974) {
      return inode__11972
    }else {
      return cljs.core.edit_and_set.call(null, inode__11972, edit, idx__11973, n__11976)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__11977 = this;
  var inode__11978 = this;
  return cljs.core.create_array_node_seq.call(null, this__11977.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__11979 = this;
  var inode__11980 = this;
  var idx__11981 = hash >>> shift & 31;
  var node__11982 = this__11979.arr[idx__11981];
  if(node__11982 == null) {
    return inode__11980
  }else {
    var n__11983 = node__11982.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__11983 === node__11982) {
      return inode__11980
    }else {
      if(n__11983 == null) {
        if(this__11979.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__11980, edit, idx__11981)
        }else {
          var editable__11984 = cljs.core.edit_and_set.call(null, inode__11980, edit, idx__11981, n__11983);
          editable__11984.cnt = editable__11984.cnt - 1;
          return editable__11984
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__11980, edit, idx__11981, n__11983)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__11985 = this;
  var inode__11986 = this;
  if(e === this__11985.edit) {
    return inode__11986
  }else {
    return new cljs.core.ArrayNode(e, this__11985.cnt, this__11985.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__11987 = this;
  var inode__11988 = this;
  var len__11989 = this__11987.arr.length;
  var i__11990 = 0;
  var init__11991 = init;
  while(true) {
    if(i__11990 < len__11989) {
      var node__11992 = this__11987.arr[i__11990];
      if(!(node__11992 == null)) {
        var init__11993 = node__11992.kv_reduce(f, init__11991);
        if(cljs.core.reduced_QMARK_.call(null, init__11993)) {
          return cljs.core.deref.call(null, init__11993)
        }else {
          var G__12012 = i__11990 + 1;
          var G__12013 = init__11993;
          i__11990 = G__12012;
          init__11991 = G__12013;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__11991
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__11994 = this;
  var inode__11995 = this;
  var idx__11996 = hash >>> shift & 31;
  var node__11997 = this__11994.arr[idx__11996];
  if(!(node__11997 == null)) {
    return node__11997.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__11998 = this;
  var inode__11999 = this;
  var idx__12000 = hash >>> shift & 31;
  var node__12001 = this__11998.arr[idx__12000];
  if(!(node__12001 == null)) {
    var n__12002 = node__12001.inode_without(shift + 5, hash, key);
    if(n__12002 === node__12001) {
      return inode__11999
    }else {
      if(n__12002 == null) {
        if(this__11998.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__11999, null, idx__12000)
        }else {
          return new cljs.core.ArrayNode(null, this__11998.cnt - 1, cljs.core.clone_and_set.call(null, this__11998.arr, idx__12000, n__12002))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__11998.cnt, cljs.core.clone_and_set.call(null, this__11998.arr, idx__12000, n__12002))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__11999
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__12003 = this;
  var inode__12004 = this;
  var idx__12005 = hash >>> shift & 31;
  var node__12006 = this__12003.arr[idx__12005];
  if(node__12006 == null) {
    return new cljs.core.ArrayNode(null, this__12003.cnt + 1, cljs.core.clone_and_set.call(null, this__12003.arr, idx__12005, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__12007 = node__12006.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__12007 === node__12006) {
      return inode__12004
    }else {
      return new cljs.core.ArrayNode(null, this__12003.cnt, cljs.core.clone_and_set.call(null, this__12003.arr, idx__12005, n__12007))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__12008 = this;
  var inode__12009 = this;
  var idx__12010 = hash >>> shift & 31;
  var node__12011 = this__12008.arr[idx__12010];
  if(!(node__12011 == null)) {
    return node__12011.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__12016 = 2 * cnt;
  var i__12017 = 0;
  while(true) {
    if(i__12017 < lim__12016) {
      if(cljs.core.key_test.call(null, key, arr[i__12017])) {
        return i__12017
      }else {
        var G__12018 = i__12017 + 2;
        i__12017 = G__12018;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__12019 = this;
  var inode__12020 = this;
  if(hash === this__12019.collision_hash) {
    var idx__12021 = cljs.core.hash_collision_node_find_index.call(null, this__12019.arr, this__12019.cnt, key);
    if(idx__12021 === -1) {
      if(this__12019.arr.length > 2 * this__12019.cnt) {
        var editable__12022 = cljs.core.edit_and_set.call(null, inode__12020, edit, 2 * this__12019.cnt, key, 2 * this__12019.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__12022.cnt = editable__12022.cnt + 1;
        return editable__12022
      }else {
        var len__12023 = this__12019.arr.length;
        var new_arr__12024 = cljs.core.make_array.call(null, len__12023 + 2);
        cljs.core.array_copy.call(null, this__12019.arr, 0, new_arr__12024, 0, len__12023);
        new_arr__12024[len__12023] = key;
        new_arr__12024[len__12023 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__12020.ensure_editable_array(edit, this__12019.cnt + 1, new_arr__12024)
      }
    }else {
      if(this__12019.arr[idx__12021 + 1] === val) {
        return inode__12020
      }else {
        return cljs.core.edit_and_set.call(null, inode__12020, edit, idx__12021 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__12019.collision_hash >>> shift & 31), [null, inode__12020, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__12025 = this;
  var inode__12026 = this;
  return cljs.core.create_inode_seq.call(null, this__12025.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__12027 = this;
  var inode__12028 = this;
  var idx__12029 = cljs.core.hash_collision_node_find_index.call(null, this__12027.arr, this__12027.cnt, key);
  if(idx__12029 === -1) {
    return inode__12028
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__12027.cnt === 1) {
      return null
    }else {
      var editable__12030 = inode__12028.ensure_editable(edit);
      var earr__12031 = editable__12030.arr;
      earr__12031[idx__12029] = earr__12031[2 * this__12027.cnt - 2];
      earr__12031[idx__12029 + 1] = earr__12031[2 * this__12027.cnt - 1];
      earr__12031[2 * this__12027.cnt - 1] = null;
      earr__12031[2 * this__12027.cnt - 2] = null;
      editable__12030.cnt = editable__12030.cnt - 1;
      return editable__12030
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__12032 = this;
  var inode__12033 = this;
  if(e === this__12032.edit) {
    return inode__12033
  }else {
    var new_arr__12034 = cljs.core.make_array.call(null, 2 * (this__12032.cnt + 1));
    cljs.core.array_copy.call(null, this__12032.arr, 0, new_arr__12034, 0, 2 * this__12032.cnt);
    return new cljs.core.HashCollisionNode(e, this__12032.collision_hash, this__12032.cnt, new_arr__12034)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__12035 = this;
  var inode__12036 = this;
  return cljs.core.inode_kv_reduce.call(null, this__12035.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__12037 = this;
  var inode__12038 = this;
  var idx__12039 = cljs.core.hash_collision_node_find_index.call(null, this__12037.arr, this__12037.cnt, key);
  if(idx__12039 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__12037.arr[idx__12039])) {
      return cljs.core.PersistentVector.fromArray([this__12037.arr[idx__12039], this__12037.arr[idx__12039 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__12040 = this;
  var inode__12041 = this;
  var idx__12042 = cljs.core.hash_collision_node_find_index.call(null, this__12040.arr, this__12040.cnt, key);
  if(idx__12042 === -1) {
    return inode__12041
  }else {
    if(this__12040.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__12040.collision_hash, this__12040.cnt - 1, cljs.core.remove_pair.call(null, this__12040.arr, cljs.core.quot.call(null, idx__12042, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__12043 = this;
  var inode__12044 = this;
  if(hash === this__12043.collision_hash) {
    var idx__12045 = cljs.core.hash_collision_node_find_index.call(null, this__12043.arr, this__12043.cnt, key);
    if(idx__12045 === -1) {
      var len__12046 = this__12043.arr.length;
      var new_arr__12047 = cljs.core.make_array.call(null, len__12046 + 2);
      cljs.core.array_copy.call(null, this__12043.arr, 0, new_arr__12047, 0, len__12046);
      new_arr__12047[len__12046] = key;
      new_arr__12047[len__12046 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__12043.collision_hash, this__12043.cnt + 1, new_arr__12047)
    }else {
      if(cljs.core._EQ_.call(null, this__12043.arr[idx__12045], val)) {
        return inode__12044
      }else {
        return new cljs.core.HashCollisionNode(null, this__12043.collision_hash, this__12043.cnt, cljs.core.clone_and_set.call(null, this__12043.arr, idx__12045 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__12043.collision_hash >>> shift & 31), [null, inode__12044])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__12048 = this;
  var inode__12049 = this;
  var idx__12050 = cljs.core.hash_collision_node_find_index.call(null, this__12048.arr, this__12048.cnt, key);
  if(idx__12050 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__12048.arr[idx__12050])) {
      return this__12048.arr[idx__12050 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__12051 = this;
  var inode__12052 = this;
  if(e === this__12051.edit) {
    this__12051.arr = array;
    this__12051.cnt = count;
    return inode__12052
  }else {
    return new cljs.core.HashCollisionNode(this__12051.edit, this__12051.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__12057 = cljs.core.hash.call(null, key1);
    if(key1hash__12057 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__12057, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___12058 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__12057, key1, val1, added_leaf_QMARK___12058).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___12058)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__12059 = cljs.core.hash.call(null, key1);
    if(key1hash__12059 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__12059, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___12060 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__12059, key1, val1, added_leaf_QMARK___12060).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___12060)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12061 = this;
  var h__2188__auto____12062 = this__12061.__hash;
  if(!(h__2188__auto____12062 == null)) {
    return h__2188__auto____12062
  }else {
    var h__2188__auto____12063 = cljs.core.hash_coll.call(null, coll);
    this__12061.__hash = h__2188__auto____12063;
    return h__2188__auto____12063
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12064 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__12065 = this;
  var this__12066 = this;
  return cljs.core.pr_str.call(null, this__12066)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__12067 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12068 = this;
  if(this__12068.s == null) {
    return cljs.core.PersistentVector.fromArray([this__12068.nodes[this__12068.i], this__12068.nodes[this__12068.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__12068.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12069 = this;
  if(this__12069.s == null) {
    return cljs.core.create_inode_seq.call(null, this__12069.nodes, this__12069.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__12069.nodes, this__12069.i, cljs.core.next.call(null, this__12069.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12070 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12071 = this;
  return new cljs.core.NodeSeq(meta, this__12071.nodes, this__12071.i, this__12071.s, this__12071.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12072 = this;
  return this__12072.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12073 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__12073.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__12080 = nodes.length;
      var j__12081 = i;
      while(true) {
        if(j__12081 < len__12080) {
          if(!(nodes[j__12081] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__12081, null, null)
          }else {
            var temp__3971__auto____12082 = nodes[j__12081 + 1];
            if(cljs.core.truth_(temp__3971__auto____12082)) {
              var node__12083 = temp__3971__auto____12082;
              var temp__3971__auto____12084 = node__12083.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____12084)) {
                var node_seq__12085 = temp__3971__auto____12084;
                return new cljs.core.NodeSeq(null, nodes, j__12081 + 2, node_seq__12085, null)
              }else {
                var G__12086 = j__12081 + 2;
                j__12081 = G__12086;
                continue
              }
            }else {
              var G__12087 = j__12081 + 2;
              j__12081 = G__12087;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12088 = this;
  var h__2188__auto____12089 = this__12088.__hash;
  if(!(h__2188__auto____12089 == null)) {
    return h__2188__auto____12089
  }else {
    var h__2188__auto____12090 = cljs.core.hash_coll.call(null, coll);
    this__12088.__hash = h__2188__auto____12090;
    return h__2188__auto____12090
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12091 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__12092 = this;
  var this__12093 = this;
  return cljs.core.pr_str.call(null, this__12093)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__12094 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12095 = this;
  return cljs.core.first.call(null, this__12095.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12096 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__12096.nodes, this__12096.i, cljs.core.next.call(null, this__12096.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12097 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12098 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__12098.nodes, this__12098.i, this__12098.s, this__12098.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12099 = this;
  return this__12099.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12100 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__12100.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__12107 = nodes.length;
      var j__12108 = i;
      while(true) {
        if(j__12108 < len__12107) {
          var temp__3971__auto____12109 = nodes[j__12108];
          if(cljs.core.truth_(temp__3971__auto____12109)) {
            var nj__12110 = temp__3971__auto____12109;
            var temp__3971__auto____12111 = nj__12110.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____12111)) {
              var ns__12112 = temp__3971__auto____12111;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__12108 + 1, ns__12112, null)
            }else {
              var G__12113 = j__12108 + 1;
              j__12108 = G__12113;
              continue
            }
          }else {
            var G__12114 = j__12108 + 1;
            j__12108 = G__12114;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__12117 = this;
  return new cljs.core.TransientHashMap({}, this__12117.root, this__12117.cnt, this__12117.has_nil_QMARK_, this__12117.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12118 = this;
  var h__2188__auto____12119 = this__12118.__hash;
  if(!(h__2188__auto____12119 == null)) {
    return h__2188__auto____12119
  }else {
    var h__2188__auto____12120 = cljs.core.hash_imap.call(null, coll);
    this__12118.__hash = h__2188__auto____12120;
    return h__2188__auto____12120
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__12121 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__12122 = this;
  if(k == null) {
    if(this__12122.has_nil_QMARK_) {
      return this__12122.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__12122.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__12122.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__12123 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____12124 = this__12123.has_nil_QMARK_;
      if(and__3822__auto____12124) {
        return v === this__12123.nil_val
      }else {
        return and__3822__auto____12124
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__12123.meta, this__12123.has_nil_QMARK_ ? this__12123.cnt : this__12123.cnt + 1, this__12123.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___12125 = new cljs.core.Box(false);
    var new_root__12126 = (this__12123.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__12123.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___12125);
    if(new_root__12126 === this__12123.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__12123.meta, added_leaf_QMARK___12125.val ? this__12123.cnt + 1 : this__12123.cnt, new_root__12126, this__12123.has_nil_QMARK_, this__12123.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__12127 = this;
  if(k == null) {
    return this__12127.has_nil_QMARK_
  }else {
    if(this__12127.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__12127.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__12150 = null;
  var G__12150__2 = function(this_sym12128, k) {
    var this__12130 = this;
    var this_sym12128__12131 = this;
    var coll__12132 = this_sym12128__12131;
    return coll__12132.cljs$core$ILookup$_lookup$arity$2(coll__12132, k)
  };
  var G__12150__3 = function(this_sym12129, k, not_found) {
    var this__12130 = this;
    var this_sym12129__12133 = this;
    var coll__12134 = this_sym12129__12133;
    return coll__12134.cljs$core$ILookup$_lookup$arity$3(coll__12134, k, not_found)
  };
  G__12150 = function(this_sym12129, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12150__2.call(this, this_sym12129, k);
      case 3:
        return G__12150__3.call(this, this_sym12129, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12150
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym12115, args12116) {
  var this__12135 = this;
  return this_sym12115.call.apply(this_sym12115, [this_sym12115].concat(args12116.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__12136 = this;
  var init__12137 = this__12136.has_nil_QMARK_ ? f.call(null, init, null, this__12136.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__12137)) {
    return cljs.core.deref.call(null, init__12137)
  }else {
    if(!(this__12136.root == null)) {
      return this__12136.root.kv_reduce(f, init__12137)
    }else {
      if("\ufdd0'else") {
        return init__12137
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__12138 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__12139 = this;
  var this__12140 = this;
  return cljs.core.pr_str.call(null, this__12140)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12141 = this;
  if(this__12141.cnt > 0) {
    var s__12142 = !(this__12141.root == null) ? this__12141.root.inode_seq() : null;
    if(this__12141.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__12141.nil_val], true), s__12142)
    }else {
      return s__12142
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12143 = this;
  return this__12143.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12144 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12145 = this;
  return new cljs.core.PersistentHashMap(meta, this__12145.cnt, this__12145.root, this__12145.has_nil_QMARK_, this__12145.nil_val, this__12145.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12146 = this;
  return this__12146.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12147 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__12147.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__12148 = this;
  if(k == null) {
    if(this__12148.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__12148.meta, this__12148.cnt - 1, this__12148.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__12148.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__12149 = this__12148.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__12149 === this__12148.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__12148.meta, this__12148.cnt - 1, new_root__12149, this__12148.has_nil_QMARK_, this__12148.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__12151 = ks.length;
  var i__12152 = 0;
  var out__12153 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__12152 < len__12151) {
      var G__12154 = i__12152 + 1;
      var G__12155 = cljs.core.assoc_BANG_.call(null, out__12153, ks[i__12152], vs[i__12152]);
      i__12152 = G__12154;
      out__12153 = G__12155;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__12153)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__12156 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__12157 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__12158 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__12159 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__12160 = this;
  if(k == null) {
    if(this__12160.has_nil_QMARK_) {
      return this__12160.nil_val
    }else {
      return null
    }
  }else {
    if(this__12160.root == null) {
      return null
    }else {
      return this__12160.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__12161 = this;
  if(k == null) {
    if(this__12161.has_nil_QMARK_) {
      return this__12161.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__12161.root == null) {
      return not_found
    }else {
      return this__12161.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12162 = this;
  if(this__12162.edit) {
    return this__12162.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__12163 = this;
  var tcoll__12164 = this;
  if(this__12163.edit) {
    if(function() {
      var G__12165__12166 = o;
      if(G__12165__12166) {
        if(function() {
          var or__3824__auto____12167 = G__12165__12166.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____12167) {
            return or__3824__auto____12167
          }else {
            return G__12165__12166.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__12165__12166.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__12165__12166)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__12165__12166)
      }
    }()) {
      return tcoll__12164.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__12168 = cljs.core.seq.call(null, o);
      var tcoll__12169 = tcoll__12164;
      while(true) {
        var temp__3971__auto____12170 = cljs.core.first.call(null, es__12168);
        if(cljs.core.truth_(temp__3971__auto____12170)) {
          var e__12171 = temp__3971__auto____12170;
          var G__12182 = cljs.core.next.call(null, es__12168);
          var G__12183 = tcoll__12169.assoc_BANG_(cljs.core.key.call(null, e__12171), cljs.core.val.call(null, e__12171));
          es__12168 = G__12182;
          tcoll__12169 = G__12183;
          continue
        }else {
          return tcoll__12169
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__12172 = this;
  var tcoll__12173 = this;
  if(this__12172.edit) {
    if(k == null) {
      if(this__12172.nil_val === v) {
      }else {
        this__12172.nil_val = v
      }
      if(this__12172.has_nil_QMARK_) {
      }else {
        this__12172.count = this__12172.count + 1;
        this__12172.has_nil_QMARK_ = true
      }
      return tcoll__12173
    }else {
      var added_leaf_QMARK___12174 = new cljs.core.Box(false);
      var node__12175 = (this__12172.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__12172.root).inode_assoc_BANG_(this__12172.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___12174);
      if(node__12175 === this__12172.root) {
      }else {
        this__12172.root = node__12175
      }
      if(added_leaf_QMARK___12174.val) {
        this__12172.count = this__12172.count + 1
      }else {
      }
      return tcoll__12173
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__12176 = this;
  var tcoll__12177 = this;
  if(this__12176.edit) {
    if(k == null) {
      if(this__12176.has_nil_QMARK_) {
        this__12176.has_nil_QMARK_ = false;
        this__12176.nil_val = null;
        this__12176.count = this__12176.count - 1;
        return tcoll__12177
      }else {
        return tcoll__12177
      }
    }else {
      if(this__12176.root == null) {
        return tcoll__12177
      }else {
        var removed_leaf_QMARK___12178 = new cljs.core.Box(false);
        var node__12179 = this__12176.root.inode_without_BANG_(this__12176.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___12178);
        if(node__12179 === this__12176.root) {
        }else {
          this__12176.root = node__12179
        }
        if(cljs.core.truth_(removed_leaf_QMARK___12178[0])) {
          this__12176.count = this__12176.count - 1
        }else {
        }
        return tcoll__12177
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__12180 = this;
  var tcoll__12181 = this;
  if(this__12180.edit) {
    this__12180.edit = null;
    return new cljs.core.PersistentHashMap(null, this__12180.count, this__12180.root, this__12180.has_nil_QMARK_, this__12180.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__12186 = node;
  var stack__12187 = stack;
  while(true) {
    if(!(t__12186 == null)) {
      var G__12188 = ascending_QMARK_ ? t__12186.left : t__12186.right;
      var G__12189 = cljs.core.conj.call(null, stack__12187, t__12186);
      t__12186 = G__12188;
      stack__12187 = G__12189;
      continue
    }else {
      return stack__12187
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12190 = this;
  var h__2188__auto____12191 = this__12190.__hash;
  if(!(h__2188__auto____12191 == null)) {
    return h__2188__auto____12191
  }else {
    var h__2188__auto____12192 = cljs.core.hash_coll.call(null, coll);
    this__12190.__hash = h__2188__auto____12192;
    return h__2188__auto____12192
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12193 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__12194 = this;
  var this__12195 = this;
  return cljs.core.pr_str.call(null, this__12195)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__12196 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12197 = this;
  if(this__12197.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__12197.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__12198 = this;
  return cljs.core.peek.call(null, this__12198.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__12199 = this;
  var t__12200 = cljs.core.first.call(null, this__12199.stack);
  var next_stack__12201 = cljs.core.tree_map_seq_push.call(null, this__12199.ascending_QMARK_ ? t__12200.right : t__12200.left, cljs.core.next.call(null, this__12199.stack), this__12199.ascending_QMARK_);
  if(!(next_stack__12201 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__12201, this__12199.ascending_QMARK_, this__12199.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12202 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12203 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__12203.stack, this__12203.ascending_QMARK_, this__12203.cnt, this__12203.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12204 = this;
  return this__12204.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____12206 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____12206) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____12206
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____12208 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____12208) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____12208
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__12212 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__12212)) {
    return cljs.core.deref.call(null, init__12212)
  }else {
    var init__12213 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__12212) : init__12212;
    if(cljs.core.reduced_QMARK_.call(null, init__12213)) {
      return cljs.core.deref.call(null, init__12213)
    }else {
      var init__12214 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__12213) : init__12213;
      if(cljs.core.reduced_QMARK_.call(null, init__12214)) {
        return cljs.core.deref.call(null, init__12214)
      }else {
        return init__12214
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12217 = this;
  var h__2188__auto____12218 = this__12217.__hash;
  if(!(h__2188__auto____12218 == null)) {
    return h__2188__auto____12218
  }else {
    var h__2188__auto____12219 = cljs.core.hash_coll.call(null, coll);
    this__12217.__hash = h__2188__auto____12219;
    return h__2188__auto____12219
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__12220 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__12221 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__12222 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__12222.key, this__12222.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__12270 = null;
  var G__12270__2 = function(this_sym12223, k) {
    var this__12225 = this;
    var this_sym12223__12226 = this;
    var node__12227 = this_sym12223__12226;
    return node__12227.cljs$core$ILookup$_lookup$arity$2(node__12227, k)
  };
  var G__12270__3 = function(this_sym12224, k, not_found) {
    var this__12225 = this;
    var this_sym12224__12228 = this;
    var node__12229 = this_sym12224__12228;
    return node__12229.cljs$core$ILookup$_lookup$arity$3(node__12229, k, not_found)
  };
  G__12270 = function(this_sym12224, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12270__2.call(this, this_sym12224, k);
      case 3:
        return G__12270__3.call(this, this_sym12224, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12270
}();
cljs.core.BlackNode.prototype.apply = function(this_sym12215, args12216) {
  var this__12230 = this;
  return this_sym12215.call.apply(this_sym12215, [this_sym12215].concat(args12216.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__12231 = this;
  return cljs.core.PersistentVector.fromArray([this__12231.key, this__12231.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__12232 = this;
  return this__12232.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__12233 = this;
  return this__12233.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__12234 = this;
  var node__12235 = this;
  return ins.balance_right(node__12235)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__12236 = this;
  var node__12237 = this;
  return new cljs.core.RedNode(this__12236.key, this__12236.val, this__12236.left, this__12236.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__12238 = this;
  var node__12239 = this;
  return cljs.core.balance_right_del.call(null, this__12238.key, this__12238.val, this__12238.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__12240 = this;
  var node__12241 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__12242 = this;
  var node__12243 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__12243, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__12244 = this;
  var node__12245 = this;
  return cljs.core.balance_left_del.call(null, this__12244.key, this__12244.val, del, this__12244.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__12246 = this;
  var node__12247 = this;
  return ins.balance_left(node__12247)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__12248 = this;
  var node__12249 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__12249, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__12271 = null;
  var G__12271__0 = function() {
    var this__12250 = this;
    var this__12252 = this;
    return cljs.core.pr_str.call(null, this__12252)
  };
  G__12271 = function() {
    switch(arguments.length) {
      case 0:
        return G__12271__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12271
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__12253 = this;
  var node__12254 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__12254, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__12255 = this;
  var node__12256 = this;
  return node__12256
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__12257 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__12258 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__12259 = this;
  return cljs.core.list.call(null, this__12259.key, this__12259.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__12260 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__12261 = this;
  return this__12261.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__12262 = this;
  return cljs.core.PersistentVector.fromArray([this__12262.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__12263 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__12263.key, this__12263.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12264 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__12265 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__12265.key, this__12265.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__12266 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__12267 = this;
  if(n === 0) {
    return this__12267.key
  }else {
    if(n === 1) {
      return this__12267.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__12268 = this;
  if(n === 0) {
    return this__12268.key
  }else {
    if(n === 1) {
      return this__12268.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__12269 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12274 = this;
  var h__2188__auto____12275 = this__12274.__hash;
  if(!(h__2188__auto____12275 == null)) {
    return h__2188__auto____12275
  }else {
    var h__2188__auto____12276 = cljs.core.hash_coll.call(null, coll);
    this__12274.__hash = h__2188__auto____12276;
    return h__2188__auto____12276
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__12277 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__12278 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__12279 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__12279.key, this__12279.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__12327 = null;
  var G__12327__2 = function(this_sym12280, k) {
    var this__12282 = this;
    var this_sym12280__12283 = this;
    var node__12284 = this_sym12280__12283;
    return node__12284.cljs$core$ILookup$_lookup$arity$2(node__12284, k)
  };
  var G__12327__3 = function(this_sym12281, k, not_found) {
    var this__12282 = this;
    var this_sym12281__12285 = this;
    var node__12286 = this_sym12281__12285;
    return node__12286.cljs$core$ILookup$_lookup$arity$3(node__12286, k, not_found)
  };
  G__12327 = function(this_sym12281, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12327__2.call(this, this_sym12281, k);
      case 3:
        return G__12327__3.call(this, this_sym12281, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12327
}();
cljs.core.RedNode.prototype.apply = function(this_sym12272, args12273) {
  var this__12287 = this;
  return this_sym12272.call.apply(this_sym12272, [this_sym12272].concat(args12273.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__12288 = this;
  return cljs.core.PersistentVector.fromArray([this__12288.key, this__12288.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__12289 = this;
  return this__12289.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__12290 = this;
  return this__12290.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__12291 = this;
  var node__12292 = this;
  return new cljs.core.RedNode(this__12291.key, this__12291.val, this__12291.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__12293 = this;
  var node__12294 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__12295 = this;
  var node__12296 = this;
  return new cljs.core.RedNode(this__12295.key, this__12295.val, this__12295.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__12297 = this;
  var node__12298 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__12299 = this;
  var node__12300 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__12300, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__12301 = this;
  var node__12302 = this;
  return new cljs.core.RedNode(this__12301.key, this__12301.val, del, this__12301.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__12303 = this;
  var node__12304 = this;
  return new cljs.core.RedNode(this__12303.key, this__12303.val, ins, this__12303.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__12305 = this;
  var node__12306 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__12305.left)) {
    return new cljs.core.RedNode(this__12305.key, this__12305.val, this__12305.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__12305.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__12305.right)) {
      return new cljs.core.RedNode(this__12305.right.key, this__12305.right.val, new cljs.core.BlackNode(this__12305.key, this__12305.val, this__12305.left, this__12305.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__12305.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__12306, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__12328 = null;
  var G__12328__0 = function() {
    var this__12307 = this;
    var this__12309 = this;
    return cljs.core.pr_str.call(null, this__12309)
  };
  G__12328 = function() {
    switch(arguments.length) {
      case 0:
        return G__12328__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12328
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__12310 = this;
  var node__12311 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__12310.right)) {
    return new cljs.core.RedNode(this__12310.key, this__12310.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__12310.left, null), this__12310.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__12310.left)) {
      return new cljs.core.RedNode(this__12310.left.key, this__12310.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__12310.left.left, null), new cljs.core.BlackNode(this__12310.key, this__12310.val, this__12310.left.right, this__12310.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__12311, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__12312 = this;
  var node__12313 = this;
  return new cljs.core.BlackNode(this__12312.key, this__12312.val, this__12312.left, this__12312.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__12314 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__12315 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__12316 = this;
  return cljs.core.list.call(null, this__12316.key, this__12316.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__12317 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__12318 = this;
  return this__12318.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__12319 = this;
  return cljs.core.PersistentVector.fromArray([this__12319.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__12320 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__12320.key, this__12320.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12321 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__12322 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__12322.key, this__12322.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__12323 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__12324 = this;
  if(n === 0) {
    return this__12324.key
  }else {
    if(n === 1) {
      return this__12324.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__12325 = this;
  if(n === 0) {
    return this__12325.key
  }else {
    if(n === 1) {
      return this__12325.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__12326 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__12332 = comp.call(null, k, tree.key);
    if(c__12332 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__12332 < 0) {
        var ins__12333 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__12333 == null)) {
          return tree.add_left(ins__12333)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__12334 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__12334 == null)) {
            return tree.add_right(ins__12334)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__12337 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__12337)) {
            return new cljs.core.RedNode(app__12337.key, app__12337.val, new cljs.core.RedNode(left.key, left.val, left.left, app__12337.left, null), new cljs.core.RedNode(right.key, right.val, app__12337.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__12337, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__12338 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__12338)) {
              return new cljs.core.RedNode(app__12338.key, app__12338.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__12338.left, null), new cljs.core.BlackNode(right.key, right.val, app__12338.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__12338, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__12344 = comp.call(null, k, tree.key);
    if(c__12344 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__12344 < 0) {
        var del__12345 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____12346 = !(del__12345 == null);
          if(or__3824__auto____12346) {
            return or__3824__auto____12346
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__12345, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__12345, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__12347 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____12348 = !(del__12347 == null);
            if(or__3824__auto____12348) {
              return or__3824__auto____12348
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__12347)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__12347, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__12351 = tree.key;
  var c__12352 = comp.call(null, k, tk__12351);
  if(c__12352 === 0) {
    return tree.replace(tk__12351, v, tree.left, tree.right)
  }else {
    if(c__12352 < 0) {
      return tree.replace(tk__12351, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__12351, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12355 = this;
  var h__2188__auto____12356 = this__12355.__hash;
  if(!(h__2188__auto____12356 == null)) {
    return h__2188__auto____12356
  }else {
    var h__2188__auto____12357 = cljs.core.hash_imap.call(null, coll);
    this__12355.__hash = h__2188__auto____12357;
    return h__2188__auto____12357
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__12358 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__12359 = this;
  var n__12360 = coll.entry_at(k);
  if(!(n__12360 == null)) {
    return n__12360.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__12361 = this;
  var found__12362 = [null];
  var t__12363 = cljs.core.tree_map_add.call(null, this__12361.comp, this__12361.tree, k, v, found__12362);
  if(t__12363 == null) {
    var found_node__12364 = cljs.core.nth.call(null, found__12362, 0);
    if(cljs.core._EQ_.call(null, v, found_node__12364.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__12361.comp, cljs.core.tree_map_replace.call(null, this__12361.comp, this__12361.tree, k, v), this__12361.cnt, this__12361.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__12361.comp, t__12363.blacken(), this__12361.cnt + 1, this__12361.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__12365 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__12399 = null;
  var G__12399__2 = function(this_sym12366, k) {
    var this__12368 = this;
    var this_sym12366__12369 = this;
    var coll__12370 = this_sym12366__12369;
    return coll__12370.cljs$core$ILookup$_lookup$arity$2(coll__12370, k)
  };
  var G__12399__3 = function(this_sym12367, k, not_found) {
    var this__12368 = this;
    var this_sym12367__12371 = this;
    var coll__12372 = this_sym12367__12371;
    return coll__12372.cljs$core$ILookup$_lookup$arity$3(coll__12372, k, not_found)
  };
  G__12399 = function(this_sym12367, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12399__2.call(this, this_sym12367, k);
      case 3:
        return G__12399__3.call(this, this_sym12367, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12399
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym12353, args12354) {
  var this__12373 = this;
  return this_sym12353.call.apply(this_sym12353, [this_sym12353].concat(args12354.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__12374 = this;
  if(!(this__12374.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__12374.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__12375 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__12376 = this;
  if(this__12376.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__12376.tree, false, this__12376.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__12377 = this;
  var this__12378 = this;
  return cljs.core.pr_str.call(null, this__12378)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__12379 = this;
  var coll__12380 = this;
  var t__12381 = this__12379.tree;
  while(true) {
    if(!(t__12381 == null)) {
      var c__12382 = this__12379.comp.call(null, k, t__12381.key);
      if(c__12382 === 0) {
        return t__12381
      }else {
        if(c__12382 < 0) {
          var G__12400 = t__12381.left;
          t__12381 = G__12400;
          continue
        }else {
          if("\ufdd0'else") {
            var G__12401 = t__12381.right;
            t__12381 = G__12401;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__12383 = this;
  if(this__12383.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__12383.tree, ascending_QMARK_, this__12383.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__12384 = this;
  if(this__12384.cnt > 0) {
    var stack__12385 = null;
    var t__12386 = this__12384.tree;
    while(true) {
      if(!(t__12386 == null)) {
        var c__12387 = this__12384.comp.call(null, k, t__12386.key);
        if(c__12387 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__12385, t__12386), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__12387 < 0) {
              var G__12402 = cljs.core.conj.call(null, stack__12385, t__12386);
              var G__12403 = t__12386.left;
              stack__12385 = G__12402;
              t__12386 = G__12403;
              continue
            }else {
              var G__12404 = stack__12385;
              var G__12405 = t__12386.right;
              stack__12385 = G__12404;
              t__12386 = G__12405;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__12387 > 0) {
                var G__12406 = cljs.core.conj.call(null, stack__12385, t__12386);
                var G__12407 = t__12386.right;
                stack__12385 = G__12406;
                t__12386 = G__12407;
                continue
              }else {
                var G__12408 = stack__12385;
                var G__12409 = t__12386.left;
                stack__12385 = G__12408;
                t__12386 = G__12409;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__12385 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__12385, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__12388 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__12389 = this;
  return this__12389.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12390 = this;
  if(this__12390.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__12390.tree, true, this__12390.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12391 = this;
  return this__12391.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12392 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12393 = this;
  return new cljs.core.PersistentTreeMap(this__12393.comp, this__12393.tree, this__12393.cnt, meta, this__12393.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12394 = this;
  return this__12394.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12395 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__12395.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__12396 = this;
  var found__12397 = [null];
  var t__12398 = cljs.core.tree_map_remove.call(null, this__12396.comp, this__12396.tree, k, found__12397);
  if(t__12398 == null) {
    if(cljs.core.nth.call(null, found__12397, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__12396.comp, null, 0, this__12396.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__12396.comp, t__12398.blacken(), this__12396.cnt - 1, this__12396.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__12412 = cljs.core.seq.call(null, keyvals);
    var out__12413 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__12412) {
        var G__12414 = cljs.core.nnext.call(null, in__12412);
        var G__12415 = cljs.core.assoc_BANG_.call(null, out__12413, cljs.core.first.call(null, in__12412), cljs.core.second.call(null, in__12412));
        in__12412 = G__12414;
        out__12413 = G__12415;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__12413)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__12416) {
    var keyvals = cljs.core.seq(arglist__12416);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__12417) {
    var keyvals = cljs.core.seq(arglist__12417);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__12421 = [];
    var obj__12422 = {};
    var kvs__12423 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__12423) {
        ks__12421.push(cljs.core.first.call(null, kvs__12423));
        obj__12422[cljs.core.first.call(null, kvs__12423)] = cljs.core.second.call(null, kvs__12423);
        var G__12424 = cljs.core.nnext.call(null, kvs__12423);
        kvs__12423 = G__12424;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__12421, obj__12422)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__12425) {
    var keyvals = cljs.core.seq(arglist__12425);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__12428 = cljs.core.seq.call(null, keyvals);
    var out__12429 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__12428) {
        var G__12430 = cljs.core.nnext.call(null, in__12428);
        var G__12431 = cljs.core.assoc.call(null, out__12429, cljs.core.first.call(null, in__12428), cljs.core.second.call(null, in__12428));
        in__12428 = G__12430;
        out__12429 = G__12431;
        continue
      }else {
        return out__12429
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__12432) {
    var keyvals = cljs.core.seq(arglist__12432);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__12435 = cljs.core.seq.call(null, keyvals);
    var out__12436 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__12435) {
        var G__12437 = cljs.core.nnext.call(null, in__12435);
        var G__12438 = cljs.core.assoc.call(null, out__12436, cljs.core.first.call(null, in__12435), cljs.core.second.call(null, in__12435));
        in__12435 = G__12437;
        out__12436 = G__12438;
        continue
      }else {
        return out__12436
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__12439) {
    var comparator = cljs.core.first(arglist__12439);
    var keyvals = cljs.core.rest(arglist__12439);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__12440_SHARP_, p2__12441_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____12443 = p1__12440_SHARP_;
          if(cljs.core.truth_(or__3824__auto____12443)) {
            return or__3824__auto____12443
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__12441_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__12444) {
    var maps = cljs.core.seq(arglist__12444);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__12452 = function(m, e) {
        var k__12450 = cljs.core.first.call(null, e);
        var v__12451 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__12450)) {
          return cljs.core.assoc.call(null, m, k__12450, f.call(null, cljs.core._lookup.call(null, m, k__12450, null), v__12451))
        }else {
          return cljs.core.assoc.call(null, m, k__12450, v__12451)
        }
      };
      var merge2__12454 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__12452, function() {
          var or__3824__auto____12453 = m1;
          if(cljs.core.truth_(or__3824__auto____12453)) {
            return or__3824__auto____12453
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__12454, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__12455) {
    var f = cljs.core.first(arglist__12455);
    var maps = cljs.core.rest(arglist__12455);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__12460 = cljs.core.ObjMap.EMPTY;
  var keys__12461 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__12461) {
      var key__12462 = cljs.core.first.call(null, keys__12461);
      var entry__12463 = cljs.core._lookup.call(null, map, key__12462, "\ufdd0'user/not-found");
      var G__12464 = cljs.core.not_EQ_.call(null, entry__12463, "\ufdd0'user/not-found") ? cljs.core.assoc.call(null, ret__12460, key__12462, entry__12463) : ret__12460;
      var G__12465 = cljs.core.next.call(null, keys__12461);
      ret__12460 = G__12464;
      keys__12461 = G__12465;
      continue
    }else {
      return ret__12460
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__12469 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__12469.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12470 = this;
  var h__2188__auto____12471 = this__12470.__hash;
  if(!(h__2188__auto____12471 == null)) {
    return h__2188__auto____12471
  }else {
    var h__2188__auto____12472 = cljs.core.hash_iset.call(null, coll);
    this__12470.__hash = h__2188__auto____12472;
    return h__2188__auto____12472
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__12473 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__12474 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__12474.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__12495 = null;
  var G__12495__2 = function(this_sym12475, k) {
    var this__12477 = this;
    var this_sym12475__12478 = this;
    var coll__12479 = this_sym12475__12478;
    return coll__12479.cljs$core$ILookup$_lookup$arity$2(coll__12479, k)
  };
  var G__12495__3 = function(this_sym12476, k, not_found) {
    var this__12477 = this;
    var this_sym12476__12480 = this;
    var coll__12481 = this_sym12476__12480;
    return coll__12481.cljs$core$ILookup$_lookup$arity$3(coll__12481, k, not_found)
  };
  G__12495 = function(this_sym12476, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12495__2.call(this, this_sym12476, k);
      case 3:
        return G__12495__3.call(this, this_sym12476, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12495
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym12467, args12468) {
  var this__12482 = this;
  return this_sym12467.call.apply(this_sym12467, [this_sym12467].concat(args12468.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12483 = this;
  return new cljs.core.PersistentHashSet(this__12483.meta, cljs.core.assoc.call(null, this__12483.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__12484 = this;
  var this__12485 = this;
  return cljs.core.pr_str.call(null, this__12485)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12486 = this;
  return cljs.core.keys.call(null, this__12486.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__12487 = this;
  return new cljs.core.PersistentHashSet(this__12487.meta, cljs.core.dissoc.call(null, this__12487.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12488 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12489 = this;
  var and__3822__auto____12490 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____12490) {
    var and__3822__auto____12491 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____12491) {
      return cljs.core.every_QMARK_.call(null, function(p1__12466_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__12466_SHARP_)
      }, other)
    }else {
      return and__3822__auto____12491
    }
  }else {
    return and__3822__auto____12490
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12492 = this;
  return new cljs.core.PersistentHashSet(meta, this__12492.hash_map, this__12492.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12493 = this;
  return this__12493.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12494 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__12494.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__12496 = cljs.core.count.call(null, items);
  var i__12497 = 0;
  var out__12498 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__12497 < len__12496) {
      var G__12499 = i__12497 + 1;
      var G__12500 = cljs.core.conj_BANG_.call(null, out__12498, items[i__12497]);
      i__12497 = G__12499;
      out__12498 = G__12500;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__12498)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__12518 = null;
  var G__12518__2 = function(this_sym12504, k) {
    var this__12506 = this;
    var this_sym12504__12507 = this;
    var tcoll__12508 = this_sym12504__12507;
    if(cljs.core._lookup.call(null, this__12506.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__12518__3 = function(this_sym12505, k, not_found) {
    var this__12506 = this;
    var this_sym12505__12509 = this;
    var tcoll__12510 = this_sym12505__12509;
    if(cljs.core._lookup.call(null, this__12506.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__12518 = function(this_sym12505, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12518__2.call(this, this_sym12505, k);
      case 3:
        return G__12518__3.call(this, this_sym12505, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12518
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym12502, args12503) {
  var this__12511 = this;
  return this_sym12502.call.apply(this_sym12502, [this_sym12502].concat(args12503.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__12512 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__12513 = this;
  if(cljs.core._lookup.call(null, this__12513.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__12514 = this;
  return cljs.core.count.call(null, this__12514.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__12515 = this;
  this__12515.transient_map = cljs.core.dissoc_BANG_.call(null, this__12515.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__12516 = this;
  this__12516.transient_map = cljs.core.assoc_BANG_.call(null, this__12516.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__12517 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__12517.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12521 = this;
  var h__2188__auto____12522 = this__12521.__hash;
  if(!(h__2188__auto____12522 == null)) {
    return h__2188__auto____12522
  }else {
    var h__2188__auto____12523 = cljs.core.hash_iset.call(null, coll);
    this__12521.__hash = h__2188__auto____12523;
    return h__2188__auto____12523
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__12524 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__12525 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__12525.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__12551 = null;
  var G__12551__2 = function(this_sym12526, k) {
    var this__12528 = this;
    var this_sym12526__12529 = this;
    var coll__12530 = this_sym12526__12529;
    return coll__12530.cljs$core$ILookup$_lookup$arity$2(coll__12530, k)
  };
  var G__12551__3 = function(this_sym12527, k, not_found) {
    var this__12528 = this;
    var this_sym12527__12531 = this;
    var coll__12532 = this_sym12527__12531;
    return coll__12532.cljs$core$ILookup$_lookup$arity$3(coll__12532, k, not_found)
  };
  G__12551 = function(this_sym12527, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12551__2.call(this, this_sym12527, k);
      case 3:
        return G__12551__3.call(this, this_sym12527, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12551
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym12519, args12520) {
  var this__12533 = this;
  return this_sym12519.call.apply(this_sym12519, [this_sym12519].concat(args12520.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12534 = this;
  return new cljs.core.PersistentTreeSet(this__12534.meta, cljs.core.assoc.call(null, this__12534.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__12535 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__12535.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__12536 = this;
  var this__12537 = this;
  return cljs.core.pr_str.call(null, this__12537)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__12538 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__12538.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__12539 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__12539.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__12540 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__12541 = this;
  return cljs.core._comparator.call(null, this__12541.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12542 = this;
  return cljs.core.keys.call(null, this__12542.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__12543 = this;
  return new cljs.core.PersistentTreeSet(this__12543.meta, cljs.core.dissoc.call(null, this__12543.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12544 = this;
  return cljs.core.count.call(null, this__12544.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12545 = this;
  var and__3822__auto____12546 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____12546) {
    var and__3822__auto____12547 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____12547) {
      return cljs.core.every_QMARK_.call(null, function(p1__12501_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__12501_SHARP_)
      }, other)
    }else {
      return and__3822__auto____12547
    }
  }else {
    return and__3822__auto____12546
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12548 = this;
  return new cljs.core.PersistentTreeSet(meta, this__12548.tree_map, this__12548.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12549 = this;
  return this__12549.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12550 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__12550.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__12556__delegate = function(keys) {
      var in__12554 = cljs.core.seq.call(null, keys);
      var out__12555 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__12554)) {
          var G__12557 = cljs.core.next.call(null, in__12554);
          var G__12558 = cljs.core.conj_BANG_.call(null, out__12555, cljs.core.first.call(null, in__12554));
          in__12554 = G__12557;
          out__12555 = G__12558;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__12555)
        }
        break
      }
    };
    var G__12556 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__12556__delegate.call(this, keys)
    };
    G__12556.cljs$lang$maxFixedArity = 0;
    G__12556.cljs$lang$applyTo = function(arglist__12559) {
      var keys = cljs.core.seq(arglist__12559);
      return G__12556__delegate(keys)
    };
    G__12556.cljs$lang$arity$variadic = G__12556__delegate;
    return G__12556
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__12560) {
    var keys = cljs.core.seq(arglist__12560);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__12562) {
    var comparator = cljs.core.first(arglist__12562);
    var keys = cljs.core.rest(arglist__12562);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__12568 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____12569 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____12569)) {
        var e__12570 = temp__3971__auto____12569;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__12570))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__12568, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__12561_SHARP_) {
      var temp__3971__auto____12571 = cljs.core.find.call(null, smap, p1__12561_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____12571)) {
        var e__12572 = temp__3971__auto____12571;
        return cljs.core.second.call(null, e__12572)
      }else {
        return p1__12561_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__12602 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__12595, seen) {
        while(true) {
          var vec__12596__12597 = p__12595;
          var f__12598 = cljs.core.nth.call(null, vec__12596__12597, 0, null);
          var xs__12599 = vec__12596__12597;
          var temp__3974__auto____12600 = cljs.core.seq.call(null, xs__12599);
          if(temp__3974__auto____12600) {
            var s__12601 = temp__3974__auto____12600;
            if(cljs.core.contains_QMARK_.call(null, seen, f__12598)) {
              var G__12603 = cljs.core.rest.call(null, s__12601);
              var G__12604 = seen;
              p__12595 = G__12603;
              seen = G__12604;
              continue
            }else {
              return cljs.core.cons.call(null, f__12598, step.call(null, cljs.core.rest.call(null, s__12601), cljs.core.conj.call(null, seen, f__12598)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__12602.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__12607 = cljs.core.PersistentVector.EMPTY;
  var s__12608 = s;
  while(true) {
    if(cljs.core.next.call(null, s__12608)) {
      var G__12609 = cljs.core.conj.call(null, ret__12607, cljs.core.first.call(null, s__12608));
      var G__12610 = cljs.core.next.call(null, s__12608);
      ret__12607 = G__12609;
      s__12608 = G__12610;
      continue
    }else {
      return cljs.core.seq.call(null, ret__12607)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____12613 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____12613) {
        return or__3824__auto____12613
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__12614 = x.lastIndexOf("/");
      if(i__12614 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__12614 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____12617 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____12617) {
      return or__3824__auto____12617
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__12618 = x.lastIndexOf("/");
    if(i__12618 > -1) {
      return cljs.core.subs.call(null, x, 2, i__12618)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__12625 = cljs.core.ObjMap.EMPTY;
  var ks__12626 = cljs.core.seq.call(null, keys);
  var vs__12627 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____12628 = ks__12626;
      if(and__3822__auto____12628) {
        return vs__12627
      }else {
        return and__3822__auto____12628
      }
    }()) {
      var G__12629 = cljs.core.assoc.call(null, map__12625, cljs.core.first.call(null, ks__12626), cljs.core.first.call(null, vs__12627));
      var G__12630 = cljs.core.next.call(null, ks__12626);
      var G__12631 = cljs.core.next.call(null, vs__12627);
      map__12625 = G__12629;
      ks__12626 = G__12630;
      vs__12627 = G__12631;
      continue
    }else {
      return map__12625
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__12634__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__12619_SHARP_, p2__12620_SHARP_) {
        return max_key.call(null, k, p1__12619_SHARP_, p2__12620_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__12634 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12634__delegate.call(this, k, x, y, more)
    };
    G__12634.cljs$lang$maxFixedArity = 3;
    G__12634.cljs$lang$applyTo = function(arglist__12635) {
      var k = cljs.core.first(arglist__12635);
      var x = cljs.core.first(cljs.core.next(arglist__12635));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12635)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12635)));
      return G__12634__delegate(k, x, y, more)
    };
    G__12634.cljs$lang$arity$variadic = G__12634__delegate;
    return G__12634
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__12636__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__12632_SHARP_, p2__12633_SHARP_) {
        return min_key.call(null, k, p1__12632_SHARP_, p2__12633_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__12636 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12636__delegate.call(this, k, x, y, more)
    };
    G__12636.cljs$lang$maxFixedArity = 3;
    G__12636.cljs$lang$applyTo = function(arglist__12637) {
      var k = cljs.core.first(arglist__12637);
      var x = cljs.core.first(cljs.core.next(arglist__12637));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12637)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12637)));
      return G__12636__delegate(k, x, y, more)
    };
    G__12636.cljs$lang$arity$variadic = G__12636__delegate;
    return G__12636
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____12640 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____12640) {
        var s__12641 = temp__3974__auto____12640;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__12641), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__12641)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____12644 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____12644) {
      var s__12645 = temp__3974__auto____12644;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__12645)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__12645), take_while.call(null, pred, cljs.core.rest.call(null, s__12645)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__12647 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__12647.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__12659 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____12660 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____12660)) {
        var vec__12661__12662 = temp__3974__auto____12660;
        var e__12663 = cljs.core.nth.call(null, vec__12661__12662, 0, null);
        var s__12664 = vec__12661__12662;
        if(cljs.core.truth_(include__12659.call(null, e__12663))) {
          return s__12664
        }else {
          return cljs.core.next.call(null, s__12664)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__12659, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____12665 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____12665)) {
      var vec__12666__12667 = temp__3974__auto____12665;
      var e__12668 = cljs.core.nth.call(null, vec__12666__12667, 0, null);
      var s__12669 = vec__12666__12667;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__12668)) ? s__12669 : cljs.core.next.call(null, s__12669))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__12681 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____12682 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____12682)) {
        var vec__12683__12684 = temp__3974__auto____12682;
        var e__12685 = cljs.core.nth.call(null, vec__12683__12684, 0, null);
        var s__12686 = vec__12683__12684;
        if(cljs.core.truth_(include__12681.call(null, e__12685))) {
          return s__12686
        }else {
          return cljs.core.next.call(null, s__12686)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__12681, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____12687 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____12687)) {
      var vec__12688__12689 = temp__3974__auto____12687;
      var e__12690 = cljs.core.nth.call(null, vec__12688__12689, 0, null);
      var s__12691 = vec__12688__12689;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__12690)) ? s__12691 : cljs.core.next.call(null, s__12691))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__12692 = this;
  var h__2188__auto____12693 = this__12692.__hash;
  if(!(h__2188__auto____12693 == null)) {
    return h__2188__auto____12693
  }else {
    var h__2188__auto____12694 = cljs.core.hash_coll.call(null, rng);
    this__12692.__hash = h__2188__auto____12694;
    return h__2188__auto____12694
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__12695 = this;
  if(this__12695.step > 0) {
    if(this__12695.start + this__12695.step < this__12695.end) {
      return new cljs.core.Range(this__12695.meta, this__12695.start + this__12695.step, this__12695.end, this__12695.step, null)
    }else {
      return null
    }
  }else {
    if(this__12695.start + this__12695.step > this__12695.end) {
      return new cljs.core.Range(this__12695.meta, this__12695.start + this__12695.step, this__12695.end, this__12695.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__12696 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__12697 = this;
  var this__12698 = this;
  return cljs.core.pr_str.call(null, this__12698)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__12699 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__12700 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__12701 = this;
  if(this__12701.step > 0) {
    if(this__12701.start < this__12701.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__12701.start > this__12701.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__12702 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__12702.end - this__12702.start) / this__12702.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__12703 = this;
  return this__12703.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__12704 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__12704.meta, this__12704.start + this__12704.step, this__12704.end, this__12704.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__12705 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__12706 = this;
  return new cljs.core.Range(meta, this__12706.start, this__12706.end, this__12706.step, this__12706.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__12707 = this;
  return this__12707.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__12708 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__12708.start + n * this__12708.step
  }else {
    if(function() {
      var and__3822__auto____12709 = this__12708.start > this__12708.end;
      if(and__3822__auto____12709) {
        return this__12708.step === 0
      }else {
        return and__3822__auto____12709
      }
    }()) {
      return this__12708.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__12710 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__12710.start + n * this__12710.step
  }else {
    if(function() {
      var and__3822__auto____12711 = this__12710.start > this__12710.end;
      if(and__3822__auto____12711) {
        return this__12710.step === 0
      }else {
        return and__3822__auto____12711
      }
    }()) {
      return this__12710.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__12712 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__12712.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____12715 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____12715) {
      var s__12716 = temp__3974__auto____12715;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__12716), take_nth.call(null, n, cljs.core.drop.call(null, n, s__12716)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____12723 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____12723) {
      var s__12724 = temp__3974__auto____12723;
      var fst__12725 = cljs.core.first.call(null, s__12724);
      var fv__12726 = f.call(null, fst__12725);
      var run__12727 = cljs.core.cons.call(null, fst__12725, cljs.core.take_while.call(null, function(p1__12717_SHARP_) {
        return cljs.core._EQ_.call(null, fv__12726, f.call(null, p1__12717_SHARP_))
      }, cljs.core.next.call(null, s__12724)));
      return cljs.core.cons.call(null, run__12727, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__12727), s__12724))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____12742 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____12742) {
        var s__12743 = temp__3971__auto____12742;
        return reductions.call(null, f, cljs.core.first.call(null, s__12743), cljs.core.rest.call(null, s__12743))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____12744 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____12744) {
        var s__12745 = temp__3974__auto____12744;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__12745)), cljs.core.rest.call(null, s__12745))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__12748 = null;
      var G__12748__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__12748__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__12748__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__12748__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__12748__4 = function() {
        var G__12749__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__12749 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12749__delegate.call(this, x, y, z, args)
        };
        G__12749.cljs$lang$maxFixedArity = 3;
        G__12749.cljs$lang$applyTo = function(arglist__12750) {
          var x = cljs.core.first(arglist__12750);
          var y = cljs.core.first(cljs.core.next(arglist__12750));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12750)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12750)));
          return G__12749__delegate(x, y, z, args)
        };
        G__12749.cljs$lang$arity$variadic = G__12749__delegate;
        return G__12749
      }();
      G__12748 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12748__0.call(this);
          case 1:
            return G__12748__1.call(this, x);
          case 2:
            return G__12748__2.call(this, x, y);
          case 3:
            return G__12748__3.call(this, x, y, z);
          default:
            return G__12748__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__12748.cljs$lang$maxFixedArity = 3;
      G__12748.cljs$lang$applyTo = G__12748__4.cljs$lang$applyTo;
      return G__12748
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__12751 = null;
      var G__12751__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__12751__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__12751__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__12751__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__12751__4 = function() {
        var G__12752__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__12752 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12752__delegate.call(this, x, y, z, args)
        };
        G__12752.cljs$lang$maxFixedArity = 3;
        G__12752.cljs$lang$applyTo = function(arglist__12753) {
          var x = cljs.core.first(arglist__12753);
          var y = cljs.core.first(cljs.core.next(arglist__12753));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12753)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12753)));
          return G__12752__delegate(x, y, z, args)
        };
        G__12752.cljs$lang$arity$variadic = G__12752__delegate;
        return G__12752
      }();
      G__12751 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12751__0.call(this);
          case 1:
            return G__12751__1.call(this, x);
          case 2:
            return G__12751__2.call(this, x, y);
          case 3:
            return G__12751__3.call(this, x, y, z);
          default:
            return G__12751__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__12751.cljs$lang$maxFixedArity = 3;
      G__12751.cljs$lang$applyTo = G__12751__4.cljs$lang$applyTo;
      return G__12751
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__12754 = null;
      var G__12754__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__12754__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__12754__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__12754__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__12754__4 = function() {
        var G__12755__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__12755 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12755__delegate.call(this, x, y, z, args)
        };
        G__12755.cljs$lang$maxFixedArity = 3;
        G__12755.cljs$lang$applyTo = function(arglist__12756) {
          var x = cljs.core.first(arglist__12756);
          var y = cljs.core.first(cljs.core.next(arglist__12756));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12756)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12756)));
          return G__12755__delegate(x, y, z, args)
        };
        G__12755.cljs$lang$arity$variadic = G__12755__delegate;
        return G__12755
      }();
      G__12754 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12754__0.call(this);
          case 1:
            return G__12754__1.call(this, x);
          case 2:
            return G__12754__2.call(this, x, y);
          case 3:
            return G__12754__3.call(this, x, y, z);
          default:
            return G__12754__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__12754.cljs$lang$maxFixedArity = 3;
      G__12754.cljs$lang$applyTo = G__12754__4.cljs$lang$applyTo;
      return G__12754
    }()
  };
  var juxt__4 = function() {
    var G__12757__delegate = function(f, g, h, fs) {
      var fs__12747 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__12758 = null;
        var G__12758__0 = function() {
          return cljs.core.reduce.call(null, function(p1__12728_SHARP_, p2__12729_SHARP_) {
            return cljs.core.conj.call(null, p1__12728_SHARP_, p2__12729_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__12747)
        };
        var G__12758__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__12730_SHARP_, p2__12731_SHARP_) {
            return cljs.core.conj.call(null, p1__12730_SHARP_, p2__12731_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__12747)
        };
        var G__12758__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__12732_SHARP_, p2__12733_SHARP_) {
            return cljs.core.conj.call(null, p1__12732_SHARP_, p2__12733_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__12747)
        };
        var G__12758__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__12734_SHARP_, p2__12735_SHARP_) {
            return cljs.core.conj.call(null, p1__12734_SHARP_, p2__12735_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__12747)
        };
        var G__12758__4 = function() {
          var G__12759__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__12736_SHARP_, p2__12737_SHARP_) {
              return cljs.core.conj.call(null, p1__12736_SHARP_, cljs.core.apply.call(null, p2__12737_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__12747)
          };
          var G__12759 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__12759__delegate.call(this, x, y, z, args)
          };
          G__12759.cljs$lang$maxFixedArity = 3;
          G__12759.cljs$lang$applyTo = function(arglist__12760) {
            var x = cljs.core.first(arglist__12760);
            var y = cljs.core.first(cljs.core.next(arglist__12760));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12760)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12760)));
            return G__12759__delegate(x, y, z, args)
          };
          G__12759.cljs$lang$arity$variadic = G__12759__delegate;
          return G__12759
        }();
        G__12758 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__12758__0.call(this);
            case 1:
              return G__12758__1.call(this, x);
            case 2:
              return G__12758__2.call(this, x, y);
            case 3:
              return G__12758__3.call(this, x, y, z);
            default:
              return G__12758__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__12758.cljs$lang$maxFixedArity = 3;
        G__12758.cljs$lang$applyTo = G__12758__4.cljs$lang$applyTo;
        return G__12758
      }()
    };
    var G__12757 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12757__delegate.call(this, f, g, h, fs)
    };
    G__12757.cljs$lang$maxFixedArity = 3;
    G__12757.cljs$lang$applyTo = function(arglist__12761) {
      var f = cljs.core.first(arglist__12761);
      var g = cljs.core.first(cljs.core.next(arglist__12761));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12761)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12761)));
      return G__12757__delegate(f, g, h, fs)
    };
    G__12757.cljs$lang$arity$variadic = G__12757__delegate;
    return G__12757
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__12764 = cljs.core.next.call(null, coll);
        coll = G__12764;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____12763 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____12763) {
          return n > 0
        }else {
          return and__3822__auto____12763
        }
      }())) {
        var G__12765 = n - 1;
        var G__12766 = cljs.core.next.call(null, coll);
        n = G__12765;
        coll = G__12766;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__12768 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__12768), s)) {
    if(cljs.core.count.call(null, matches__12768) === 1) {
      return cljs.core.first.call(null, matches__12768)
    }else {
      return cljs.core.vec.call(null, matches__12768)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__12770 = re.exec(s);
  if(matches__12770 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__12770) === 1) {
      return cljs.core.first.call(null, matches__12770)
    }else {
      return cljs.core.vec.call(null, matches__12770)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__12775 = cljs.core.re_find.call(null, re, s);
  var match_idx__12776 = s.search(re);
  var match_str__12777 = cljs.core.coll_QMARK_.call(null, match_data__12775) ? cljs.core.first.call(null, match_data__12775) : match_data__12775;
  var post_match__12778 = cljs.core.subs.call(null, s, match_idx__12776 + cljs.core.count.call(null, match_str__12777));
  if(cljs.core.truth_(match_data__12775)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__12775, re_seq.call(null, re, post_match__12778))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__12785__12786 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___12787 = cljs.core.nth.call(null, vec__12785__12786, 0, null);
  var flags__12788 = cljs.core.nth.call(null, vec__12785__12786, 1, null);
  var pattern__12789 = cljs.core.nth.call(null, vec__12785__12786, 2, null);
  return new RegExp(pattern__12789, flags__12788)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__12779_SHARP_) {
    return print_one.call(null, p1__12779_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____12799 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____12799)) {
            var and__3822__auto____12803 = function() {
              var G__12800__12801 = obj;
              if(G__12800__12801) {
                if(function() {
                  var or__3824__auto____12802 = G__12800__12801.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____12802) {
                    return or__3824__auto____12802
                  }else {
                    return G__12800__12801.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__12800__12801.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__12800__12801)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__12800__12801)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____12803)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____12803
            }
          }else {
            return and__3822__auto____12799
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____12804 = !(obj == null);
          if(and__3822__auto____12804) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____12804
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__12805__12806 = obj;
          if(G__12805__12806) {
            if(function() {
              var or__3824__auto____12807 = G__12805__12806.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____12807) {
                return or__3824__auto____12807
              }else {
                return G__12805__12806.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__12805__12806.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__12805__12806)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__12805__12806)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__12827 = new goog.string.StringBuffer;
  var G__12828__12829 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__12828__12829) {
    var string__12830 = cljs.core.first.call(null, G__12828__12829);
    var G__12828__12831 = G__12828__12829;
    while(true) {
      sb__12827.append(string__12830);
      var temp__3974__auto____12832 = cljs.core.next.call(null, G__12828__12831);
      if(temp__3974__auto____12832) {
        var G__12828__12833 = temp__3974__auto____12832;
        var G__12846 = cljs.core.first.call(null, G__12828__12833);
        var G__12847 = G__12828__12833;
        string__12830 = G__12846;
        G__12828__12831 = G__12847;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__12834__12835 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__12834__12835) {
    var obj__12836 = cljs.core.first.call(null, G__12834__12835);
    var G__12834__12837 = G__12834__12835;
    while(true) {
      sb__12827.append(" ");
      var G__12838__12839 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__12836, opts));
      if(G__12838__12839) {
        var string__12840 = cljs.core.first.call(null, G__12838__12839);
        var G__12838__12841 = G__12838__12839;
        while(true) {
          sb__12827.append(string__12840);
          var temp__3974__auto____12842 = cljs.core.next.call(null, G__12838__12841);
          if(temp__3974__auto____12842) {
            var G__12838__12843 = temp__3974__auto____12842;
            var G__12848 = cljs.core.first.call(null, G__12838__12843);
            var G__12849 = G__12838__12843;
            string__12840 = G__12848;
            G__12838__12841 = G__12849;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____12844 = cljs.core.next.call(null, G__12834__12837);
      if(temp__3974__auto____12844) {
        var G__12834__12845 = temp__3974__auto____12844;
        var G__12850 = cljs.core.first.call(null, G__12834__12845);
        var G__12851 = G__12834__12845;
        obj__12836 = G__12850;
        G__12834__12837 = G__12851;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__12827
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__12853 = cljs.core.pr_sb.call(null, objs, opts);
  sb__12853.append("\n");
  return[cljs.core.str(sb__12853)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__12872__12873 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__12872__12873) {
    var string__12874 = cljs.core.first.call(null, G__12872__12873);
    var G__12872__12875 = G__12872__12873;
    while(true) {
      cljs.core.string_print.call(null, string__12874);
      var temp__3974__auto____12876 = cljs.core.next.call(null, G__12872__12875);
      if(temp__3974__auto____12876) {
        var G__12872__12877 = temp__3974__auto____12876;
        var G__12890 = cljs.core.first.call(null, G__12872__12877);
        var G__12891 = G__12872__12877;
        string__12874 = G__12890;
        G__12872__12875 = G__12891;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__12878__12879 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__12878__12879) {
    var obj__12880 = cljs.core.first.call(null, G__12878__12879);
    var G__12878__12881 = G__12878__12879;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__12882__12883 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__12880, opts));
      if(G__12882__12883) {
        var string__12884 = cljs.core.first.call(null, G__12882__12883);
        var G__12882__12885 = G__12882__12883;
        while(true) {
          cljs.core.string_print.call(null, string__12884);
          var temp__3974__auto____12886 = cljs.core.next.call(null, G__12882__12885);
          if(temp__3974__auto____12886) {
            var G__12882__12887 = temp__3974__auto____12886;
            var G__12892 = cljs.core.first.call(null, G__12882__12887);
            var G__12893 = G__12882__12887;
            string__12884 = G__12892;
            G__12882__12885 = G__12893;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____12888 = cljs.core.next.call(null, G__12878__12881);
      if(temp__3974__auto____12888) {
        var G__12878__12889 = temp__3974__auto____12888;
        var G__12894 = cljs.core.first.call(null, G__12878__12889);
        var G__12895 = G__12878__12889;
        obj__12880 = G__12894;
        G__12878__12881 = G__12895;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__12896) {
    var objs = cljs.core.seq(arglist__12896);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__12897) {
    var objs = cljs.core.seq(arglist__12897);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__12898) {
    var objs = cljs.core.seq(arglist__12898);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__12899) {
    var objs = cljs.core.seq(arglist__12899);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__12900) {
    var objs = cljs.core.seq(arglist__12900);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__12901) {
    var objs = cljs.core.seq(arglist__12901);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__12902) {
    var objs = cljs.core.seq(arglist__12902);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__12903) {
    var objs = cljs.core.seq(arglist__12903);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__12904) {
    var fmt = cljs.core.first(arglist__12904);
    var args = cljs.core.rest(arglist__12904);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__12905 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__12905, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__12906 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__12906, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__12907 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__12907, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____12908 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____12908)) {
        var nspc__12909 = temp__3974__auto____12908;
        return[cljs.core.str(nspc__12909), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____12910 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____12910)) {
          var nspc__12911 = temp__3974__auto____12910;
          return[cljs.core.str(nspc__12911), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__12912 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__12912, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__12914 = function(n, len) {
    var ns__12913 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__12913) < len) {
        var G__12916 = [cljs.core.str("0"), cljs.core.str(ns__12913)].join("");
        ns__12913 = G__12916;
        continue
      }else {
        return ns__12913
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__12914.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__12914.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__12914.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__12914.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__12914.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__12914.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__12915 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__12915, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__12917 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__12918 = this;
  var G__12919__12920 = cljs.core.seq.call(null, this__12918.watches);
  if(G__12919__12920) {
    var G__12922__12924 = cljs.core.first.call(null, G__12919__12920);
    var vec__12923__12925 = G__12922__12924;
    var key__12926 = cljs.core.nth.call(null, vec__12923__12925, 0, null);
    var f__12927 = cljs.core.nth.call(null, vec__12923__12925, 1, null);
    var G__12919__12928 = G__12919__12920;
    var G__12922__12929 = G__12922__12924;
    var G__12919__12930 = G__12919__12928;
    while(true) {
      var vec__12931__12932 = G__12922__12929;
      var key__12933 = cljs.core.nth.call(null, vec__12931__12932, 0, null);
      var f__12934 = cljs.core.nth.call(null, vec__12931__12932, 1, null);
      var G__12919__12935 = G__12919__12930;
      f__12934.call(null, key__12933, this$, oldval, newval);
      var temp__3974__auto____12936 = cljs.core.next.call(null, G__12919__12935);
      if(temp__3974__auto____12936) {
        var G__12919__12937 = temp__3974__auto____12936;
        var G__12944 = cljs.core.first.call(null, G__12919__12937);
        var G__12945 = G__12919__12937;
        G__12922__12929 = G__12944;
        G__12919__12930 = G__12945;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__12938 = this;
  return this$.watches = cljs.core.assoc.call(null, this__12938.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__12939 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__12939.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__12940 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__12940.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__12941 = this;
  return this__12941.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__12942 = this;
  return this__12942.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__12943 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__12957__delegate = function(x, p__12946) {
      var map__12952__12953 = p__12946;
      var map__12952__12954 = cljs.core.seq_QMARK_.call(null, map__12952__12953) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12952__12953) : map__12952__12953;
      var validator__12955 = cljs.core._lookup.call(null, map__12952__12954, "\ufdd0'validator", null);
      var meta__12956 = cljs.core._lookup.call(null, map__12952__12954, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__12956, validator__12955, null)
    };
    var G__12957 = function(x, var_args) {
      var p__12946 = null;
      if(goog.isDef(var_args)) {
        p__12946 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__12957__delegate.call(this, x, p__12946)
    };
    G__12957.cljs$lang$maxFixedArity = 1;
    G__12957.cljs$lang$applyTo = function(arglist__12958) {
      var x = cljs.core.first(arglist__12958);
      var p__12946 = cljs.core.rest(arglist__12958);
      return G__12957__delegate(x, p__12946)
    };
    G__12957.cljs$lang$arity$variadic = G__12957__delegate;
    return G__12957
  }();
  atom = function(x, var_args) {
    var p__12946 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____12962 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____12962)) {
    var validate__12963 = temp__3974__auto____12962;
    if(cljs.core.truth_(validate__12963.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440))))].join(""));
    }
  }else {
  }
  var old_value__12964 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__12964, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__12965__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__12965 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__12965__delegate.call(this, a, f, x, y, z, more)
    };
    G__12965.cljs$lang$maxFixedArity = 5;
    G__12965.cljs$lang$applyTo = function(arglist__12966) {
      var a = cljs.core.first(arglist__12966);
      var f = cljs.core.first(cljs.core.next(arglist__12966));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12966)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12966))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12966)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12966)))));
      return G__12965__delegate(a, f, x, y, z, more)
    };
    G__12965.cljs$lang$arity$variadic = G__12965__delegate;
    return G__12965
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__12967) {
    var iref = cljs.core.first(arglist__12967);
    var f = cljs.core.first(cljs.core.next(arglist__12967));
    var args = cljs.core.rest(cljs.core.next(arglist__12967));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__12968 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__12968.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__12969 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__12969.state, function(p__12970) {
    var map__12971__12972 = p__12970;
    var map__12971__12973 = cljs.core.seq_QMARK_.call(null, map__12971__12972) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12971__12972) : map__12971__12972;
    var curr_state__12974 = map__12971__12973;
    var done__12975 = cljs.core._lookup.call(null, map__12971__12973, "\ufdd0'done", null);
    if(cljs.core.truth_(done__12975)) {
      return curr_state__12974
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__12969.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__12996__12997 = options;
    var map__12996__12998 = cljs.core.seq_QMARK_.call(null, map__12996__12997) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12996__12997) : map__12996__12997;
    var keywordize_keys__12999 = cljs.core._lookup.call(null, map__12996__12998, "\ufdd0'keywordize-keys", null);
    var keyfn__13000 = cljs.core.truth_(keywordize_keys__12999) ? cljs.core.keyword : cljs.core.str;
    var f__13015 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2458__auto____13014 = function iter__13008(s__13009) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__13009__13012 = s__13009;
                    while(true) {
                      if(cljs.core.seq.call(null, s__13009__13012)) {
                        var k__13013 = cljs.core.first.call(null, s__13009__13012);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__13000.call(null, k__13013), thisfn.call(null, x[k__13013])], true), iter__13008.call(null, cljs.core.rest.call(null, s__13009__13012)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2458__auto____13014.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__13015.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__13016) {
    var x = cljs.core.first(arglist__13016);
    var options = cljs.core.rest(arglist__13016);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__13021 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__13025__delegate = function(args) {
      var temp__3971__auto____13022 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__13021), args, null);
      if(cljs.core.truth_(temp__3971__auto____13022)) {
        var v__13023 = temp__3971__auto____13022;
        return v__13023
      }else {
        var ret__13024 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__13021, cljs.core.assoc, args, ret__13024);
        return ret__13024
      }
    };
    var G__13025 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__13025__delegate.call(this, args)
    };
    G__13025.cljs$lang$maxFixedArity = 0;
    G__13025.cljs$lang$applyTo = function(arglist__13026) {
      var args = cljs.core.seq(arglist__13026);
      return G__13025__delegate(args)
    };
    G__13025.cljs$lang$arity$variadic = G__13025__delegate;
    return G__13025
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__13028 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__13028)) {
        var G__13029 = ret__13028;
        f = G__13029;
        continue
      }else {
        return ret__13028
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__13030__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__13030 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__13030__delegate.call(this, f, args)
    };
    G__13030.cljs$lang$maxFixedArity = 1;
    G__13030.cljs$lang$applyTo = function(arglist__13031) {
      var f = cljs.core.first(arglist__13031);
      var args = cljs.core.rest(arglist__13031);
      return G__13030__delegate(f, args)
    };
    G__13030.cljs$lang$arity$variadic = G__13030__delegate;
    return G__13030
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__13033 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__13033, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__13033, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____13042 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____13042) {
      return or__3824__auto____13042
    }else {
      var or__3824__auto____13043 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____13043) {
        return or__3824__auto____13043
      }else {
        var and__3822__auto____13044 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____13044) {
          var and__3822__auto____13045 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____13045) {
            var and__3822__auto____13046 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____13046) {
              var ret__13047 = true;
              var i__13048 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____13049 = cljs.core.not.call(null, ret__13047);
                  if(or__3824__auto____13049) {
                    return or__3824__auto____13049
                  }else {
                    return i__13048 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__13047
                }else {
                  var G__13050 = isa_QMARK_.call(null, h, child.call(null, i__13048), parent.call(null, i__13048));
                  var G__13051 = i__13048 + 1;
                  ret__13047 = G__13050;
                  i__13048 = G__13051;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____13046
            }
          }else {
            return and__3822__auto____13045
          }
        }else {
          return and__3822__auto____13044
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728))))].join(""));
    }
    var tp__13060 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__13061 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__13062 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__13063 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____13064 = cljs.core.contains_QMARK_.call(null, tp__13060.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__13062.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__13062.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__13060, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__13063.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__13061, parent, ta__13062), "\ufdd0'descendants":tf__13063.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__13062, tag, td__13061)})
    }();
    if(cljs.core.truth_(or__3824__auto____13064)) {
      return or__3824__auto____13064
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__13069 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__13070 = cljs.core.truth_(parentMap__13069.call(null, tag)) ? cljs.core.disj.call(null, parentMap__13069.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__13071 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__13070)) ? cljs.core.assoc.call(null, parentMap__13069, tag, childsParents__13070) : cljs.core.dissoc.call(null, parentMap__13069, tag);
    var deriv_seq__13072 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__13052_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__13052_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__13052_SHARP_), cljs.core.second.call(null, p1__13052_SHARP_)))
    }, cljs.core.seq.call(null, newParents__13071)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__13069.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__13053_SHARP_, p2__13054_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__13053_SHARP_, p2__13054_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__13072))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__13080 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____13082 = cljs.core.truth_(function() {
    var and__3822__auto____13081 = xprefs__13080;
    if(cljs.core.truth_(and__3822__auto____13081)) {
      return xprefs__13080.call(null, y)
    }else {
      return and__3822__auto____13081
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____13082)) {
    return or__3824__auto____13082
  }else {
    var or__3824__auto____13084 = function() {
      var ps__13083 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__13083) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__13083), prefer_table))) {
          }else {
          }
          var G__13087 = cljs.core.rest.call(null, ps__13083);
          ps__13083 = G__13087;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____13084)) {
      return or__3824__auto____13084
    }else {
      var or__3824__auto____13086 = function() {
        var ps__13085 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__13085) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__13085), y, prefer_table))) {
            }else {
            }
            var G__13088 = cljs.core.rest.call(null, ps__13085);
            ps__13085 = G__13088;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____13086)) {
        return or__3824__auto____13086
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____13090 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____13090)) {
    return or__3824__auto____13090
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__13108 = cljs.core.reduce.call(null, function(be, p__13100) {
    var vec__13101__13102 = p__13100;
    var k__13103 = cljs.core.nth.call(null, vec__13101__13102, 0, null);
    var ___13104 = cljs.core.nth.call(null, vec__13101__13102, 1, null);
    var e__13105 = vec__13101__13102;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__13103)) {
      var be2__13107 = cljs.core.truth_(function() {
        var or__3824__auto____13106 = be == null;
        if(or__3824__auto____13106) {
          return or__3824__auto____13106
        }else {
          return cljs.core.dominates.call(null, k__13103, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__13105 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__13107), k__13103, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__13103), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__13107)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__13107
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__13108)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__13108));
      return cljs.core.second.call(null, best_entry__13108)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____13113 = mf;
    if(and__3822__auto____13113) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____13113
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2359__auto____13114 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____13115 = cljs.core._reset[goog.typeOf(x__2359__auto____13114)];
      if(or__3824__auto____13115) {
        return or__3824__auto____13115
      }else {
        var or__3824__auto____13116 = cljs.core._reset["_"];
        if(or__3824__auto____13116) {
          return or__3824__auto____13116
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____13121 = mf;
    if(and__3822__auto____13121) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____13121
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2359__auto____13122 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____13123 = cljs.core._add_method[goog.typeOf(x__2359__auto____13122)];
      if(or__3824__auto____13123) {
        return or__3824__auto____13123
      }else {
        var or__3824__auto____13124 = cljs.core._add_method["_"];
        if(or__3824__auto____13124) {
          return or__3824__auto____13124
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____13129 = mf;
    if(and__3822__auto____13129) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____13129
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2359__auto____13130 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____13131 = cljs.core._remove_method[goog.typeOf(x__2359__auto____13130)];
      if(or__3824__auto____13131) {
        return or__3824__auto____13131
      }else {
        var or__3824__auto____13132 = cljs.core._remove_method["_"];
        if(or__3824__auto____13132) {
          return or__3824__auto____13132
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____13137 = mf;
    if(and__3822__auto____13137) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____13137
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2359__auto____13138 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____13139 = cljs.core._prefer_method[goog.typeOf(x__2359__auto____13138)];
      if(or__3824__auto____13139) {
        return or__3824__auto____13139
      }else {
        var or__3824__auto____13140 = cljs.core._prefer_method["_"];
        if(or__3824__auto____13140) {
          return or__3824__auto____13140
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____13145 = mf;
    if(and__3822__auto____13145) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____13145
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2359__auto____13146 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____13147 = cljs.core._get_method[goog.typeOf(x__2359__auto____13146)];
      if(or__3824__auto____13147) {
        return or__3824__auto____13147
      }else {
        var or__3824__auto____13148 = cljs.core._get_method["_"];
        if(or__3824__auto____13148) {
          return or__3824__auto____13148
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____13153 = mf;
    if(and__3822__auto____13153) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____13153
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2359__auto____13154 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____13155 = cljs.core._methods[goog.typeOf(x__2359__auto____13154)];
      if(or__3824__auto____13155) {
        return or__3824__auto____13155
      }else {
        var or__3824__auto____13156 = cljs.core._methods["_"];
        if(or__3824__auto____13156) {
          return or__3824__auto____13156
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____13161 = mf;
    if(and__3822__auto____13161) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____13161
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2359__auto____13162 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____13163 = cljs.core._prefers[goog.typeOf(x__2359__auto____13162)];
      if(or__3824__auto____13163) {
        return or__3824__auto____13163
      }else {
        var or__3824__auto____13164 = cljs.core._prefers["_"];
        if(or__3824__auto____13164) {
          return or__3824__auto____13164
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____13169 = mf;
    if(and__3822__auto____13169) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____13169
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2359__auto____13170 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____13171 = cljs.core._dispatch[goog.typeOf(x__2359__auto____13170)];
      if(or__3824__auto____13171) {
        return or__3824__auto____13171
      }else {
        var or__3824__auto____13172 = cljs.core._dispatch["_"];
        if(or__3824__auto____13172) {
          return or__3824__auto____13172
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__13175 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__13176 = cljs.core._get_method.call(null, mf, dispatch_val__13175);
  if(cljs.core.truth_(target_fn__13176)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__13175)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__13176, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__13177 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__13178 = this;
  cljs.core.swap_BANG_.call(null, this__13178.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__13178.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__13178.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__13178.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__13179 = this;
  cljs.core.swap_BANG_.call(null, this__13179.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__13179.method_cache, this__13179.method_table, this__13179.cached_hierarchy, this__13179.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__13180 = this;
  cljs.core.swap_BANG_.call(null, this__13180.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__13180.method_cache, this__13180.method_table, this__13180.cached_hierarchy, this__13180.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__13181 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__13181.cached_hierarchy), cljs.core.deref.call(null, this__13181.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__13181.method_cache, this__13181.method_table, this__13181.cached_hierarchy, this__13181.hierarchy)
  }
  var temp__3971__auto____13182 = cljs.core.deref.call(null, this__13181.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____13182)) {
    var target_fn__13183 = temp__3971__auto____13182;
    return target_fn__13183
  }else {
    var temp__3971__auto____13184 = cljs.core.find_and_cache_best_method.call(null, this__13181.name, dispatch_val, this__13181.hierarchy, this__13181.method_table, this__13181.prefer_table, this__13181.method_cache, this__13181.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____13184)) {
      var target_fn__13185 = temp__3971__auto____13184;
      return target_fn__13185
    }else {
      return cljs.core.deref.call(null, this__13181.method_table).call(null, this__13181.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__13186 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__13186.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__13186.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__13186.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__13186.method_cache, this__13186.method_table, this__13186.cached_hierarchy, this__13186.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__13187 = this;
  return cljs.core.deref.call(null, this__13187.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__13188 = this;
  return cljs.core.deref.call(null, this__13188.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__13189 = this;
  return cljs.core.do_dispatch.call(null, mf, this__13189.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__13191__delegate = function(_, args) {
    var self__13190 = this;
    return cljs.core._dispatch.call(null, self__13190, args)
  };
  var G__13191 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__13191__delegate.call(this, _, args)
  };
  G__13191.cljs$lang$maxFixedArity = 1;
  G__13191.cljs$lang$applyTo = function(arglist__13192) {
    var _ = cljs.core.first(arglist__13192);
    var args = cljs.core.rest(arglist__13192);
    return G__13191__delegate(_, args)
  };
  G__13191.cljs$lang$arity$variadic = G__13191__delegate;
  return G__13191
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__13193 = this;
  return cljs.core._dispatch.call(null, self__13193, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__13194 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_13196, _) {
  var this__13195 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__13195.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__13197 = this;
  var and__3822__auto____13198 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____13198) {
    return this__13197.uuid === other.uuid
  }else {
    return and__3822__auto____13198
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__13199 = this;
  var this__13200 = this;
  return cljs.core.pr_str.call(null, this__13200)
};
cljs.core.UUID;
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3822__auto____13559 = reader;
    if(and__3822__auto____13559) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3822__auto____13559
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__2359__auto____13560 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____13561 = cljs.reader.read_char[goog.typeOf(x__2359__auto____13560)];
      if(or__3824__auto____13561) {
        return or__3824__auto____13561
      }else {
        var or__3824__auto____13562 = cljs.reader.read_char["_"];
        if(or__3824__auto____13562) {
          return or__3824__auto____13562
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3822__auto____13567 = reader;
    if(and__3822__auto____13567) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3822__auto____13567
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__2359__auto____13568 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____13569 = cljs.reader.unread[goog.typeOf(x__2359__auto____13568)];
      if(or__3824__auto____13569) {
        return or__3824__auto____13569
      }else {
        var or__3824__auto____13570 = cljs.reader.unread["_"];
        if(or__3824__auto____13570) {
          return or__3824__auto____13570
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
cljs.reader.StringPushbackReader = function(s, index_atom, buffer_atom) {
  this.s = s;
  this.index_atom = index_atom;
  this.buffer_atom = buffer_atom
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorPrSeq = function(this__2305__auto__) {
  return cljs.core.list.call(null, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var this__13571 = this;
  if(cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, this__13571.buffer_atom))) {
    var idx__13572 = cljs.core.deref.call(null, this__13571.index_atom);
    cljs.core.swap_BANG_.call(null, this__13571.index_atom, cljs.core.inc);
    return this__13571.s[idx__13572]
  }else {
    var buf__13573 = cljs.core.deref.call(null, this__13571.buffer_atom);
    cljs.core.swap_BANG_.call(null, this__13571.buffer_atom, cljs.core.rest);
    return cljs.core.first.call(null, buf__13573)
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var this__13574 = this;
  return cljs.core.swap_BANG_.call(null, this__13574.buffer_atom, function(p1__13554_SHARP_) {
    return cljs.core.cons.call(null, ch, p1__13554_SHARP_)
  })
};
cljs.reader.StringPushbackReader;
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3824__auto____13576 = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3824__auto____13576)) {
    return or__3824__auto____13576
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3824__auto____13581 = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3824__auto____13581) {
    return or__3824__auto____13581
  }else {
    var and__3822__auto____13583 = function() {
      var or__3824__auto____13582 = "+" === initch;
      if(or__3824__auto____13582) {
        return or__3824__auto____13582
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3822__auto____13583)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch__13584 = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch__13584);
        return next_ch__13584
      }())
    }else {
      return and__3822__auto____13583
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(goog.isDef(var_args)) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__13585) {
    var rdr = cljs.core.first(arglist__13585);
    var msg = cljs.core.rest(arglist__13585);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$lang$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3822__auto____13589 = !(ch === "#");
  if(and__3822__auto____13589) {
    var and__3822__auto____13590 = !(ch === "'");
    if(and__3822__auto____13590) {
      var and__3822__auto____13591 = !(ch === ":");
      if(and__3822__auto____13591) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3822__auto____13591
      }
    }else {
      return and__3822__auto____13590
    }
  }else {
    return and__3822__auto____13589
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb__13596 = new goog.string.StringBuffer(initch);
  var ch__13597 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3824__auto____13598 = ch__13597 == null;
      if(or__3824__auto____13598) {
        return or__3824__auto____13598
      }else {
        var or__3824__auto____13599 = cljs.reader.whitespace_QMARK_.call(null, ch__13597);
        if(or__3824__auto____13599) {
          return or__3824__auto____13599
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch__13597)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch__13597);
      return sb__13596.toString()
    }else {
      var G__13600 = function() {
        sb__13596.append(ch__13597);
        return sb__13596
      }();
      var G__13601 = cljs.reader.read_char.call(null, rdr);
      sb__13596 = G__13600;
      ch__13597 = G__13601;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch__13605 = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3824__auto____13606 = ch__13605 === "n";
      if(or__3824__auto____13606) {
        return or__3824__auto____13606
      }else {
        var or__3824__auto____13607 = ch__13605 === "r";
        if(or__3824__auto____13607) {
          return or__3824__auto____13607
        }else {
          return ch__13605 == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches__13609 = re.exec(s);
  if(matches__13609 == null) {
    return null
  }else {
    if(matches__13609.length === 1) {
      return matches__13609[0]
    }else {
      return matches__13609
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups__13617 = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3__13618 = groups__13617[2];
  if(!function() {
    var or__3824__auto____13619 = group3__13618 == null;
    if(or__3824__auto____13619) {
      return or__3824__auto____13619
    }else {
      return group3__13618.length < 1
    }
  }()) {
    return 0
  }else {
    var negate__13620 = "-" === groups__13617[1] ? -1 : 1;
    var a__13621 = cljs.core.truth_(groups__13617[3]) ? [groups__13617[3], 10] : cljs.core.truth_(groups__13617[4]) ? [groups__13617[4], 16] : cljs.core.truth_(groups__13617[5]) ? [groups__13617[5], 8] : cljs.core.truth_(groups__13617[7]) ? [groups__13617[7], parseInt(groups__13617[7])] : "\ufdd0'default" ? [null, null] : null;
    var n__13622 = a__13621[0];
    var radix__13623 = a__13621[1];
    if(n__13622 == null) {
      return null
    }else {
      return negate__13620 * parseInt(n__13622, radix__13623)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups__13627 = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator__13628 = groups__13627[1];
  var denominator__13629 = groups__13627[2];
  return parseInt(numinator__13628) / parseInt(denominator__13629)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches__13632 = re.exec(s);
  if(function() {
    var and__3822__auto____13633 = !(matches__13632 == null);
    if(and__3822__auto____13633) {
      return matches__13632[0] === s
    }else {
      return and__3822__auto____13633
    }
  }()) {
    if(matches__13632.length === 1) {
      return matches__13632[0]
    }else {
      return matches__13632
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\u0008"
            }else {
              if(c === "f") {
                return"\u000c"
              }else {
                if("\ufdd0'else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code__13635 = parseInt(code_str, 16);
  return String.fromCharCode(code__13635)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch__13638 = cljs.reader.read_char.call(null, reader);
  var mapresult__13639 = cljs.reader.escape_char_map.call(null, ch__13638);
  if(cljs.core.truth_(mapresult__13639)) {
    return mapresult__13639
  }else {
    if(ch__13638 === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch__13638, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch__13638 === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch__13638, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch__13638)) {
          return String.fromCharCode(ch__13638)
        }else {
          if("\ufdd0'else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch__13638)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch__13641 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch__13641))) {
      var G__13642 = cljs.reader.read_char.call(null, rdr);
      ch__13641 = G__13642;
      continue
    }else {
      return ch__13641
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a__13649 = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch__13650 = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch__13650)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF")
    }
    if(delim === ch__13650) {
      return cljs.core.persistent_BANG_.call(null, a__13649)
    }else {
      var temp__3971__auto____13651 = cljs.reader.macros.call(null, ch__13650);
      if(cljs.core.truth_(temp__3971__auto____13651)) {
        var macrofn__13652 = temp__3971__auto____13651;
        var mret__13653 = macrofn__13652.call(null, rdr, ch__13650);
        var G__13655 = mret__13653 === rdr ? a__13649 : cljs.core.conj_BANG_.call(null, a__13649, mret__13653);
        a__13649 = G__13655;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch__13650);
        var o__13654 = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__13656 = o__13654 === rdr ? a__13649 : cljs.core.conj_BANG_.call(null, a__13649, o__13654);
        a__13649 = G__13656;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch__13661 = cljs.reader.read_char.call(null, rdr);
  var dm__13662 = cljs.reader.dispatch_macros.call(null, ch__13661);
  if(cljs.core.truth_(dm__13662)) {
    return dm__13662.call(null, rdr, _)
  }else {
    var temp__3971__auto____13663 = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch__13661);
    if(cljs.core.truth_(temp__3971__auto____13663)) {
      var obj__13664 = temp__3971__auto____13663;
      return obj__13664
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch__13661)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l__13666 = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l__13666))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l__13666)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer__13673 = new goog.string.StringBuffer(initch);
  var ch__13674 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____13675 = ch__13674 == null;
      if(or__3824__auto____13675) {
        return or__3824__auto____13675
      }else {
        var or__3824__auto____13676 = cljs.reader.whitespace_QMARK_.call(null, ch__13674);
        if(or__3824__auto____13676) {
          return or__3824__auto____13676
        }else {
          return cljs.reader.macros.call(null, ch__13674)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch__13674);
      var s__13677 = buffer__13673.toString();
      var or__3824__auto____13678 = cljs.reader.match_number.call(null, s__13677);
      if(cljs.core.truth_(or__3824__auto____13678)) {
        return or__3824__auto____13678
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s__13677, "]")
      }
    }else {
      var G__13679 = function() {
        buffer__13673.append(ch__13674);
        return buffer__13673
      }();
      var G__13680 = cljs.reader.read_char.call(null, reader);
      buffer__13673 = G__13679;
      ch__13674 = G__13680;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer__13683 = new goog.string.StringBuffer;
  var ch__13684 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch__13684 == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading string")
    }else {
      if("\\" === ch__13684) {
        var G__13685 = function() {
          buffer__13683.append(cljs.reader.escape_char.call(null, buffer__13683, reader));
          return buffer__13683
        }();
        var G__13686 = cljs.reader.read_char.call(null, reader);
        buffer__13683 = G__13685;
        ch__13684 = G__13686;
        continue
      }else {
        if('"' === ch__13684) {
          return buffer__13683.toString()
        }else {
          if("\ufdd0'default") {
            var G__13687 = function() {
              buffer__13683.append(ch__13684);
              return buffer__13683
            }();
            var G__13688 = cljs.reader.read_char.call(null, reader);
            buffer__13683 = G__13687;
            ch__13684 = G__13688;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token__13690 = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token__13690, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token__13690, 0, token__13690.indexOf("/")), cljs.core.subs.call(null, token__13690, token__13690.indexOf("/") + 1, token__13690.length))
  }else {
    return cljs.reader.special_symbols.call(null, token__13690, cljs.core.symbol.call(null, token__13690))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token__13700 = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a__13701 = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token__13700);
  var token__13702 = a__13701[0];
  var ns__13703 = a__13701[1];
  var name__13704 = a__13701[2];
  if(cljs.core.truth_(function() {
    var or__3824__auto____13706 = function() {
      var and__3822__auto____13705 = !(void 0 === ns__13703);
      if(and__3822__auto____13705) {
        return ns__13703.substring(ns__13703.length - 2, ns__13703.length) === ":/"
      }else {
        return and__3822__auto____13705
      }
    }();
    if(cljs.core.truth_(or__3824__auto____13706)) {
      return or__3824__auto____13706
    }else {
      var or__3824__auto____13707 = name__13704[name__13704.length - 1] === ":";
      if(or__3824__auto____13707) {
        return or__3824__auto____13707
      }else {
        return!(token__13702.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__13702)
  }else {
    if(function() {
      var and__3822__auto____13708 = !(ns__13703 == null);
      if(and__3822__auto____13708) {
        return ns__13703.length > 0
      }else {
        return and__3822__auto____13708
      }
    }()) {
      return cljs.core.keyword.call(null, ns__13703.substring(0, ns__13703.indexOf("/")), name__13704)
    }else {
      return cljs.core.keyword.call(null, token__13702)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(cljs.core.symbol_QMARK_.call(null, f)) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArrays([f], [true])
      }else {
        if("\ufdd0'else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m__13714 = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m__13714)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o__13715 = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__13716__13717 = o__13715;
    if(G__13716__13717) {
      if(function() {
        var or__3824__auto____13718 = G__13716__13717.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3824__auto____13718) {
          return or__3824__auto____13718
        }else {
          return G__13716__13717.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__13716__13717.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__13716__13717)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__13716__13717)
    }
  }()) {
    return cljs.core.with_meta.call(null, o__13715, cljs.core.merge.call(null, cljs.core.meta.call(null, o__13715), m__13714))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, "\ufdd1'quote")
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, "\ufdd1'deref")
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0'else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "<") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0'else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch__13722 = cljs.reader.read_char.call(null, reader);
    if(ch__13722 == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch__13722)) {
        var G__13725 = reader;
        var G__13726 = eof_is_error;
        var G__13727 = sentinel;
        var G__13728 = is_recursive;
        reader = G__13725;
        eof_is_error = G__13726;
        sentinel = G__13727;
        is_recursive = G__13728;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch__13722)) {
          var G__13729 = cljs.reader.read_comment.call(null, reader, ch__13722);
          var G__13730 = eof_is_error;
          var G__13731 = sentinel;
          var G__13732 = is_recursive;
          reader = G__13729;
          eof_is_error = G__13730;
          sentinel = G__13731;
          is_recursive = G__13732;
          continue
        }else {
          if("\ufdd0'else") {
            var f__13723 = cljs.reader.macros.call(null, ch__13722);
            var res__13724 = cljs.core.truth_(f__13723) ? f__13723.call(null, reader, ch__13722) : cljs.reader.number_literal_QMARK_.call(null, reader, ch__13722) ? cljs.reader.read_number.call(null, reader, ch__13722) : "\ufdd0'else" ? cljs.reader.read_symbol.call(null, reader, ch__13722) : null;
            if(res__13724 === reader) {
              var G__13733 = reader;
              var G__13734 = eof_is_error;
              var G__13735 = sentinel;
              var G__13736 = is_recursive;
              reader = G__13733;
              eof_is_error = G__13734;
              sentinel = G__13735;
              is_recursive = G__13736;
              continue
            }else {
              return res__13724
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r__13738 = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r__13738, true, null, false)
};
cljs.reader.zero_fill_right = function zero_fill_right(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return s.substring(0, width)
    }else {
      if("\ufdd0'else") {
        var b__13740 = new goog.string.StringBuffer(s);
        while(true) {
          if(b__13740.getLength() < width) {
            var G__13741 = b__13740.append("0");
            b__13740 = G__13741;
            continue
          }else {
            return b__13740.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return num % div === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3822__auto____13744 = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3822__auto____13744)) {
    var or__3824__auto____13745 = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3824__auto____13745)) {
      return or__3824__auto____13745
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3822__auto____13744
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm__13750 = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap__13751 = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core._lookup.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap__13751 : dim_norm__13750, month, null)
  }
}();
cljs.reader.parse_and_validate_timestamp = function() {
  var timestamp__13752 = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
  var check__13754 = function(low, n, high, msg) {
    if(function() {
      var and__3822__auto____13753 = low <= n;
      if(and__3822__auto____13753) {
        return n <= high
      }else {
        return and__3822__auto____13753
      }
    }()) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'<=", "\ufdd1'low", "\ufdd1'n", "\ufdd1'high"), cljs.core.hash_map("\ufdd0'line", 474))))].join(""));
    }
    return n
  };
  return function(ts) {
    var temp__3974__auto____13755 = cljs.core.map.call(null, cljs.core.vec, cljs.core.split_at.call(null, 8, cljs.core.re_matches.call(null, timestamp__13752, ts)));
    if(cljs.core.truth_(temp__3974__auto____13755)) {
      var vec__13756__13759 = temp__3974__auto____13755;
      var vec__13757__13760 = cljs.core.nth.call(null, vec__13756__13759, 0, null);
      var ___13761 = cljs.core.nth.call(null, vec__13757__13760, 0, null);
      var years__13762 = cljs.core.nth.call(null, vec__13757__13760, 1, null);
      var months__13763 = cljs.core.nth.call(null, vec__13757__13760, 2, null);
      var days__13764 = cljs.core.nth.call(null, vec__13757__13760, 3, null);
      var hours__13765 = cljs.core.nth.call(null, vec__13757__13760, 4, null);
      var minutes__13766 = cljs.core.nth.call(null, vec__13757__13760, 5, null);
      var seconds__13767 = cljs.core.nth.call(null, vec__13757__13760, 6, null);
      var milliseconds__13768 = cljs.core.nth.call(null, vec__13757__13760, 7, null);
      var vec__13758__13769 = cljs.core.nth.call(null, vec__13756__13759, 1, null);
      var ___13770 = cljs.core.nth.call(null, vec__13758__13769, 0, null);
      var ___13771 = cljs.core.nth.call(null, vec__13758__13769, 1, null);
      var ___13772 = cljs.core.nth.call(null, vec__13758__13769, 2, null);
      var V__13773 = vec__13756__13759;
      var vec__13774__13777 = cljs.core.map.call(null, function(v) {
        return cljs.core.map.call(null, function(p1__13749_SHARP_) {
          return parseInt(p1__13749_SHARP_)
        }, v)
      }, cljs.core.map.call(null, function(p1__13747_SHARP_, p2__13746_SHARP_) {
        return cljs.core.update_in.call(null, p2__13746_SHARP_, cljs.core.PersistentVector.fromArray([0], true), p1__13747_SHARP_)
      }, cljs.core.PersistentVector.fromArray([cljs.core.constantly.call(null, null), function(p1__13748_SHARP_) {
        if(cljs.core._EQ_.call(null, p1__13748_SHARP_, "-")) {
          return"-1"
        }else {
          return"1"
        }
      }], true), V__13773));
      var vec__13775__13778 = cljs.core.nth.call(null, vec__13774__13777, 0, null);
      var ___13779 = cljs.core.nth.call(null, vec__13775__13778, 0, null);
      var y__13780 = cljs.core.nth.call(null, vec__13775__13778, 1, null);
      var mo__13781 = cljs.core.nth.call(null, vec__13775__13778, 2, null);
      var d__13782 = cljs.core.nth.call(null, vec__13775__13778, 3, null);
      var h__13783 = cljs.core.nth.call(null, vec__13775__13778, 4, null);
      var m__13784 = cljs.core.nth.call(null, vec__13775__13778, 5, null);
      var s__13785 = cljs.core.nth.call(null, vec__13775__13778, 6, null);
      var ms__13786 = cljs.core.nth.call(null, vec__13775__13778, 7, null);
      var vec__13776__13787 = cljs.core.nth.call(null, vec__13774__13777, 1, null);
      var offset_sign__13788 = cljs.core.nth.call(null, vec__13776__13787, 0, null);
      var offset_hours__13789 = cljs.core.nth.call(null, vec__13776__13787, 1, null);
      var offset_minutes__13790 = cljs.core.nth.call(null, vec__13776__13787, 2, null);
      var offset__13791 = offset_sign__13788 * (offset_hours__13789 * 60 + offset_minutes__13790);
      return cljs.core.PersistentVector.fromArray([cljs.core.not.call(null, years__13762) ? 1970 : y__13780, cljs.core.not.call(null, months__13763) ? 1 : check__13754.call(null, 1, mo__13781, 12, "timestamp month field must be in range 1..12"), cljs.core.not.call(null, days__13764) ? 1 : check__13754.call(null, 1, d__13782, cljs.reader.days_in_month.call(null, mo__13781, cljs.reader.leap_year_QMARK_.call(null, y__13780)), "timestamp day field must be in range 1..last day in month"), cljs.core.not.call(null, 
      hours__13765) ? 0 : check__13754.call(null, 0, h__13783, 23, "timestamp hour field must be in range 0..23"), cljs.core.not.call(null, minutes__13766) ? 0 : check__13754.call(null, 0, m__13784, 59, "timestamp minute field must be in range 0..59"), cljs.core.not.call(null, seconds__13767) ? 0 : check__13754.call(null, 0, s__13785, cljs.core._EQ_.call(null, m__13784, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.core.not.call(null, milliseconds__13768) ? 0 : check__13754.call(null, 
      0, ms__13786, 999, "timestamp millisecond field must be in range 0..999"), offset__13791], true)
    }else {
      return null
    }
  }
}();
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__3971__auto____13803 = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__3971__auto____13803)) {
    var vec__13804__13805 = temp__3971__auto____13803;
    var years__13806 = cljs.core.nth.call(null, vec__13804__13805, 0, null);
    var months__13807 = cljs.core.nth.call(null, vec__13804__13805, 1, null);
    var days__13808 = cljs.core.nth.call(null, vec__13804__13805, 2, null);
    var hours__13809 = cljs.core.nth.call(null, vec__13804__13805, 3, null);
    var minutes__13810 = cljs.core.nth.call(null, vec__13804__13805, 4, null);
    var seconds__13811 = cljs.core.nth.call(null, vec__13804__13805, 5, null);
    var ms__13812 = cljs.core.nth.call(null, vec__13804__13805, 6, null);
    var offset__13813 = cljs.core.nth.call(null, vec__13804__13805, 7, null);
    return new Date(Date.UTC(years__13806, months__13807 - 1, days__13808, hours__13809, minutes__13810, seconds__13811, ms__13812) - offset__13813 * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["inst", "uuid", "queue"], {"inst":cljs.reader.read_date, "uuid":cljs.reader.read_uuid, "queue":cljs.reader.read_queue}));
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag__13817 = cljs.reader.read_symbol.call(null, rdr, initch);
  var temp__3971__auto____13818 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), cljs.core.name.call(null, tag__13817), null);
  if(cljs.core.truth_(temp__3971__auto____13818)) {
    var pfn__13819 = temp__3971__auto____13818;
    return pfn__13819.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", cljs.core.name.call(null, tag__13817), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__13822 = cljs.core.name.call(null, tag);
  var old_parser__13823 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__13822, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__13822, f);
  return old_parser__13823
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__13826 = cljs.core.name.call(null, tag);
  var old_parser__13827 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__13826, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__13826);
  return old_parser__13827
};
goog.provide("reflex.core");
goog.require("cljs.core");
reflex.core.capture_derefed = function capture_derefed(f) {
  var _BANG_recently_derefed13834__13835 = reflex.core._BANG_recently_derefed;
  try {
    reflex.core._BANG_recently_derefed = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY, "\ufdd0'meta", cljs.core.ObjMap.fromObject(["\ufdd0'no-deref-monitor"], {"\ufdd0'no-deref-monitor":true}));
    var res__13837 = f.call(null);
    return cljs.core.ObjMap.fromObject(["\ufdd0'res", "\ufdd0'derefed"], {"\ufdd0'res":res__13837, "\ufdd0'derefed":cljs.core.deref.call(null, reflex.core._BANG_recently_derefed)})
  }finally {
    reflex.core._BANG_recently_derefed = _BANG_recently_derefed13834__13835
  }
};
reflex.core.notify_deref_watcher_BANG_ = function notify_deref_watcher_BANG_(derefable) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____13839 = reflex.core._BANG_recently_derefed;
    if(cljs.core.truth_(and__3822__auto____13839)) {
      return cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'no-deref-monitor")).call(null, cljs.core.meta.call(null, derefable)))
    }else {
      return and__3822__auto____13839
    }
  }())) {
    return cljs.core.swap_BANG_.call(null, reflex.core._BANG_recently_derefed, function(p1__13829_SHARP_) {
      return cljs.core.conj.call(null, p1__13829_SHARP_, derefable)
    })
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IDeref$ = true;
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  reflex.core.notify_deref_watcher_BANG_.call(null, this$);
  return this$.state
};
reflex.core.IDisposable = {};
reflex.core.dispose_BANG_ = function dispose_BANG_(this$) {
  if(function() {
    var and__3822__auto____13844 = this$;
    if(and__3822__auto____13844) {
      return this$.reflex$core$IDisposable$dispose_BANG_$arity$1
    }else {
      return and__3822__auto____13844
    }
  }()) {
    return this$.reflex$core$IDisposable$dispose_BANG_$arity$1(this$)
  }else {
    var x__2359__auto____13845 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____13846 = reflex.core.dispose_BANG_[goog.typeOf(x__2359__auto____13845)];
      if(or__3824__auto____13846) {
        return or__3824__auto____13846
      }else {
        var or__3824__auto____13847 = reflex.core.dispose_BANG_["_"];
        if(or__3824__auto____13847) {
          return or__3824__auto____13847
        }else {
          throw cljs.core.missing_protocol.call(null, "IDisposable.dispose!", this$);
        }
      }
    }().call(null, this$)
  }
};
reflex.core.ComputedObservable = function(state, dirty_QMARK_, f, key, parent_watchables, watches, __meta, __extmap) {
  this.state = state;
  this.dirty_QMARK_ = dirty_QMARK_;
  this.f = f;
  this.key = key;
  this.parent_watchables = parent_watchables;
  this.watches = watches;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2766571274;
  if(arguments.length > 6) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2314__auto__) {
  var this__13851 = this;
  var h__2188__auto____13852 = this__13851.__hash;
  if(!(h__2188__auto____13852 == null)) {
    return h__2188__auto____13852
  }else {
    var h__2188__auto____13853 = cljs.core.hash_imap.call(null, this__2314__auto__);
    this__13851.__hash = h__2188__auto____13853;
    return h__2188__auto____13853
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2319__auto__, k__2320__auto__) {
  var this__13854 = this;
  return this__2319__auto__.cljs$core$ILookup$_lookup$arity$3(this__2319__auto__, k__2320__auto__, null)
};
reflex.core.ComputedObservable.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2321__auto__, k13849, else__2322__auto__) {
  var this__13855 = this;
  if(k13849 === "\ufdd0'state") {
    return this__13855.state
  }else {
    if(k13849 === "\ufdd0'dirty?") {
      return this__13855.dirty_QMARK_
    }else {
      if(k13849 === "\ufdd0'f") {
        return this__13855.f
      }else {
        if(k13849 === "\ufdd0'key") {
          return this__13855.key
        }else {
          if(k13849 === "\ufdd0'parent-watchables") {
            return this__13855.parent_watchables
          }else {
            if(k13849 === "\ufdd0'watches") {
              return this__13855.watches
            }else {
              if("\ufdd0'else") {
                return cljs.core._lookup.call(null, this__13855.__extmap, k13849, else__2322__auto__)
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2326__auto__, k__2327__auto__, G__13848) {
  var this__13856 = this;
  var pred__13857__13860 = cljs.core.identical_QMARK_;
  var expr__13858__13861 = k__2327__auto__;
  if(pred__13857__13860.call(null, "\ufdd0'state", expr__13858__13861)) {
    return new reflex.core.ComputedObservable(G__13848, this__13856.dirty_QMARK_, this__13856.f, this__13856.key, this__13856.parent_watchables, this__13856.watches, this__13856.__meta, this__13856.__extmap, null)
  }else {
    if(pred__13857__13860.call(null, "\ufdd0'dirty?", expr__13858__13861)) {
      return new reflex.core.ComputedObservable(this__13856.state, G__13848, this__13856.f, this__13856.key, this__13856.parent_watchables, this__13856.watches, this__13856.__meta, this__13856.__extmap, null)
    }else {
      if(pred__13857__13860.call(null, "\ufdd0'f", expr__13858__13861)) {
        return new reflex.core.ComputedObservable(this__13856.state, this__13856.dirty_QMARK_, G__13848, this__13856.key, this__13856.parent_watchables, this__13856.watches, this__13856.__meta, this__13856.__extmap, null)
      }else {
        if(pred__13857__13860.call(null, "\ufdd0'key", expr__13858__13861)) {
          return new reflex.core.ComputedObservable(this__13856.state, this__13856.dirty_QMARK_, this__13856.f, G__13848, this__13856.parent_watchables, this__13856.watches, this__13856.__meta, this__13856.__extmap, null)
        }else {
          if(pred__13857__13860.call(null, "\ufdd0'parent-watchables", expr__13858__13861)) {
            return new reflex.core.ComputedObservable(this__13856.state, this__13856.dirty_QMARK_, this__13856.f, this__13856.key, G__13848, this__13856.watches, this__13856.__meta, this__13856.__extmap, null)
          }else {
            if(pred__13857__13860.call(null, "\ufdd0'watches", expr__13858__13861)) {
              return new reflex.core.ComputedObservable(this__13856.state, this__13856.dirty_QMARK_, this__13856.f, this__13856.key, this__13856.parent_watchables, G__13848, this__13856.__meta, this__13856.__extmap, null)
            }else {
              return new reflex.core.ComputedObservable(this__13856.state, this__13856.dirty_QMARK_, this__13856.f, this__13856.key, this__13856.parent_watchables, this__13856.watches, this__13856.__meta, cljs.core.assoc.call(null, this__13856.__extmap, k__2327__auto__, G__13848), null)
            }
          }
        }
      }
    }
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var this__13862 = this;
  reflex.core.notify_deref_watcher_BANG_.call(null, this$);
  if(cljs.core.not.call(null, this__13862.dirty_QMARK_)) {
    return this$.state
  }else {
    var map__13863__13864 = reflex.core.capture_derefed.call(null, this__13862.f);
    var map__13863__13865 = cljs.core.seq_QMARK_.call(null, map__13863__13864) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13863__13864) : map__13863__13864;
    var derefed__13866 = cljs.core._lookup.call(null, map__13863__13865, "\ufdd0'derefed", null);
    var res__13867 = cljs.core._lookup.call(null, map__13863__13865, "\ufdd0'res", null);
    var G__13868__13869 = cljs.core.seq.call(null, this__13862.parent_watchables);
    if(G__13868__13869) {
      var w__13870 = cljs.core.first.call(null, G__13868__13869);
      var G__13868__13871 = G__13868__13869;
      while(true) {
        cljs.core.remove_watch.call(null, w__13870, this__13862.key);
        var temp__3974__auto____13872 = cljs.core.next.call(null, G__13868__13871);
        if(temp__3974__auto____13872) {
          var G__13868__13873 = temp__3974__auto____13872;
          var G__13921 = cljs.core.first.call(null, G__13868__13873);
          var G__13922 = G__13868__13873;
          w__13870 = G__13921;
          G__13868__13871 = G__13922;
          continue
        }else {
        }
        break
      }
    }else {
    }
    this$.parent_watchables = derefed__13866;
    var G__13874__13875 = cljs.core.seq.call(null, derefed__13866);
    if(G__13874__13875) {
      var w__13876 = cljs.core.first.call(null, G__13874__13875);
      var G__13874__13877 = G__13874__13875;
      while(true) {
        cljs.core.add_watch.call(null, w__13876, this__13862.key, function(w__13876, G__13874__13877) {
          return function() {
            this$.dirty_QMARK_ = true;
            return cljs.core._notify_watches.call(null, this$, null, null)
          }
        }(w__13876, G__13874__13877));
        var temp__3974__auto____13878 = cljs.core.next.call(null, G__13874__13877);
        if(temp__3974__auto____13878) {
          var G__13874__13879 = temp__3974__auto____13878;
          var G__13923 = cljs.core.first.call(null, G__13874__13879);
          var G__13924 = G__13874__13879;
          w__13876 = G__13923;
          G__13874__13877 = G__13924;
          continue
        }else {
        }
        break
      }
    }else {
    }
    this$.state = res__13867;
    this$.dirty_QMARK_ = false;
    return res__13867
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2324__auto__, entry__2325__auto__) {
  var this__13880 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2325__auto__)) {
    return this__2324__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2324__auto__, cljs.core._nth.call(null, entry__2325__auto__, 0), cljs.core._nth.call(null, entry__2325__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2324__auto__, entry__2325__auto__)
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, _13882, _) {
  var this__13881 = this;
  var G__13883__13884 = cljs.core.seq.call(null, this__13881.watches);
  if(G__13883__13884) {
    var G__13886__13888 = cljs.core.first.call(null, G__13883__13884);
    var vec__13887__13889 = G__13886__13888;
    var key__13890 = cljs.core.nth.call(null, vec__13887__13889, 0, null);
    var wf__13891 = cljs.core.nth.call(null, vec__13887__13889, 1, null);
    var G__13883__13892 = G__13883__13884;
    var G__13886__13893 = G__13886__13888;
    var G__13883__13894 = G__13883__13892;
    while(true) {
      var vec__13895__13896 = G__13886__13893;
      var key__13897 = cljs.core.nth.call(null, vec__13895__13896, 0, null);
      var wf__13898 = cljs.core.nth.call(null, vec__13895__13896, 1, null);
      var G__13883__13899 = G__13883__13894;
      wf__13898.call(null);
      var temp__3974__auto____13900 = cljs.core.next.call(null, G__13883__13899);
      if(temp__3974__auto____13900) {
        var G__13883__13901 = temp__3974__auto____13900;
        var G__13925 = cljs.core.first.call(null, G__13883__13901);
        var G__13926 = G__13883__13901;
        G__13886__13893 = G__13925;
        G__13883__13894 = G__13926;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, wf) {
  var this__13902 = this;
  return this$.watches = cljs.core.assoc.call(null, this__13902.watches, key, wf)
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__13903 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__13903.watches, key)
};
reflex.core.ComputedObservable.prototype.reflex$core$IDisposable$ = true;
reflex.core.ComputedObservable.prototype.reflex$core$IDisposable$dispose_BANG_$arity$1 = function(this$) {
  var this__13904 = this;
  var G__13905__13906 = cljs.core.seq.call(null, this__13904.parent_watchables);
  if(G__13905__13906) {
    var w__13907 = cljs.core.first.call(null, G__13905__13906);
    var G__13905__13908 = G__13905__13906;
    while(true) {
      cljs.core.remove_watch.call(null, w__13907, this__13904.key);
      var temp__3974__auto____13909 = cljs.core.next.call(null, G__13905__13908);
      if(temp__3974__auto____13909) {
        var G__13905__13910 = temp__3974__auto____13909;
        var G__13927 = cljs.core.first.call(null, G__13905__13910);
        var G__13928 = G__13905__13910;
        w__13907 = G__13927;
        G__13905__13908 = G__13928;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return this$.watches = null
};
reflex.core.ComputedObservable.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2331__auto__) {
  var this__13911 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'state", this__13911.state), cljs.core.vector.call(null, "\ufdd0'dirty?", this__13911.dirty_QMARK_), cljs.core.vector.call(null, "\ufdd0'f", this__13911.f), cljs.core.vector.call(null, "\ufdd0'key", this__13911.key), cljs.core.vector.call(null, "\ufdd0'parent-watchables", this__13911.parent_watchables), cljs.core.vector.call(null, "\ufdd0'watches", this__13911.watches)], 
  true), this__13911.__extmap))
};
reflex.core.ComputedObservable.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2333__auto__, opts__2334__auto__) {
  var this__13912 = this;
  var pr_pair__2335__auto____13913 = function(keyval__2336__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2334__auto__, keyval__2336__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2335__auto____13913, [cljs.core.str("#"), cljs.core.str("ComputedObservable"), cljs.core.str("{")].join(""), ", ", "}", opts__2334__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'state", this__13912.state), cljs.core.vector.call(null, "\ufdd0'dirty?", this__13912.dirty_QMARK_), cljs.core.vector.call(null, "\ufdd0'f", this__13912.f), cljs.core.vector.call(null, "\ufdd0'key", this__13912.key), 
  cljs.core.vector.call(null, "\ufdd0'parent-watchables", this__13912.parent_watchables), cljs.core.vector.call(null, "\ufdd0'watches", this__13912.watches)], true), this__13912.__extmap))
};
reflex.core.ComputedObservable.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2323__auto__) {
  var this__13914 = this;
  return 6 + cljs.core.count.call(null, this__13914.__extmap)
};
reflex.core.ComputedObservable.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2315__auto__, other__2316__auto__) {
  var this__13915 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____13916 = other__2316__auto__;
    if(cljs.core.truth_(and__3822__auto____13916)) {
      var and__3822__auto____13917 = this__2315__auto__.constructor === other__2316__auto__.constructor;
      if(and__3822__auto____13917) {
        return cljs.core.equiv_map.call(null, this__2315__auto__, other__2316__auto__)
      }else {
        return and__3822__auto____13917
      }
    }else {
      return and__3822__auto____13916
    }
  }())) {
    return true
  }else {
    return false
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2318__auto__, G__13848) {
  var this__13918 = this;
  return new reflex.core.ComputedObservable(this__13918.state, this__13918.dirty_QMARK_, this__13918.f, this__13918.key, this__13918.parent_watchables, this__13918.watches, G__13848, this__13918.__extmap, this__13918.__hash)
};
reflex.core.ComputedObservable.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2317__auto__) {
  var this__13919 = this;
  return this__13919.__meta
};
reflex.core.ComputedObservable.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2328__auto__, k__2329__auto__) {
  var this__13920 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'dirty?", "\ufdd0'state", "\ufdd0'key", "\ufdd0'f", "\ufdd0'watches", "\ufdd0'parent-watchables"]), k__2329__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2328__auto__), this__13920.__meta), k__2329__auto__)
  }else {
    return new reflex.core.ComputedObservable(this__13920.state, this__13920.dirty_QMARK_, this__13920.f, this__13920.key, this__13920.parent_watchables, this__13920.watches, this__13920.__meta, this__13920.__hash, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__13920.__extmap, k__2329__auto__)), null)
  }
};
reflex.core.ComputedObservable.cljs$lang$type = true;
reflex.core.ComputedObservable.cljs$lang$ctorPrSeq = function(this__2353__auto__) {
  return cljs.core.list.call(null, "reflex.core/ComputedObservable")
};
reflex.core.__GT_ComputedObservable = function __GT_ComputedObservable(state, dirty_QMARK_, f, key, parent_watchables, watches) {
  return new reflex.core.ComputedObservable(state, dirty_QMARK_, f, key, parent_watchables, watches)
};
reflex.core.map__GT_ComputedObservable = function map__GT_ComputedObservable(G__13850) {
  return new reflex.core.ComputedObservable((new cljs.core.Keyword("\ufdd0'state")).call(null, G__13850), (new cljs.core.Keyword("\ufdd0'dirty?")).call(null, G__13850), (new cljs.core.Keyword("\ufdd0'f")).call(null, G__13850), (new cljs.core.Keyword("\ufdd0'key")).call(null, G__13850), (new cljs.core.Keyword("\ufdd0'parent-watchables")).call(null, G__13850), (new cljs.core.Keyword("\ufdd0'watches")).call(null, G__13850), null, cljs.core.dissoc.call(null, G__13850, "\ufdd0'state", "\ufdd0'dirty?", 
  "\ufdd0'f", "\ufdd0'key", "\ufdd0'parent-watchables", "\ufdd0'watches"))
};
reflex.core.ComputedObservable;
reflex.core.ComputedObservable.prototype.cljs$core$IHash$ = true;
reflex.core.ComputedObservable.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  return this$.key
};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isDocumentModeCache_ = {};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.isDocumentModeCache_[documentMode] || (goog.userAgent.isDocumentModeCache_[documentMode] = goog.userAgent.IE && document.documentMode && document.documentMode >= documentMode)
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x)
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return goog.style.getSizeWithDisplay_(element)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var size = goog.style.getSizeWithDisplay_(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return size
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top)
  }
  return new goog.math.Size(offsetWidth, offsetHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if(opt_className) {
    outerDiv.className = opt_className
  }
  outerDiv.style.cssText = "visiblity:hidden;overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("&")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    var type = el.type.toLowerCase();
    switch(type) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "=" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, opt_value);
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, opt_value);
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, opt_value);
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
var array_p, explode_p, key_prefix, map_p, namespace_tag, number_p, p, re_svg_tags, re_tag, re_whitespace, string_p, unify_p, whitespace_node_p, xmlns, __hasProp = {}.hasOwnProperty;
goog.require("goog.string");
goog.provide("singult.coffee");
goog.provide("singult.coffee.Unify");
p = function(x) {
  console.log(x);
  return x
};
re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
re_svg_tags = /^(svg|g|rect|circle|clipPath|path|line|polygon|polyline|text|textPath)$/;
re_whitespace = /^\s+$/;
key_prefix = "\x00";
xmlns = {xhtml:"http://www.w3.org/1999/xhtml", svg:"http://www.w3.org/2000/svg"};
namespace_tag = function(tag_str) {
  var nsp, tag, _ref;
  _ref = tag_str.split(":"), nsp = _ref[0], tag = _ref[1];
  if(tag != null) {
    return[xmlns[nsp] || nsp, tag]
  }else {
    if(tag_str.match(re_svg_tags)) {
      return[xmlns.svg, tag_str]
    }else {
      return[xmlns.xhtml, tag_str]
    }
  }
};
explode_p = function(v) {
  return v[0] === ":*:"
};
unify_p = function(x) {
  return x != null && x instanceof singult.coffee.Unify
};
array_p = function(x) {
  return x != null && x.forEach != null
};
map_p = function(x) {
  return x != null && !array_p(x) && !unify_p(x) && x instanceof Object
};
string_p = function(x) {
  return x != null && x.substring != null
};
number_p = function(x) {
  return x != null && x.toFixed != null
};
whitespace_node_p = function($n) {
  return $n.nodeType === 8 || $n.nodeType === 3 && $n.textContent.match(re_whitespace)
};
singult.coffee.style = function($e, m) {
  var k, v, _results;
  _results = [];
  for(k in m) {
    if(!__hasProp.call(m, k)) {
      continue
    }
    v = m[k];
    _results.push($e.style[goog.string.toCamelCase(k)] = v)
  }
  return _results
};
singult.coffee.properties = function($e, m) {
  var prop, v, _results;
  _results = [];
  for(prop in m) {
    if(!__hasProp.call(m, prop)) {
      continue
    }
    v = m[prop];
    _results.push($e[prop] = v)
  }
  return _results
};
singult.coffee.attr = function($e, attr_map) {
  var k, v, _results;
  if(attr_map["style"] != null) {
    singult.coffee.style($e, attr_map["style"]);
    delete attr_map["style"]
  }
  if(attr_map["properties"] != null) {
    singult.coffee.properties($e, attr_map["properties"]);
    delete attr_map["properties"]
  }
  _results = [];
  for(k in attr_map) {
    if(!__hasProp.call(attr_map, k)) {
      continue
    }
    v = attr_map[k];
    if(v != null) {
      _results.push($e.setAttribute(k, v))
    }else {
      _results.push($e.removeAttribute(k))
    }
  }
  return _results
};
singult.coffee.node_data = function($e, d) {
  if(d != null) {
    return $e["__singult_data__"] = d
  }else {
    return $e["__singult_data__"]
  }
};
singult.coffee.canonicalize = function(x) {
  if(number_p(x)) {
    return x.toString()
  }else {
    if(array_p(x)) {
      return singult.coffee.canonicalize_hiccup(x)
    }else {
      return x
    }
  }
};
singult.coffee.canonicalize_hiccup = function(v) {
  var attr, canonical, canonical_children, children, cls_str, id, nsp, tag, tag_str, _, _ref, _ref1, _ref2;
  tag = v[0];
  _ref = map_p(v[1]) ? [v[1], v.slice(2)] : [{}, v.slice(1)], attr = _ref[0], children = _ref[1];
  _ref1 = tag.match(re_tag), _ = _ref1[0], tag_str = _ref1[1], id = _ref1[2], cls_str = _ref1[3];
  if(id != null) {
    attr["id"] = id
  }
  if(cls_str != null) {
    attr["class"] = cls_str.replace(/\./g, " ") + (attr["class"] != null ? " " + attr["class"] : "")
  }
  _ref2 = namespace_tag(tag_str), nsp = _ref2[0], tag = _ref2[1];
  canonical_children = [];
  children.forEach(function(v) {
    if(v != null) {
      if(explode_p(v)) {
        return v.slice(1).forEach(function(v) {
          return canonical_children.push(singult.coffee.canonicalize(v))
        })
      }else {
        return canonical_children.push(singult.coffee.canonicalize(v))
      }
    }
  });
  canonical = {nsp:nsp, tag:tag, attr:attr, children:canonical_children};
  return canonical
};
singult.coffee.render = function(m) {
  var $e, c;
  if(string_p(m)) {
    return document.createTextNode(m)
  }else {
    $e = document.createElementNS(m.nsp, m.tag);
    singult.coffee.attr($e, m.attr);
    if(unify_p(c = m.children[0])) {
      if(c.enter != null) {
        c.data.forEach(function(d) {
          var $el;
          $el = c.enter(d);
          singult.coffee.node_data($el, d);
          return $e.appendChild($el)
        })
      }else {
        c.data.forEach(function(d) {
          var $el;
          $el = singult.coffee.render(singult.coffee.canonicalize(c.mapping(d)));
          singult.coffee.node_data($el, d);
          return $e.appendChild($el)
        })
      }
    }else {
      m.children.forEach(function($c) {
        return $e.appendChild(singult.coffee.render($c))
      })
    }
    return $e
  }
};
singult.coffee.Unify = function(data, mapping, key_fn, enter, update, exit, selector, force_update_p) {
  this.data = data;
  this.mapping = mapping;
  this.key_fn = key_fn;
  this.enter = enter;
  this.update = update;
  this.exit = exit;
  this.selector = selector;
  this.force_update_p = force_update_p;
  return this
};
singult.coffee.unify_ = function($container, u) {
  var $n, $nodes, enter, exit, i, key, key_fn, nodes_by_key, update, _;
  enter = u.enter || function(d) {
    var $el;
    $el = singult.coffee.render(singult.coffee.canonicalize(u.mapping(d)));
    $container.appendChild($el);
    return $el
  };
  update = u.update || function($n, d) {
    return singult.coffee.merge($n, singult.coffee.canonicalize(u.mapping(d)))
  };
  exit = u.exit || function($n) {
    return $container.removeChild($n)
  };
  key_fn = u.key_fn || function(d, idx) {
    return idx
  };
  $nodes = u.selector != null ? $container.querySelectorAll(u.selector) : $container.childNodes;
  nodes_by_key = {};
  i = 0;
  while(i < $nodes.length) {
    key = key_prefix + key_fn(singult.coffee.node_data($nodes[i]), i);
    nodes_by_key[key] = $nodes[i];
    i += 1
  }
  u.data.forEach(function(d, i) {
    var $el, $n, identical_data_p, old_data;
    key = key_prefix + key_fn(d, i);
    if($n = nodes_by_key[key]) {
      if(u.force_update_p) {
        $el = update($n, d);
        singult.coffee.node_data($el, d)
      }else {
        old_data = singult.coffee.node_data($n);
        identical_data_p = old_data.cljs$core$IEquiv$_equiv$arity$2 != null ? old_data.cljs$core$IEquiv$_equiv$arity$2(old_data, d) : old_data === d;
        if(!identical_data_p) {
          $el = update($n, d);
          singult.coffee.node_data($el, d)
        }
      }
      return delete nodes_by_key[key]
    }else {
      $el = enter(d);
      return singult.coffee.node_data($el, d)
    }
  });
  for(_ in nodes_by_key) {
    $n = nodes_by_key[_];
    exit($n)
  }
  return null
};
singult.coffee.merge = function($e, m) {
  var $c, c, i, _i, _j, _ref, _ref1;
  if(unify_p(m)) {
    singult.coffee.unify_($e, m)
  }else {
    if($e.nodeName.toLowerCase() !== m.tag.toLowerCase()) {
      p($e);
      p(m);
      throw"Cannot merge $e into node of different type";
    }
    singult.coffee.attr($e, m.attr);
    if($e.hasChildNodes()) {
      for(i = _i = _ref = $e.childNodes.length - 1;_ref <= 0 ? _i <= 0 : _i >= 0;i = _ref <= 0 ? ++_i : --_i) {
        $c = $e.childNodes[i];
        if(whitespace_node_p($c)) {
          $e.removeChild($c)
        }
      }
    }
    if(unify_p(m.children[0])) {
      singult.coffee.merge($e, m.children[0])
    }else {
      if($e.childNodes.length > m.children.length) {
        for(i = _j = _ref1 = $e.childNodes.length - 1;_ref1 <= 0 ? _j <= 0 : _j >= 0;i = _ref1 <= 0 ? ++_j : --_j) {
          $e.removeChild($e.childNodes[i])
        }
      }
      i = 0;
      while(i < m.children.length) {
        c = m.children[i] || "";
        $c = $e.childNodes[i];
        if(string_p(c)) {
          if($c != null) {
            $c.textContent = c
          }else {
            $e.appendChild(document.createTextNode(c))
          }
        }else {
          if(map_p(c)) {
            if($c != null) {
              singult.coffee.merge($c, c)
            }else {
              $e.appendChild(singult.coffee.render(c))
            }
          }else {
            p($c);
            p(c);
            throw"Cannot merge children";
          }
        }
        i += 1
      }
    }
  }
  return $e
};
goog.provide("singult.core");
goog.require("cljs.core");
goog.require("singult.coffee");
singult.core.Unify = function(data, mapping, key_fn, enter, update, exit, selector, force_update_QMARK_, __meta, __extmap) {
  this.data = data;
  this.mapping = mapping;
  this.key_fn = key_fn;
  this.enter = enter;
  this.update = update;
  this.exit = exit;
  this.selector = selector;
  this.force_update_QMARK_ = force_update_QMARK_;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054858;
  if(arguments.length > 8) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
singult.core.Unify.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2314__auto__) {
  var this__13396 = this;
  var h__2188__auto____13397 = this__13396.__hash;
  if(!(h__2188__auto____13397 == null)) {
    return h__2188__auto____13397
  }else {
    var h__2188__auto____13398 = cljs.core.hash_imap.call(null, this__2314__auto__);
    this__13396.__hash = h__2188__auto____13398;
    return h__2188__auto____13398
  }
};
singult.core.Unify.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2319__auto__, k__2320__auto__) {
  var this__13399 = this;
  return this__2319__auto__.cljs$core$ILookup$_lookup$arity$3(this__2319__auto__, k__2320__auto__, null)
};
singult.core.Unify.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2321__auto__, k13394, else__2322__auto__) {
  var this__13400 = this;
  if(k13394 === "\ufdd0'data") {
    return this__13400.data
  }else {
    if(k13394 === "\ufdd0'mapping") {
      return this__13400.mapping
    }else {
      if(k13394 === "\ufdd0'key-fn") {
        return this__13400.key_fn
      }else {
        if(k13394 === "\ufdd0'enter") {
          return this__13400.enter
        }else {
          if(k13394 === "\ufdd0'update") {
            return this__13400.update
          }else {
            if(k13394 === "\ufdd0'exit") {
              return this__13400.exit
            }else {
              if(k13394 === "\ufdd0'selector") {
                return this__13400.selector
              }else {
                if(k13394 === "\ufdd0'force-update?") {
                  return this__13400.force_update_QMARK_
                }else {
                  if("\ufdd0'else") {
                    return cljs.core._lookup.call(null, this__13400.__extmap, k13394, else__2322__auto__)
                  }else {
                    return null
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
singult.core.Unify.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2326__auto__, k__2327__auto__, G__13393) {
  var this__13401 = this;
  var pred__13402__13405 = cljs.core.identical_QMARK_;
  var expr__13403__13406 = k__2327__auto__;
  if(pred__13402__13405.call(null, "\ufdd0'data", expr__13403__13406)) {
    return new singult.core.Unify(G__13393, this__13401.mapping, this__13401.key_fn, this__13401.enter, this__13401.update, this__13401.exit, this__13401.selector, this__13401.force_update_QMARK_, this__13401.__meta, this__13401.__extmap, null)
  }else {
    if(pred__13402__13405.call(null, "\ufdd0'mapping", expr__13403__13406)) {
      return new singult.core.Unify(this__13401.data, G__13393, this__13401.key_fn, this__13401.enter, this__13401.update, this__13401.exit, this__13401.selector, this__13401.force_update_QMARK_, this__13401.__meta, this__13401.__extmap, null)
    }else {
      if(pred__13402__13405.call(null, "\ufdd0'key-fn", expr__13403__13406)) {
        return new singult.core.Unify(this__13401.data, this__13401.mapping, G__13393, this__13401.enter, this__13401.update, this__13401.exit, this__13401.selector, this__13401.force_update_QMARK_, this__13401.__meta, this__13401.__extmap, null)
      }else {
        if(pred__13402__13405.call(null, "\ufdd0'enter", expr__13403__13406)) {
          return new singult.core.Unify(this__13401.data, this__13401.mapping, this__13401.key_fn, G__13393, this__13401.update, this__13401.exit, this__13401.selector, this__13401.force_update_QMARK_, this__13401.__meta, this__13401.__extmap, null)
        }else {
          if(pred__13402__13405.call(null, "\ufdd0'update", expr__13403__13406)) {
            return new singult.core.Unify(this__13401.data, this__13401.mapping, this__13401.key_fn, this__13401.enter, G__13393, this__13401.exit, this__13401.selector, this__13401.force_update_QMARK_, this__13401.__meta, this__13401.__extmap, null)
          }else {
            if(pred__13402__13405.call(null, "\ufdd0'exit", expr__13403__13406)) {
              return new singult.core.Unify(this__13401.data, this__13401.mapping, this__13401.key_fn, this__13401.enter, this__13401.update, G__13393, this__13401.selector, this__13401.force_update_QMARK_, this__13401.__meta, this__13401.__extmap, null)
            }else {
              if(pred__13402__13405.call(null, "\ufdd0'selector", expr__13403__13406)) {
                return new singult.core.Unify(this__13401.data, this__13401.mapping, this__13401.key_fn, this__13401.enter, this__13401.update, this__13401.exit, G__13393, this__13401.force_update_QMARK_, this__13401.__meta, this__13401.__extmap, null)
              }else {
                if(pred__13402__13405.call(null, "\ufdd0'force-update?", expr__13403__13406)) {
                  return new singult.core.Unify(this__13401.data, this__13401.mapping, this__13401.key_fn, this__13401.enter, this__13401.update, this__13401.exit, this__13401.selector, G__13393, this__13401.__meta, this__13401.__extmap, null)
                }else {
                  return new singult.core.Unify(this__13401.data, this__13401.mapping, this__13401.key_fn, this__13401.enter, this__13401.update, this__13401.exit, this__13401.selector, this__13401.force_update_QMARK_, this__13401.__meta, cljs.core.assoc.call(null, this__13401.__extmap, k__2327__auto__, G__13393), null)
                }
              }
            }
          }
        }
      }
    }
  }
};
singult.core.Unify.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2324__auto__, entry__2325__auto__) {
  var this__13407 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2325__auto__)) {
    return this__2324__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2324__auto__, cljs.core._nth.call(null, entry__2325__auto__, 0), cljs.core._nth.call(null, entry__2325__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2324__auto__, entry__2325__auto__)
  }
};
singult.core.Unify.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2331__auto__) {
  var this__13408 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'data", this__13408.data), cljs.core.vector.call(null, "\ufdd0'mapping", this__13408.mapping), cljs.core.vector.call(null, "\ufdd0'key-fn", this__13408.key_fn), cljs.core.vector.call(null, "\ufdd0'enter", this__13408.enter), cljs.core.vector.call(null, "\ufdd0'update", this__13408.update), cljs.core.vector.call(null, "\ufdd0'exit", this__13408.exit), cljs.core.vector.call(null, 
  "\ufdd0'selector", this__13408.selector), cljs.core.vector.call(null, "\ufdd0'force-update?", this__13408.force_update_QMARK_)], true), this__13408.__extmap))
};
singult.core.Unify.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2333__auto__, opts__2334__auto__) {
  var this__13409 = this;
  var pr_pair__2335__auto____13410 = function(keyval__2336__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2334__auto__, keyval__2336__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2335__auto____13410, [cljs.core.str("#"), cljs.core.str("Unify"), cljs.core.str("{")].join(""), ", ", "}", opts__2334__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'data", this__13409.data), cljs.core.vector.call(null, "\ufdd0'mapping", this__13409.mapping), cljs.core.vector.call(null, "\ufdd0'key-fn", this__13409.key_fn), cljs.core.vector.call(null, "\ufdd0'enter", this__13409.enter), 
  cljs.core.vector.call(null, "\ufdd0'update", this__13409.update), cljs.core.vector.call(null, "\ufdd0'exit", this__13409.exit), cljs.core.vector.call(null, "\ufdd0'selector", this__13409.selector), cljs.core.vector.call(null, "\ufdd0'force-update?", this__13409.force_update_QMARK_)], true), this__13409.__extmap))
};
singult.core.Unify.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2323__auto__) {
  var this__13411 = this;
  return 8 + cljs.core.count.call(null, this__13411.__extmap)
};
singult.core.Unify.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2315__auto__, other__2316__auto__) {
  var this__13412 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____13413 = other__2316__auto__;
    if(cljs.core.truth_(and__3822__auto____13413)) {
      var and__3822__auto____13414 = this__2315__auto__.constructor === other__2316__auto__.constructor;
      if(and__3822__auto____13414) {
        return cljs.core.equiv_map.call(null, this__2315__auto__, other__2316__auto__)
      }else {
        return and__3822__auto____13414
      }
    }else {
      return and__3822__auto____13413
    }
  }())) {
    return true
  }else {
    return false
  }
};
singult.core.Unify.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2318__auto__, G__13393) {
  var this__13415 = this;
  return new singult.core.Unify(this__13415.data, this__13415.mapping, this__13415.key_fn, this__13415.enter, this__13415.update, this__13415.exit, this__13415.selector, this__13415.force_update_QMARK_, G__13393, this__13415.__extmap, this__13415.__hash)
};
singult.core.Unify.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2317__auto__) {
  var this__13416 = this;
  return this__13416.__meta
};
singult.core.Unify.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2328__auto__, k__2329__auto__) {
  var this__13417 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'data", "\ufdd0'selector", "\ufdd0'force-update?", "\ufdd0'enter", "\ufdd0'exit", "\ufdd0'key-fn", "\ufdd0'update", "\ufdd0'mapping"]), k__2329__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2328__auto__), this__13417.__meta), k__2329__auto__)
  }else {
    return new singult.core.Unify(this__13417.data, this__13417.mapping, this__13417.key_fn, this__13417.enter, this__13417.update, this__13417.exit, this__13417.selector, this__13417.force_update_QMARK_, this__13417.__meta, this__13417.__hash, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__13417.__extmap, k__2329__auto__)), null)
  }
};
singult.core.Unify.cljs$lang$type = true;
singult.core.Unify.cljs$lang$ctorPrSeq = function(this__2353__auto__) {
  return cljs.core.list.call(null, "singult.core/Unify")
};
singult.core.__GT_Unify = function __GT_Unify(data, mapping, key_fn, enter, update, exit, selector, force_update_QMARK_) {
  return new singult.core.Unify(data, mapping, key_fn, enter, update, exit, selector, force_update_QMARK_)
};
singult.core.map__GT_Unify = function map__GT_Unify(G__13395) {
  return new singult.core.Unify((new cljs.core.Keyword("\ufdd0'data")).call(null, G__13395), (new cljs.core.Keyword("\ufdd0'mapping")).call(null, G__13395), (new cljs.core.Keyword("\ufdd0'key-fn")).call(null, G__13395), (new cljs.core.Keyword("\ufdd0'enter")).call(null, G__13395), (new cljs.core.Keyword("\ufdd0'update")).call(null, G__13395), (new cljs.core.Keyword("\ufdd0'exit")).call(null, G__13395), (new cljs.core.Keyword("\ufdd0'selector")).call(null, G__13395), (new cljs.core.Keyword("\ufdd0'force-update?")).call(null, 
  G__13395), null, cljs.core.dissoc.call(null, G__13395, "\ufdd0'data", "\ufdd0'mapping", "\ufdd0'key-fn", "\ufdd0'enter", "\ufdd0'update", "\ufdd0'exit", "\ufdd0'selector", "\ufdd0'force-update?"))
};
singult.core.Unify;
singult.core.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.instance_QMARK_.call(null, singult.core.Unify, x)) {
    var map__13472__13473 = x;
    var map__13472__13474 = cljs.core.seq_QMARK_.call(null, map__13472__13473) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13472__13473) : map__13472__13473;
    var force_update_QMARK___13475 = cljs.core._lookup.call(null, map__13472__13474, "\ufdd0'force-update?", null);
    var selector__13476 = cljs.core._lookup.call(null, map__13472__13474, "\ufdd0'selector", null);
    var exit__13477 = cljs.core._lookup.call(null, map__13472__13474, "\ufdd0'exit", null);
    var update__13478 = cljs.core._lookup.call(null, map__13472__13474, "\ufdd0'update", null);
    var enter__13479 = cljs.core._lookup.call(null, map__13472__13474, "\ufdd0'enter", null);
    var key_fn__13480 = cljs.core._lookup.call(null, map__13472__13474, "\ufdd0'key-fn", null);
    var mapping__13481 = cljs.core._lookup.call(null, map__13472__13474, "\ufdd0'mapping", null);
    var data__13482 = cljs.core._lookup.call(null, map__13472__13474, "\ufdd0'data", null);
    var data_arr__13490 = function() {
      var a__13483 = [];
      var G__13484__13485 = cljs.core.seq.call(null, data__13482);
      if(G__13484__13485) {
        var d__13486 = cljs.core.first.call(null, G__13484__13485);
        var G__13484__13487 = G__13484__13485;
        while(true) {
          a__13483.push(d__13486);
          var temp__3974__auto____13488 = cljs.core.next.call(null, G__13484__13487);
          if(temp__3974__auto____13488) {
            var G__13484__13489 = temp__3974__auto____13488;
            var G__13526 = cljs.core.first.call(null, G__13484__13489);
            var G__13527 = G__13484__13489;
            d__13486 = G__13526;
            G__13484__13487 = G__13527;
            continue
          }else {
          }
          break
        }
      }else {
      }
      return a__13483
    }();
    return new singult.coffee.Unify(data_arr__13490, function(p1__13392_SHARP_) {
      return clj__GT_js.call(null, mapping__13481.call(null, p1__13392_SHARP_))
    }, key_fn__13480, enter__13479, update__13478, exit__13477, selector__13476, force_update_QMARK___13475)
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        var o__13491 = {};
        var G__13492__13493 = cljs.core.seq.call(null, x);
        if(G__13492__13493) {
          var G__13495__13497 = cljs.core.first.call(null, G__13492__13493);
          var vec__13496__13498 = G__13495__13497;
          var k__13499 = cljs.core.nth.call(null, vec__13496__13498, 0, null);
          var v__13500 = cljs.core.nth.call(null, vec__13496__13498, 1, null);
          var G__13492__13501 = G__13492__13493;
          var G__13495__13502 = G__13495__13497;
          var G__13492__13503 = G__13492__13501;
          while(true) {
            var vec__13504__13505 = G__13495__13502;
            var k__13506 = cljs.core.nth.call(null, vec__13504__13505, 0, null);
            var v__13507 = cljs.core.nth.call(null, vec__13504__13505, 1, null);
            var G__13492__13508 = G__13492__13503;
            var key__13509 = clj__GT_js.call(null, k__13506);
            if(cljs.core.string_QMARK_.call(null, key__13509)) {
            }else {
              throw"Cannot convert; JavaScript map keys must be strings";
            }
            o__13491[key__13509] = clj__GT_js.call(null, v__13507);
            var temp__3974__auto____13510 = cljs.core.next.call(null, G__13492__13508);
            if(temp__3974__auto____13510) {
              var G__13492__13511 = temp__3974__auto____13510;
              var G__13528 = cljs.core.first.call(null, G__13492__13511);
              var G__13529 = G__13492__13511;
              G__13495__13502 = G__13528;
              G__13492__13503 = G__13529;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return o__13491
      }else {
        if(cljs.core.seq_QMARK_.call(null, x)) {
          var a__13512 = [];
          a__13512.push(":*:");
          var G__13513__13514 = cljs.core.seq.call(null, x);
          if(G__13513__13514) {
            var item__13515 = cljs.core.first.call(null, G__13513__13514);
            var G__13513__13516 = G__13513__13514;
            while(true) {
              a__13512.push(clj__GT_js.call(null, item__13515));
              var temp__3974__auto____13517 = cljs.core.next.call(null, G__13513__13516);
              if(temp__3974__auto____13517) {
                var G__13513__13518 = temp__3974__auto____13517;
                var G__13530 = cljs.core.first.call(null, G__13513__13518);
                var G__13531 = G__13513__13518;
                item__13515 = G__13530;
                G__13513__13516 = G__13531;
                continue
              }else {
              }
              break
            }
          }else {
          }
          return a__13512
        }else {
          if(cljs.core.coll_QMARK_.call(null, x)) {
            var a__13519 = [];
            var G__13520__13521 = cljs.core.seq.call(null, x);
            if(G__13520__13521) {
              var item__13522 = cljs.core.first.call(null, G__13520__13521);
              var G__13520__13523 = G__13520__13521;
              while(true) {
                a__13519.push(clj__GT_js.call(null, item__13522));
                var temp__3974__auto____13524 = cljs.core.next.call(null, G__13520__13523);
                if(temp__3974__auto____13524) {
                  var G__13520__13525 = temp__3974__auto____13524;
                  var G__13532 = cljs.core.first.call(null, G__13520__13525);
                  var G__13533 = G__13520__13525;
                  item__13522 = G__13532;
                  G__13520__13523 = G__13533;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return a__13519
          }else {
            if("\ufdd0'else") {
              return x
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
singult.core.node_data = singult.coffee.node_data;
singult.core.attr = function attr($n, m) {
  return singult.coffee.attr.call(null, $n, singult.core.clj__GT_js.call(null, m))
};
singult.core.render = function render(v) {
  return singult.coffee.render.call(null, singult.coffee.canonicalize.call(null, singult.core.clj__GT_js.call(null, v)))
};
singult.core.merge_BANG_ = function merge_BANG_($n, v) {
  if(v == null) {
    return null
  }else {
    return singult.coffee.merge.call(null, $n, singult.coffee.canonicalize.call(null, singult.core.clj__GT_js.call(null, v)))
  }
};
singult.core.unify = function() {
  var unify__delegate = function(data, mapping, p__13534) {
    var map__13544__13545 = p__13534;
    var map__13544__13546 = cljs.core.seq_QMARK_.call(null, map__13544__13545) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13544__13545) : map__13544__13545;
    var force_update_QMARK___13547 = cljs.core._lookup.call(null, map__13544__13546, "\ufdd0'force-update?", null);
    var selector__13548 = cljs.core._lookup.call(null, map__13544__13546, "\ufdd0'selector", null);
    var exit__13549 = cljs.core._lookup.call(null, map__13544__13546, "\ufdd0'exit", null);
    var update__13550 = cljs.core._lookup.call(null, map__13544__13546, "\ufdd0'update", null);
    var enter__13551 = cljs.core._lookup.call(null, map__13544__13546, "\ufdd0'enter", null);
    var key_fn__13552 = cljs.core._lookup.call(null, map__13544__13546, "\ufdd0'key-fn", null);
    return new singult.core.Unify(data, mapping, key_fn__13552, enter__13551, update__13550, exit__13549, selector__13548, force_update_QMARK___13547)
  };
  var unify = function(data, mapping, var_args) {
    var p__13534 = null;
    if(goog.isDef(var_args)) {
      p__13534 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unify__delegate.call(this, data, mapping, p__13534)
  };
  unify.cljs$lang$maxFixedArity = 2;
  unify.cljs$lang$applyTo = function(arglist__13553) {
    var data = cljs.core.first(arglist__13553);
    var mapping = cljs.core.first(cljs.core.next(arglist__13553));
    var p__13534 = cljs.core.rest(cljs.core.next(arglist__13553));
    return unify__delegate(data, mapping, p__13534)
  };
  unify.cljs$lang$arity$variadic = unify__delegate;
  return unify
}();
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__14267 = s;
      var limit__14268 = limit;
      var parts__14269 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__14268, 1)) {
          return cljs.core.conj.call(null, parts__14269, s__14267)
        }else {
          var temp__3971__auto____14270 = cljs.core.re_find.call(null, re, s__14267);
          if(cljs.core.truth_(temp__3971__auto____14270)) {
            var m__14271 = temp__3971__auto____14270;
            var index__14272 = s__14267.indexOf(m__14271);
            var G__14273 = s__14267.substring(index__14272 + cljs.core.count.call(null, m__14271));
            var G__14274 = limit__14268 - 1;
            var G__14275 = cljs.core.conj.call(null, parts__14269, s__14267.substring(0, index__14272));
            s__14267 = G__14273;
            limit__14268 = G__14274;
            parts__14269 = G__14275;
            continue
          }else {
            return cljs.core.conj.call(null, parts__14269, s__14267)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__14279 = s.length;
  while(true) {
    if(index__14279 === 0) {
      return""
    }else {
      var ch__14280 = cljs.core._lookup.call(null, s, index__14279 - 1, null);
      if(function() {
        var or__3824__auto____14281 = cljs.core._EQ_.call(null, ch__14280, "\n");
        if(or__3824__auto____14281) {
          return or__3824__auto____14281
        }else {
          return cljs.core._EQ_.call(null, ch__14280, "\r")
        }
      }()) {
        var G__14282 = index__14279 - 1;
        index__14279 = G__14282;
        continue
      }else {
        return s.substring(0, index__14279)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__14286 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____14287 = cljs.core.not.call(null, s__14286);
    if(or__3824__auto____14287) {
      return or__3824__auto____14287
    }else {
      var or__3824__auto____14288 = cljs.core._EQ_.call(null, "", s__14286);
      if(or__3824__auto____14288) {
        return or__3824__auto____14288
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__14286)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__14295 = new goog.string.StringBuffer;
  var length__14296 = s.length;
  var index__14297 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__14296, index__14297)) {
      return buffer__14295.toString()
    }else {
      var ch__14298 = s.charAt(index__14297);
      var temp__3971__auto____14299 = cljs.core._lookup.call(null, cmap, ch__14298, null);
      if(cljs.core.truth_(temp__3971__auto____14299)) {
        var replacement__14300 = temp__3971__auto____14299;
        buffer__14295.append([cljs.core.str(replacement__14300)].join(""))
      }else {
        buffer__14295.append(ch__14298)
      }
      var G__14301 = index__14297 + 1;
      index__14297 = G__14301;
      continue
    }
    break
  }
};
goog.provide("c2.dom");
goog.require("cljs.core");
goog.require("goog.style");
goog.require("goog.dom.classes");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("singult.core");
goog.require("clojure.string");
NodeList.prototype.cljs$core$ISeqable$ = true;
NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
HTMLCollection.prototype.cljs$core$ISeqable$ = true;
HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
Node.prototype.cljs$core$IHash$ = true;
Node.prototype.cljs$core$IHash$_hash$arity$1 = function(x) {
  return x
};
c2.dom.IDom = {};
c2.dom.__GT_dom = function __GT_dom(x) {
  if(function() {
    var and__3822__auto____13237 = x;
    if(and__3822__auto____13237) {
      return x.c2$dom$IDom$__GT_dom$arity$1
    }else {
      return and__3822__auto____13237
    }
  }()) {
    return x.c2$dom$IDom$__GT_dom$arity$1(x)
  }else {
    var x__2359__auto____13238 = x == null ? null : x;
    return function() {
      var or__3824__auto____13239 = c2.dom.__GT_dom[goog.typeOf(x__2359__auto____13238)];
      if(or__3824__auto____13239) {
        return or__3824__auto____13239
      }else {
        var or__3824__auto____13240 = c2.dom.__GT_dom["_"];
        if(or__3824__auto____13240) {
          return or__3824__auto____13240
        }else {
          throw cljs.core.missing_protocol.call(null, "IDom.->dom", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.PersistentVector.prototype.c2$dom$IDom$ = true;
cljs.core.PersistentVector.prototype.c2$dom$IDom$__GT_dom$arity$1 = function(v) {
  return singult.core.render.call(null, v)
};
Node.prototype.c2$dom$IDom$ = true;
Node.prototype.c2$dom$IDom$__GT_dom$arity$1 = function(node) {
  return node
};
c2.dom.IDom["string"] = true;
c2.dom.__GT_dom["string"] = function(selector) {
  return c2.dom.select.call(null, selector)
};
c2.dom.select = function() {
  var select = null;
  var select__1 = function(selector) {
    return document.querySelector(selector)
  };
  var select__2 = function(selector, container) {
    return c2.dom.__GT_dom.call(null, container).querySelector(selector)
  };
  select = function(selector, container) {
    switch(arguments.length) {
      case 1:
        return select__1.call(this, selector);
      case 2:
        return select__2.call(this, selector, container)
    }
    throw"Invalid arity: " + arguments.length;
  };
  select.cljs$lang$arity$1 = select__1;
  select.cljs$lang$arity$2 = select__2;
  return select
}();
c2.dom.select_all = function() {
  var select_all = null;
  var select_all__1 = function(selector) {
    return document.querySelectorAll(selector)
  };
  var select_all__2 = function(selector, container) {
    return c2.dom.__GT_dom.call(null, container).querySelectorAll(selector)
  };
  select_all = function(selector, container) {
    switch(arguments.length) {
      case 1:
        return select_all__1.call(this, selector);
      case 2:
        return select_all__2.call(this, selector, container)
    }
    throw"Invalid arity: " + arguments.length;
  };
  select_all.cljs$lang$arity$1 = select_all__1;
  select_all.cljs$lang$arity$2 = select_all__2;
  return select_all
}();
c2.dom.matches_selector_QMARK_ = function matches_selector_QMARK_(node, selector) {
  return node.webkitMatchesSelector(selector)
};
c2.dom.children = function children(node) {
  return c2.dom.__GT_dom.call(null, node).children
};
c2.dom.parent = function parent(node) {
  return c2.dom.__GT_dom.call(null, node).parentNode
};
c2.dom.append_BANG_ = function append_BANG_(container, el) {
  var el__13242 = c2.dom.__GT_dom.call(null, el);
  goog.dom.appendChild(c2.dom.__GT_dom.call(null, container), el__13242);
  return el__13242
};
c2.dom.prepend_BANG_ = function prepend_BANG_(container, el) {
  var el__13244 = c2.dom.__GT_dom.call(null, el);
  goog.dom.insertChildAt(c2.dom.__GT_dom.call(null, container), el__13244, 0);
  return el__13244
};
c2.dom.remove_BANG_ = function remove_BANG_(el) {
  return goog.dom.removeNode(c2.dom.__GT_dom.call(null, el))
};
c2.dom.replace_BANG_ = function replace_BANG_(old, new$) {
  var new__13246 = c2.dom.__GT_dom.call(null, new$);
  goog.dom.replaceNode(new__13246, c2.dom.__GT_dom.call(null, old));
  return new__13246
};
c2.dom.style = function() {
  var style = null;
  var style__1 = function(el) {
    throw new Error("TODO: return map of element styles");
  };
  var style__2 = function(el, x) {
    var el__13279 = c2.dom.__GT_dom.call(null, el);
    try {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        var k__13304 = x;
        return goog.style.getComputedStyle(el__13279, cljs.core.name.call(null, k__13304))
      }else {
        if("\ufdd0'else") {
          throw 0;
        }else {
          return null
        }
      }
    }catch(e__7242__auto__) {
      if(e__7242__auto__ === 0) {
        try {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m__13284 = x;
            var G__13285__13286 = cljs.core.seq.call(null, m__13284);
            if(G__13285__13286) {
              var G__13288__13290 = cljs.core.first.call(null, G__13285__13286);
              var vec__13289__13291 = G__13288__13290;
              var k__13292 = cljs.core.nth.call(null, vec__13289__13291, 0, null);
              var v__13293 = cljs.core.nth.call(null, vec__13289__13291, 1, null);
              var G__13285__13294 = G__13285__13286;
              var G__13288__13295 = G__13288__13290;
              var G__13285__13296 = G__13285__13294;
              while(true) {
                var vec__13297__13298 = G__13288__13295;
                var k__13299 = cljs.core.nth.call(null, vec__13297__13298, 0, null);
                var v__13300 = cljs.core.nth.call(null, vec__13297__13298, 1, null);
                var G__13285__13301 = G__13285__13296;
                style.call(null, el__13279, k__13299, v__13300);
                var temp__3974__auto____13302 = cljs.core.next.call(null, G__13285__13301);
                if(temp__3974__auto____13302) {
                  var G__13285__13303 = temp__3974__auto____13302;
                  var G__13311 = cljs.core.first.call(null, G__13285__13303);
                  var G__13312 = G__13285__13303;
                  G__13288__13295 = G__13311;
                  G__13285__13296 = G__13312;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return el__13279
          }else {
            if("\ufdd0'else") {
              throw 0;
            }else {
              return null
            }
          }
        }catch(e__7242__auto__) {
          if(e__7242__auto__ === 0) {
            var G__13280__13283 = x;
            return null
          }else {
            throw e__7242__auto__;
          }
        }
      }else {
        throw e__7242__auto__;
      }
    }
  };
  var style__3 = function(el, k, v) {
    goog.style.setStyle(c2.dom.__GT_dom.call(null, el), cljs.core.name.call(null, k), function() {
      try {
        if(cljs.core.string_QMARK_.call(null, v)) {
          var s__13310 = v;
          return s__13310
        }else {
          if("\ufdd0'else") {
            throw 0;
          }else {
            return null
          }
        }
      }catch(e__7242__auto__) {
        if(e__7242__auto__ === 0) {
          try {
            if(cljs.core.number_QMARK_.call(null, v)) {
              var n__13309 = v;
              if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray(["\ufdd0'bottom", "\ufdd0'width", "\ufdd0'top", "\ufdd0'right", "\ufdd0'left", "\ufdd0'height"]).call(null, cljs.core.keyword.call(null, k)))) {
                return[cljs.core.str(n__13309), cljs.core.str("px")].join("")
              }else {
                return n__13309
              }
            }else {
              if("\ufdd0'else") {
                throw 0;
              }else {
                return null
              }
            }
          }catch(e__7242__auto__) {
            if(e__7242__auto__ === 0) {
              var G__13305__13308 = v;
              return null
            }else {
              throw e__7242__auto__;
            }
          }
        }else {
          throw e__7242__auto__;
        }
      }
    }());
    return el
  };
  style = function(el, k, v) {
    switch(arguments.length) {
      case 1:
        return style__1.call(this, el);
      case 2:
        return style__2.call(this, el, k);
      case 3:
        return style__3.call(this, el, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  style.cljs$lang$arity$1 = style__1;
  style.cljs$lang$arity$2 = style__2;
  style.cljs$lang$arity$3 = style__3;
  return style
}();
c2.dom.attr = function() {
  var attr = null;
  var attr__1 = function(el) {
    var attrs__13348 = c2.dom.__GT_dom.call(null, el).attributes;
    return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
      var iter__2458__auto____13355 = function iter__13349(s__13350) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__13350__13353 = s__13350;
          while(true) {
            if(cljs.core.seq.call(null, s__13350__13353)) {
              var i__13354 = cljs.core.first.call(null, s__13350__13353);
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, attrs__13348[i__13354].name), attrs__13348[i__13354].value], true), iter__13349.call(null, cljs.core.rest.call(null, s__13350__13353)))
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__2458__auto____13355.call(null, cljs.core.range.call(null, attrs__13348.length))
    }())
  };
  var attr__2 = function(el, x) {
    var el__13356 = c2.dom.__GT_dom.call(null, el);
    try {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        var k__13381 = x;
        return el__13356.getAttribute(cljs.core.name.call(null, k__13381))
      }else {
        if("\ufdd0'else") {
          throw 0;
        }else {
          return null
        }
      }
    }catch(e__7242__auto__) {
      if(e__7242__auto__ === 0) {
        try {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m__13361 = x;
            var G__13362__13363 = cljs.core.seq.call(null, m__13361);
            if(G__13362__13363) {
              var G__13365__13367 = cljs.core.first.call(null, G__13362__13363);
              var vec__13366__13368 = G__13365__13367;
              var k__13369 = cljs.core.nth.call(null, vec__13366__13368, 0, null);
              var v__13370 = cljs.core.nth.call(null, vec__13366__13368, 1, null);
              var G__13362__13371 = G__13362__13363;
              var G__13365__13372 = G__13365__13367;
              var G__13362__13373 = G__13362__13371;
              while(true) {
                var vec__13374__13375 = G__13365__13372;
                var k__13376 = cljs.core.nth.call(null, vec__13374__13375, 0, null);
                var v__13377 = cljs.core.nth.call(null, vec__13374__13375, 1, null);
                var G__13362__13378 = G__13362__13373;
                attr.call(null, el__13356, k__13376, v__13377);
                var temp__3974__auto____13379 = cljs.core.next.call(null, G__13362__13378);
                if(temp__3974__auto____13379) {
                  var G__13362__13380 = temp__3974__auto____13379;
                  var G__13383 = cljs.core.first.call(null, G__13362__13380);
                  var G__13384 = G__13362__13380;
                  G__13365__13372 = G__13383;
                  G__13362__13373 = G__13384;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return el__13356
          }else {
            if("\ufdd0'else") {
              throw 0;
            }else {
              return null
            }
          }
        }catch(e__7242__auto__) {
          if(e__7242__auto__ === 0) {
            var G__13357__13360 = x;
            return null
          }else {
            throw e__7242__auto__;
          }
        }
      }else {
        throw e__7242__auto__;
      }
    }
  };
  var attr__3 = function(el, k, v) {
    var el__13382 = c2.dom.__GT_dom.call(null, el);
    if(v == null) {
      el__13382.removeAttribute(cljs.core.name.call(null, k))
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0'style", k)) {
        c2.dom.style.call(null, el__13382, v)
      }else {
        el__13382.setAttribute(cljs.core.name.call(null, k), v)
      }
    }
    return el__13382
  };
  attr = function(el, k, v) {
    switch(arguments.length) {
      case 1:
        return attr__1.call(this, el);
      case 2:
        return attr__2.call(this, el, k);
      case 3:
        return attr__3.call(this, el, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  attr.cljs$lang$arity$1 = attr__1;
  attr.cljs$lang$arity$2 = attr__2;
  attr.cljs$lang$arity$3 = attr__3;
  return attr
}();
c2.dom.text = function() {
  var text = null;
  var text__1 = function(el) {
    return goog.dom.getTextContent(c2.dom.__GT_dom.call(null, el))
  };
  var text__2 = function(el, v) {
    var el__13386 = c2.dom.__GT_dom.call(null, el);
    goog.dom.setTextContent(el__13386, v);
    return el__13386
  };
  text = function(el, v) {
    switch(arguments.length) {
      case 1:
        return text__1.call(this, el);
      case 2:
        return text__2.call(this, el, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  text.cljs$lang$arity$1 = text__1;
  text.cljs$lang$arity$2 = text__2;
  return text
}();
c2.dom.val = function() {
  var val = null;
  var val__1 = function(el) {
    return goog.dom.forms.getValue(c2.dom.__GT_dom.call(null, el))
  };
  var val__2 = function(el, v) {
    var el__13388 = c2.dom.__GT_dom.call(null, el);
    goog.dom.forms.setValue(el__13388, v);
    return el__13388
  };
  val = function(el, v) {
    switch(arguments.length) {
      case 1:
        return val__1.call(this, el);
      case 2:
        return val__2.call(this, el, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  val.cljs$lang$arity$1 = val__1;
  val.cljs$lang$arity$2 = val__2;
  return val
}();
c2.dom.classed_BANG_ = function classed_BANG_(el, class$, classed_QMARK_) {
  return goog.dom.classes.enable(c2.dom.__GT_dom.call(null, el), cljs.core.name.call(null, class$), classed_QMARK_)
};
c2.dom.add_class_BANG_ = function add_class_BANG_(el, class$) {
  return c2.dom.classed_BANG_.call(null, el, class$, true)
};
c2.dom.remove_class_BANG_ = function remove_class_BANG_(el, class$) {
  return c2.dom.classed_BANG_.call(null, el, class$, false)
};
c2.dom.request_animation_frame = function() {
  var or__3824__auto____13390 = window.requestAnimationFrame;
  if(cljs.core.truth_(or__3824__auto____13390)) {
    return or__3824__auto____13390
  }else {
    var or__3824__auto____13391 = window.webkitRequestAnimationFrame;
    if(cljs.core.truth_(or__3824__auto____13391)) {
      return or__3824__auto____13391
    }else {
      return function(p1__13389_SHARP_) {
        return setTimeout(function() {
          return p1__13389_SHARP_.call(null)
        }, 10)
      }
    }
  }
}();
goog.provide("c2.core");
goog.require("cljs.core");
goog.require("reflex.core");
goog.require("c2.dom");
goog.require("singult.core");
c2.core.node_data = singult.core.node_data;
c2.core.unify = function() {
  var unify__delegate = function(data, mapping, args) {
    if(cljs.core.seq.call(null, data)) {
      mapping.call(null, cljs.core.first.call(null, data))
    }else {
    }
    return cljs.core.apply.call(null, singult.core.unify, data, mapping, args)
  };
  var unify = function(data, mapping, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unify__delegate.call(this, data, mapping, args)
  };
  unify.cljs$lang$maxFixedArity = 2;
  unify.cljs$lang$applyTo = function(arglist__13828) {
    var data = cljs.core.first(arglist__13828);
    var mapping = cljs.core.first(cljs.core.next(arglist__13828));
    var args = cljs.core.rest(cljs.core.next(arglist__13828));
    return unify__delegate(data, mapping, args)
  };
  unify.cljs$lang$arity$variadic = unify__delegate;
  return unify
}();
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for(var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.dependentDisposables_;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  if(!this.dependentDisposables_) {
    this.dependentDisposables_ = []
  }
  this.dependentDisposables_.push(disposable)
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.dependentDisposables_) {
    goog.disposeAll.apply(null, this.dependentDisposables_)
  }
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if(goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable)
    }else {
      goog.dispose(disposable)
    }
  }
};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true
  }catch(e) {
  }
  return false
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      if(!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.ASSUME_GOOD_GC = false;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = {count_:0, remaining_:0}
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = {count_:0, remaining_:0};
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = [];
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.getProxy();
      proxy.src = src;
      listenerObj = new goog.events.Listener;
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = []
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.key, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.key, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(!listenerArray[i].removed && listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = [];
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0
      }
      evt.dispose()
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
goog.provide("c2.event");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("c2.core");
goog.require("goog.events");
goog.require("c2.dom");
goog.require("c2.core");
goog.require("cljs.reader");
c2.event.on_load = function on_load(f) {
  return goog.events.listen(window, goog.events.EventType.LOAD, f)
};
c2.event.on_raw = function() {
  var on_raw__delegate = function(node, event_type, f, p__13201) {
    var map__13206__13207 = p__13201;
    var map__13206__13208 = cljs.core.seq_QMARK_.call(null, map__13206__13207) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13206__13207) : map__13206__13207;
    var capture__13209 = cljs.core._lookup.call(null, map__13206__13208, "\ufdd0'capture", false);
    return goog.events.listen(c2.dom.__GT_dom.call(null, node), cljs.core.name.call(null, event_type), f, capture__13209)
  };
  var on_raw = function(node, event_type, f, var_args) {
    var p__13201 = null;
    if(goog.isDef(var_args)) {
      p__13201 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return on_raw__delegate.call(this, node, event_type, f, p__13201)
  };
  on_raw.cljs$lang$maxFixedArity = 3;
  on_raw.cljs$lang$applyTo = function(arglist__13210) {
    var node = cljs.core.first(arglist__13210);
    var event_type = cljs.core.first(cljs.core.next(arglist__13210));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13210)));
    var p__13201 = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13210)));
    return on_raw__delegate(node, event_type, f, p__13201)
  };
  on_raw.cljs$lang$arity$variadic = on_raw__delegate;
  return on_raw
}();
c2.event.on = function() {
  var on = null;
  var on__3 = function(node, event_type, f) {
    return on.call(null, node, "*", event_type, f)
  };
  var on__5 = function() {
    var G__13230__delegate = function(node, selector, event_type, f, p__13211) {
      var map__13221__13222 = p__13211;
      var map__13221__13223 = cljs.core.seq_QMARK_.call(null, map__13221__13222) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13221__13222) : map__13221__13222;
      var capture__13224 = cljs.core._lookup.call(null, map__13221__13223, "\ufdd0'capture", false);
      return goog.events.listen(c2.dom.__GT_dom.call(null, node), cljs.core.name.call(null, event_type), function(event) {
        if(cljs.core.truth_(c2.dom.matches_selector_QMARK_.call(null, event.target, selector))) {
          var $node__13225 = event.target;
          while(true) {
            var temp__3971__auto____13226 = c2.core.node_data.call(null, $node__13225);
            if(cljs.core.truth_(temp__3971__auto____13226)) {
              var d__13227 = temp__3971__auto____13226;
              return f.call(null, d__13227, $node__13225, event)
            }else {
              var temp__3971__auto____13228 = c2.dom.parent.call(null, $node__13225);
              if(cljs.core.truth_(temp__3971__auto____13228)) {
                var parent__13229 = temp__3971__auto____13228;
                var G__13231 = parent__13229;
                $node__13225 = G__13231;
                continue
              }else {
                return null
              }
            }
            break
          }
        }else {
          return null
        }
      }, capture__13224)
    };
    var G__13230 = function(node, selector, event_type, f, var_args) {
      var p__13211 = null;
      if(goog.isDef(var_args)) {
        p__13211 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__13230__delegate.call(this, node, selector, event_type, f, p__13211)
    };
    G__13230.cljs$lang$maxFixedArity = 4;
    G__13230.cljs$lang$applyTo = function(arglist__13232) {
      var node = cljs.core.first(arglist__13232);
      var selector = cljs.core.first(cljs.core.next(arglist__13232));
      var event_type = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13232)));
      var f = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13232))));
      var p__13211 = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__13232))));
      return G__13230__delegate(node, selector, event_type, f, p__13211)
    };
    G__13230.cljs$lang$arity$variadic = G__13230__delegate;
    return G__13230
  }();
  on = function(node, selector, event_type, f, var_args) {
    var p__13211 = var_args;
    switch(arguments.length) {
      case 3:
        return on__3.call(this, node, selector, event_type);
      default:
        return on__5.cljs$lang$arity$variadic(node, selector, event_type, f, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  on.cljs$lang$maxFixedArity = 4;
  on.cljs$lang$applyTo = on__5.cljs$lang$applyTo;
  on.cljs$lang$arity$3 = on__3;
  on.cljs$lang$arity$variadic = on__5.cljs$lang$arity$variadic;
  return on
}();
goog.provide("c2.maths");
goog.require("cljs.core");
c2.maths.Pi = Math.PI;
c2.maths.Tau = 2 * c2.maths.Pi;
c2.maths.e = Math.E;
c2.maths.radians_per_degree = c2.maths.Pi / 180;
c2.maths.rad = function rad(x) {
  return c2.maths.radians_per_degree * x
};
c2.maths.sin = function sin(x) {
  return Math.sin.call(null, x)
};
c2.maths.asin = function asin(x) {
  return Math.asin.call(null, x)
};
c2.maths.cos = function cos(x) {
  return Math.cos.call(null, x)
};
c2.maths.acos = function acos(x) {
  return Math.acos.call(null, x)
};
c2.maths.tan = function tan(x) {
  return Math.tan.call(null, x)
};
c2.maths.atan = function atan(x) {
  return Math.atan.call(null, x)
};
c2.maths.expt = function() {
  var expt = null;
  var expt__1 = function(x) {
    return Math.exp.call(null, x)
  };
  var expt__2 = function(x, y) {
    return Math.pow.call(null, x, y)
  };
  expt = function(x, y) {
    switch(arguments.length) {
      case 1:
        return expt__1.call(this, x);
      case 2:
        return expt__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  expt.cljs$lang$arity$1 = expt__1;
  expt.cljs$lang$arity$2 = expt__2;
  return expt
}();
c2.maths.sq = function sq(x) {
  return c2.maths.expt.call(null, x, 2)
};
c2.maths.sqrt = function sqrt(x) {
  return Math.sqrt.call(null, x)
};
c2.maths.floor = function floor(x) {
  return Math.floor.call(null, x)
};
c2.maths.ceil = function ceil(x) {
  return Math.ceil.call(null, x)
};
c2.maths.abs = function abs(x) {
  return Math.abs.call(null, x)
};
c2.maths.log = function() {
  var log = null;
  var log__1 = function(x) {
    return Math.log.call(null, x)
  };
  var log__2 = function(base, x) {
    return Math.log.call(null, x) / Math.log.call(null, base)
  };
  log = function(base, x) {
    switch(arguments.length) {
      case 1:
        return log__1.call(this, base);
      case 2:
        return log__2.call(this, base, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  log.cljs$lang$arity$1 = log__1;
  log.cljs$lang$arity$2 = log__2;
  return log
}();
c2.maths.log10 = function log10(x) {
  return Math.log(x) / Math.LN10
};
c2.maths.extent = function extent(xs) {
  return cljs.core.PersistentVector.fromArray([cljs.core.apply.call(null, cljs.core.min, xs), cljs.core.apply.call(null, cljs.core.max, xs)], true)
};
c2.maths.mean = function mean(xs) {
  return cljs.core.reduce.call(null, cljs.core._PLUS_, xs) / cljs.core.count.call(null, xs)
};
c2.maths.median = function median(xs) {
  var sorted__14149 = cljs.core.sort.call(null, xs);
  var n__14150 = cljs.core.count.call(null, xs);
  if(cljs.core._EQ_.call(null, n__14150, 1)) {
    return cljs.core.first.call(null, sorted__14149)
  }else {
    if(cljs.core.odd_QMARK_.call(null, n__14150)) {
      return cljs.core.nth.call(null, sorted__14149, (n__14150 + 1) / 2)
    }else {
      if("\ufdd0'else") {
        var mid__14151 = n__14150 / 2;
        return c2.maths.mean.call(null, cljs.core.PersistentVector.fromArray([cljs.core.nth.call(null, sorted__14149, c2.maths.floor.call(null, mid__14151)), cljs.core.nth.call(null, sorted__14149, c2.maths.ceil.call(null, mid__14151))], true))
      }else {
        return null
      }
    }
  }
};
c2.maths.irange = function() {
  var irange = null;
  var irange__1 = function(start) {
    return cljs.core.range.call(null, start)
  };
  var irange__2 = function(start, end) {
    return cljs.core.concat.call(null, cljs.core.range.call(null, start, end), cljs.core.PersistentVector.fromArray([end], true))
  };
  var irange__3 = function(start, end, step) {
    var r__14153 = cljs.core.range.call(null, start, end, step);
    if(cljs.core.first.call(null, r__14153) % step === end % step) {
      return cljs.core.concat.call(null, r__14153, cljs.core.PersistentVector.fromArray([end], true))
    }else {
      return r__14153
    }
  };
  irange = function(start, end, step) {
    switch(arguments.length) {
      case 1:
        return irange__1.call(this, start);
      case 2:
        return irange__2.call(this, start, end);
      case 3:
        return irange__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  irange.cljs$lang$arity$1 = irange__1;
  irange.cljs$lang$arity$2 = irange__2;
  irange.cljs$lang$arity$3 = irange__3;
  return irange
}();
c2.maths.within_QMARK_ = function within_QMARK_(x, p__14154) {
  var vec__14160__14161 = p__14154;
  var bottom__14162 = cljs.core.nth.call(null, vec__14160__14161, 0, null);
  var top__14163 = cljs.core.nth.call(null, vec__14160__14161, 1, null);
  var and__3822__auto____14164 = bottom__14162 <= x;
  if(and__3822__auto____14164) {
    return x <= top__14163
  }else {
    return and__3822__auto____14164
  }
};
c2.maths.add = function() {
  var add__delegate = function(args) {
    return cljs.core.reduce.call(null, function(A, B) {
      if(function() {
        var and__3822__auto____14169 = cljs.core.number_QMARK_.call(null, A);
        if(and__3822__auto____14169) {
          return cljs.core.number_QMARK_.call(null, B)
        }else {
          return and__3822__auto____14169
        }
      }()) {
        return A + B
      }else {
        if(function() {
          var and__3822__auto____14170 = cljs.core.coll_QMARK_.call(null, A);
          if(and__3822__auto____14170) {
            return cljs.core.coll_QMARK_.call(null, B)
          }else {
            return and__3822__auto____14170
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._PLUS_, A, B)
        }else {
          if(function() {
            var and__3822__auto____14171 = cljs.core.number_QMARK_.call(null, A);
            if(and__3822__auto____14171) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____14171
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._PLUS_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
          }else {
            if(function() {
              var and__3822__auto____14172 = cljs.core.coll_QMARK_.call(null, A);
              if(and__3822__auto____14172) {
                return cljs.core.number_QMARK_.call(null, B)
              }else {
                return and__3822__auto____14172
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._PLUS_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
            }else {
              return null
            }
          }
        }
      }
    }, args)
  };
  var add = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return add__delegate.call(this, args)
  };
  add.cljs$lang$maxFixedArity = 0;
  add.cljs$lang$applyTo = function(arglist__14173) {
    var args = cljs.core.seq(arglist__14173);
    return add__delegate(args)
  };
  add.cljs$lang$arity$variadic = add__delegate;
  return add
}();
c2.maths.sub = function() {
  var sub__delegate = function(args) {
    if(cljs.core._EQ_.call(null, cljs.core.count.call(null, args), 1)) {
      if(function() {
        var and__3822__auto____14182 = cljs.core.number_QMARK_.call(null, 0);
        if(and__3822__auto____14182) {
          return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
        }else {
          return and__3822__auto____14182
        }
      }()) {
        return 0 - cljs.core.first.call(null, args)
      }else {
        if(function() {
          var and__3822__auto____14183 = cljs.core.coll_QMARK_.call(null, 0);
          if(and__3822__auto____14183) {
            return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
          }else {
            return and__3822__auto____14183
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._, 0, cljs.core.first.call(null, args))
        }else {
          if(function() {
            var and__3822__auto____14184 = cljs.core.number_QMARK_.call(null, 0);
            if(and__3822__auto____14184) {
              return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
            }else {
              return and__3822__auto____14184
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._, cljs.core.replicate.call(null, cljs.core.count.call(null, cljs.core.first.call(null, args)), 0), cljs.core.first.call(null, args))
          }else {
            if(function() {
              var and__3822__auto____14185 = cljs.core.coll_QMARK_.call(null, 0);
              if(and__3822__auto____14185) {
                return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
              }else {
                return and__3822__auto____14185
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._, 0, cljs.core.replicate.call(null, cljs.core.count.call(null, 0), cljs.core.first.call(null, args)))
            }else {
              return null
            }
          }
        }
      }
    }else {
      return cljs.core.reduce.call(null, function(A, B) {
        if(function() {
          var and__3822__auto____14186 = cljs.core.number_QMARK_.call(null, A);
          if(and__3822__auto____14186) {
            return cljs.core.number_QMARK_.call(null, B)
          }else {
            return and__3822__auto____14186
          }
        }()) {
          return A - B
        }else {
          if(function() {
            var and__3822__auto____14187 = cljs.core.coll_QMARK_.call(null, A);
            if(and__3822__auto____14187) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____14187
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._, A, B)
          }else {
            if(function() {
              var and__3822__auto____14188 = cljs.core.number_QMARK_.call(null, A);
              if(and__3822__auto____14188) {
                return cljs.core.coll_QMARK_.call(null, B)
              }else {
                return and__3822__auto____14188
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
            }else {
              if(function() {
                var and__3822__auto____14189 = cljs.core.coll_QMARK_.call(null, A);
                if(and__3822__auto____14189) {
                  return cljs.core.number_QMARK_.call(null, B)
                }else {
                  return and__3822__auto____14189
                }
              }()) {
                return cljs.core.map.call(null, cljs.core._, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
              }else {
                return null
              }
            }
          }
        }
      }, args)
    }
  };
  var sub = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sub__delegate.call(this, args)
  };
  sub.cljs$lang$maxFixedArity = 0;
  sub.cljs$lang$applyTo = function(arglist__14190) {
    var args = cljs.core.seq(arglist__14190);
    return sub__delegate(args)
  };
  sub.cljs$lang$arity$variadic = sub__delegate;
  return sub
}();
c2.maths.mul = function() {
  var mul__delegate = function(args) {
    return cljs.core.reduce.call(null, function(A, B) {
      if(function() {
        var and__3822__auto____14195 = cljs.core.number_QMARK_.call(null, A);
        if(and__3822__auto____14195) {
          return cljs.core.number_QMARK_.call(null, B)
        }else {
          return and__3822__auto____14195
        }
      }()) {
        return A * B
      }else {
        if(function() {
          var and__3822__auto____14196 = cljs.core.coll_QMARK_.call(null, A);
          if(and__3822__auto____14196) {
            return cljs.core.coll_QMARK_.call(null, B)
          }else {
            return and__3822__auto____14196
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._STAR_, A, B)
        }else {
          if(function() {
            var and__3822__auto____14197 = cljs.core.number_QMARK_.call(null, A);
            if(and__3822__auto____14197) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____14197
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._STAR_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
          }else {
            if(function() {
              var and__3822__auto____14198 = cljs.core.coll_QMARK_.call(null, A);
              if(and__3822__auto____14198) {
                return cljs.core.number_QMARK_.call(null, B)
              }else {
                return and__3822__auto____14198
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._STAR_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
            }else {
              return null
            }
          }
        }
      }
    }, args)
  };
  var mul = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return mul__delegate.call(this, args)
  };
  mul.cljs$lang$maxFixedArity = 0;
  mul.cljs$lang$applyTo = function(arglist__14199) {
    var args = cljs.core.seq(arglist__14199);
    return mul__delegate(args)
  };
  mul.cljs$lang$arity$variadic = mul__delegate;
  return mul
}();
c2.maths.div = function() {
  var div__delegate = function(args) {
    if(cljs.core._EQ_.call(null, cljs.core.count.call(null, args), 1)) {
      if(function() {
        var and__3822__auto____14208 = cljs.core.number_QMARK_.call(null, 1);
        if(and__3822__auto____14208) {
          return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
        }else {
          return and__3822__auto____14208
        }
      }()) {
        return 1 / cljs.core.first.call(null, args)
      }else {
        if(function() {
          var and__3822__auto____14209 = cljs.core.coll_QMARK_.call(null, 1);
          if(and__3822__auto____14209) {
            return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
          }else {
            return and__3822__auto____14209
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._SLASH_, 1, cljs.core.first.call(null, args))
        }else {
          if(function() {
            var and__3822__auto____14210 = cljs.core.number_QMARK_.call(null, 1);
            if(and__3822__auto____14210) {
              return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
            }else {
              return and__3822__auto____14210
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._SLASH_, cljs.core.replicate.call(null, cljs.core.count.call(null, cljs.core.first.call(null, args)), 1), cljs.core.first.call(null, args))
          }else {
            if(function() {
              var and__3822__auto____14211 = cljs.core.coll_QMARK_.call(null, 1);
              if(and__3822__auto____14211) {
                return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
              }else {
                return and__3822__auto____14211
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._SLASH_, 1, cljs.core.replicate.call(null, cljs.core.count.call(null, 1), cljs.core.first.call(null, args)))
            }else {
              return null
            }
          }
        }
      }
    }else {
      return cljs.core.reduce.call(null, function(A, B) {
        if(function() {
          var and__3822__auto____14212 = cljs.core.number_QMARK_.call(null, A);
          if(and__3822__auto____14212) {
            return cljs.core.number_QMARK_.call(null, B)
          }else {
            return and__3822__auto____14212
          }
        }()) {
          return A / B
        }else {
          if(function() {
            var and__3822__auto____14213 = cljs.core.coll_QMARK_.call(null, A);
            if(and__3822__auto____14213) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3822__auto____14213
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._SLASH_, A, B)
          }else {
            if(function() {
              var and__3822__auto____14214 = cljs.core.number_QMARK_.call(null, A);
              if(and__3822__auto____14214) {
                return cljs.core.coll_QMARK_.call(null, B)
              }else {
                return and__3822__auto____14214
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._SLASH_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
            }else {
              if(function() {
                var and__3822__auto____14215 = cljs.core.coll_QMARK_.call(null, A);
                if(and__3822__auto____14215) {
                  return cljs.core.number_QMARK_.call(null, B)
                }else {
                  return and__3822__auto____14215
                }
              }()) {
                return cljs.core.map.call(null, cljs.core._SLASH_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
              }else {
                return null
              }
            }
          }
        }
      }, args)
    }
  };
  var div = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return div__delegate.call(this, args)
  };
  div.cljs$lang$maxFixedArity = 0;
  div.cljs$lang$applyTo = function(arglist__14216) {
    var args = cljs.core.seq(arglist__14216);
    return div__delegate(args)
  };
  div.cljs$lang$arity$variadic = div__delegate;
  return div
}();
c2.maths.quantile = function() {
  var quantile__delegate = function(data, p__14217) {
    var map__14239__14240 = p__14217;
    var map__14239__14241 = cljs.core.seq_QMARK_.call(null, map__14239__14240) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14239__14240) : map__14239__14240;
    var probs__14242 = cljs.core._lookup.call(null, map__14239__14241, "\ufdd0'probs", cljs.core.PersistentVector.fromArray([0, 0.25, 0.5, 0.75, 1], true));
    var xs__14243 = cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.sort.call(null, data));
    var n_1__14244 = cljs.core.count.call(null, xs__14243) - 1;
    var iter__2458__auto____14259 = function iter__14245(s__14246) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__14246__14253 = s__14246;
        while(true) {
          if(cljs.core.seq.call(null, s__14246__14253)) {
            var q__14254 = cljs.core.first.call(null, s__14246__14253);
            return cljs.core.cons.call(null, function() {
              var index__14255 = q__14254 * n_1__14244 + 1;
              var lo__14256 = cljs.core.int$.call(null, c2.maths.floor.call(null, index__14255));
              var h__14257 = index__14255 - lo__14256;
              var a__14258 = xs__14243.call(null, lo__14256 - 1);
              if(cljs.core._EQ_.call(null, h__14257, 0)) {
                return a__14258
              }else {
                return a__14258 + h__14257 * (xs__14243.call(null, lo__14256) - a__14258)
              }
            }(), iter__14245.call(null, cljs.core.rest.call(null, s__14246__14253)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2458__auto____14259.call(null, probs__14242)
  };
  var quantile = function(data, var_args) {
    var p__14217 = null;
    if(goog.isDef(var_args)) {
      p__14217 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return quantile__delegate.call(this, data, p__14217)
  };
  quantile.cljs$lang$maxFixedArity = 1;
  quantile.cljs$lang$applyTo = function(arglist__14260) {
    var data = cljs.core.first(arglist__14260);
    var p__14217 = cljs.core.rest(arglist__14260);
    return quantile__delegate(data, p__14217)
  };
  quantile.cljs$lang$arity$variadic = quantile__delegate;
  return quantile
}();
goog.provide("c2.svg");
goog.require("cljs.core");
goog.require("c2.core");
goog.require("c2.maths");
goog.require("c2.dom");
goog.require("c2.maths");
goog.require("c2.core");
c2.svg.__GT_xy = function __GT_xy(coordinates) {
  try {
    if(cljs.core.vector_QMARK_.call(null, coordinates)) {
      try {
        if(function() {
          var and__3822__auto____13955 = cljs.core.vector_QMARK_.call(null, coordinates);
          if(and__3822__auto____13955) {
            return cljs.core._EQ_.call(null, cljs.core.count.call(null, coordinates), 2)
          }else {
            return and__3822__auto____13955
          }
        }()) {
          var x__13956 = cljs.core.nth.call(null, coordinates, 0);
          var y__13957 = cljs.core.nth.call(null, coordinates, 1);
          return cljs.core.PersistentVector.fromArray([x__13956, y__13957], true)
        }else {
          if("\ufdd0'else") {
            throw 0;
          }else {
            return null
          }
        }
      }catch(e__7242__auto__) {
        if(e__7242__auto__ === 0) {
          throw 0;
        }else {
          throw e__7242__auto__;
        }
      }
    }else {
      if(function() {
        var G__13958__13959 = coordinates;
        if(G__13958__13959) {
          if(function() {
            var or__3824__auto____13960 = G__13958__13959.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3824__auto____13960) {
              return or__3824__auto____13960
            }else {
              return G__13958__13959.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__13958__13959.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__13958__13959)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__13958__13959)
        }
      }()) {
        var y__13962 = function() {
          var val__6809__auto____13961 = cljs.core._lookup.call(null, coordinates, "\ufdd0'y", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6809__auto____13961, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6809__auto____13961
          }
        }();
        var x__13964 = function() {
          var val__6809__auto____13963 = cljs.core._lookup.call(null, coordinates, "\ufdd0'x", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6809__auto____13963, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6809__auto____13963
          }
        }();
        return cljs.core.PersistentVector.fromArray([x__13964, y__13962], true)
      }else {
        if("\ufdd0'else") {
          throw 0;
        }else {
          return null
        }
      }
    }
  }catch(e__7242__auto__) {
    if(e__7242__auto__ === 0) {
      var G__13947__13953 = coordinates;
      return null
    }else {
      throw e__7242__auto__;
    }
  }
};
c2.svg.translate = function translate(coordinates) {
  var vec__13969__13970 = c2.svg.__GT_xy.call(null, coordinates);
  var x__13971 = cljs.core.nth.call(null, vec__13969__13970, 0, null);
  var y__13972 = cljs.core.nth.call(null, vec__13969__13970, 1, null);
  return[cljs.core.str("translate("), cljs.core.str(x__13971), cljs.core.str(","), cljs.core.str(y__13972), cljs.core.str(")")].join("")
};
c2.svg.scale = function scale(coordinates) {
  while(true) {
    if(cljs.core.vector_QMARK_.call(null, coordinates)) {
      if(function() {
        var and__3822__auto____13994 = cljs.core.vector_QMARK_.call(null, coordinates);
        if(and__3822__auto____13994) {
          return cljs.core._EQ_.call(null, cljs.core.count.call(null, coordinates), 2)
        }else {
          return and__3822__auto____13994
        }
      }()) {
        var x__13995 = cljs.core.nth.call(null, coordinates, 0);
        var y__13996 = cljs.core.nth.call(null, coordinates, 1);
        return[cljs.core.str("scale("), cljs.core.str(x__13995), cljs.core.str(","), cljs.core.str(y__13996), cljs.core.str(")")].join("")
      }else {
        if("\ufdd0'else") {
          throw new java.lang.Exception([cljs.core.str("No match found. "), cljs.core.str("Followed "), cljs.core.str(1), cljs.core.str(" branches."), cljs.core.str(" Breadcrumbs: "), cljs.core.str(cljs.core.vec([cljs.core.list("\ufdd1'clojure.core/vector?", "\ufdd1'coordinates")]))].join(""));
        }else {
          return null
        }
      }
    }else {
      if(function() {
        var G__13997__13998 = coordinates;
        if(G__13997__13998) {
          if(function() {
            var or__3824__auto____13999 = G__13997__13998.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3824__auto____13999) {
              return or__3824__auto____13999
            }else {
              return G__13997__13998.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__13997__13998.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__13997__13998)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__13997__13998)
        }
      }()) {
        var y__14001 = function() {
          var val__6809__auto____14000 = cljs.core._lookup.call(null, coordinates, "\ufdd0'y", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6809__auto____14000, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6809__auto____14000
          }
        }();
        var x__14003 = function() {
          var val__6809__auto____14002 = cljs.core._lookup.call(null, coordinates, "\ufdd0'x", "\ufdd0'clojure.core.match/not-found");
          if(cljs.core._EQ_.call(null, val__6809__auto____14002, "\ufdd0'clojure.core.match/not-found")) {
            throw 0;
          }else {
            return val__6809__auto____14002
          }
        }();
        var G__14005 = cljs.core.PersistentVector.fromArray([x__14003, y__14001], true);
        coordinates = G__14005;
        continue
      }else {
        if("\ufdd0'else") {
          var s__14004 = coordinates;
          return[cljs.core.str("scale("), cljs.core.str(s__14004), cljs.core.str(")")].join("")
        }else {
          return null
        }
      }
    }
    break
  }
};
c2.svg.rotate = function() {
  var rotate = null;
  var rotate__1 = function(angle) {
    return rotate.call(null, angle, cljs.core.PersistentVector.fromArray([0, 0], true))
  };
  var rotate__2 = function(angle, coordinates) {
    var vec__14010__14011 = c2.svg.__GT_xy.call(null, coordinates);
    var x__14012 = cljs.core.nth.call(null, vec__14010__14011, 0, null);
    var y__14013 = cljs.core.nth.call(null, vec__14010__14011, 1, null);
    return[cljs.core.str("rotate("), cljs.core.str(angle), cljs.core.str(","), cljs.core.str(x__14012), cljs.core.str(","), cljs.core.str(y__14013), cljs.core.str(")")].join("")
  };
  rotate = function(angle, coordinates) {
    switch(arguments.length) {
      case 1:
        return rotate__1.call(this, angle);
      case 2:
        return rotate__2.call(this, angle, coordinates)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rotate.cljs$lang$arity$1 = rotate__1;
  rotate.cljs$lang$arity$2 = rotate__2;
  return rotate
}();
c2.svg.get_bounds = function get_bounds($svg_el) {
  var b__14015 = $svg_el.getBBox();
  return cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'y", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":b__14015.x, "\ufdd0'y":b__14015.y, "\ufdd0'width":b__14015.width, "\ufdd0'height":b__14015.height})
};
c2.svg.transform_to_center = function transform_to_center(element, container) {
  var map__14029__14031 = element;
  var map__14029__14032 = cljs.core.seq_QMARK_.call(null, map__14029__14031) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14029__14031) : map__14029__14031;
  var ew__14033 = cljs.core._lookup.call(null, map__14029__14032, "\ufdd0'width", null);
  var eh__14034 = cljs.core._lookup.call(null, map__14029__14032, "\ufdd0'height", null);
  var x__14035 = cljs.core._lookup.call(null, map__14029__14032, "\ufdd0'x", null);
  var y__14036 = cljs.core._lookup.call(null, map__14029__14032, "\ufdd0'y", null);
  var map__14030__14037 = container;
  var map__14030__14038 = cljs.core.seq_QMARK_.call(null, map__14030__14037) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14030__14037) : map__14030__14037;
  var w__14039 = cljs.core._lookup.call(null, map__14030__14038, "\ufdd0'width", null);
  var h__14040 = cljs.core._lookup.call(null, map__14030__14038, "\ufdd0'height", null);
  var s__14041 = h__14040 / eh__14034 < w__14039 / ew__14033 ? h__14040 / eh__14034 : w__14039 / ew__14033;
  return[cljs.core.str(c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([w__14039 / 2 - s__14041 * (ew__14033 / 2), h__14040 / 2 - s__14041 * (eh__14034 / 2)], true))), cljs.core.str(" "), cljs.core.str(c2.svg.scale.call(null, s__14041)), cljs.core.str(" "), cljs.core.str(c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([-x__14035, -y__14036], true)))].join("")
};
c2.svg.transform_to_center_BANG_ = function transform_to_center_BANG_($svg_el) {
  var $svg__14044 = $svg_el.ownerSVGElement;
  var t__14045 = c2.svg.transform_to_center.call(null, c2.svg.get_bounds.call(null, $svg_el), cljs.core.ObjMap.fromObject(["\ufdd0'width", "\ufdd0'height"], {"\ufdd0'width":parseFloat(c2.dom.attr.call(null, $svg__14044, "\ufdd0'width")), "\ufdd0'height":parseFloat(c2.dom.attr.call(null, $svg__14044, "\ufdd0'height"))}));
  return c2.dom.attr.call(null, $svg_el, "\ufdd0'transform", t__14045)
};
c2.svg.axis = function() {
  var axis__delegate = function(scale, ticks, p__14046) {
    var map__14071__14072 = p__14046;
    var map__14071__14073 = cljs.core.seq_QMARK_.call(null, map__14071__14072) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14071__14072) : map__14071__14072;
    var label_margin__14074 = cljs.core._lookup.call(null, map__14071__14073, "\ufdd0'label-margin", 28);
    var label__14075 = cljs.core._lookup.call(null, map__14071__14073, "\ufdd0'label", null);
    var text_margin__14076 = cljs.core._lookup.call(null, map__14071__14073, "\ufdd0'text-margin", 9);
    var major_tick_width__14077 = cljs.core._lookup.call(null, map__14071__14073, "\ufdd0'major-tick-width", 6);
    var formatter__14078 = cljs.core._lookup.call(null, map__14071__14073, "\ufdd0'formatter", cljs.core.str);
    var orientation__14079 = cljs.core._lookup.call(null, map__14071__14073, "\ufdd0'orientation", "\ufdd0'left");
    var vec__14080__14083 = function() {
      var G__14081__14082 = orientation__14079;
      if(cljs.core._EQ_.call(null, "\ufdd0'bottom", G__14081__14082)) {
        return cljs.core.PersistentVector.fromArray(["\ufdd0'y", "\ufdd0'x", "\ufdd0'y1", "\ufdd0'y2", "\ufdd0'x1", "\ufdd0'x2"], true)
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'top", G__14081__14082)) {
          return cljs.core.PersistentVector.fromArray(["\ufdd0'y", "\ufdd0'x", "\ufdd0'y1", "\ufdd0'y2", "\ufdd0'x1", "\ufdd0'x2"], true)
        }else {
          if(cljs.core._EQ_.call(null, "\ufdd0'right", G__14081__14082)) {
            return cljs.core.PersistentVector.fromArray(["\ufdd0'x", "\ufdd0'y", "\ufdd0'x1", "\ufdd0'x2", "\ufdd0'y1", "\ufdd0'y2"], true)
          }else {
            if(cljs.core._EQ_.call(null, "\ufdd0'left", G__14081__14082)) {
              return cljs.core.PersistentVector.fromArray(["\ufdd0'x", "\ufdd0'y", "\ufdd0'x1", "\ufdd0'x2", "\ufdd0'y1", "\ufdd0'y2"], true)
            }else {
              if("\ufdd0'else") {
                throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(orientation__14079)].join(""));
              }else {
                return null
              }
            }
          }
        }
      }
    }();
    var x__14084 = cljs.core.nth.call(null, vec__14080__14083, 0, null);
    var y__14085 = cljs.core.nth.call(null, vec__14080__14083, 1, null);
    var x1__14086 = cljs.core.nth.call(null, vec__14080__14083, 2, null);
    var x2__14087 = cljs.core.nth.call(null, vec__14080__14083, 3, null);
    var y1__14088 = cljs.core.nth.call(null, vec__14080__14083, 4, null);
    var y2__14089 = cljs.core.nth.call(null, vec__14080__14083, 5, null);
    var parity__14092 = function() {
      var G__14090__14091 = orientation__14079;
      if(cljs.core._EQ_.call(null, "\ufdd0'bottom", G__14090__14091)) {
        return 1
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'right", G__14090__14091)) {
          return 1
        }else {
          if(cljs.core._EQ_.call(null, "\ufdd0'top", G__14090__14091)) {
            return-1
          }else {
            if(cljs.core._EQ_.call(null, "\ufdd0'left", G__14090__14091)) {
              return-1
            }else {
              if("\ufdd0'else") {
                throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(orientation__14079)].join(""));
              }else {
                return null
              }
            }
          }
        }
      }
    }();
    return cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.ObjMap.fromObject(["\ufdd0'class"], {"\ufdd0'class":[cljs.core.str("axis "), cljs.core.str(cljs.core.name.call(null, orientation__14079))].join("")}), cljs.core.PersistentVector.fromArray(["\ufdd0'line.rule", cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.interleave.call(null, cljs.core.PersistentVector.fromArray([y1__14088, y2__14089], true), (new cljs.core.Keyword("\ufdd0'range")).call(null, scale)))], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.ticks", 
    c2.core.unify.call(null, ticks, function(d) {
      return cljs.core.PersistentVector.fromArray(["\ufdd0'g.tick.major-tick", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentArrayMap.fromArrays([x__14084, y__14085], [0, scale.call(null, d)]))}), cljs.core.PersistentVector.fromArray(["\ufdd0'text", cljs.core.PersistentArrayMap.fromArrays([x__14084], [parity__14092 * text_margin__14076]), formatter__14078.call(null, d)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'line", 
      cljs.core.PersistentArrayMap.fromArrays([x1__14086, x2__14087], [0, parity__14092 * major_tick_width__14077])], true)], true)
    })], true), cljs.core.truth_(label__14075) ? cljs.core.PersistentVector.fromArray(["\ufdd0'text.label", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":[cljs.core.str(c2.svg.translate.call(null, cljs.core.PersistentArrayMap.fromArrays([x__14084, y__14085], [parity__14092 * label_margin__14074, c2.maths.mean.call(null, (new cljs.core.Keyword("\ufdd0'range")).call(null, scale))]))), cljs.core.str(" "), cljs.core.str(function() {
      var G__14093__14094 = orientation__14079;
      if(cljs.core._EQ_.call(null, "\ufdd0'right", G__14093__14094)) {
        return c2.svg.rotate.call(null, 90)
      }else {
        if(cljs.core._EQ_.call(null, "\ufdd0'left", G__14093__14094)) {
          return c2.svg.rotate.call(null, -90)
        }else {
          if("\ufdd0'else") {
            return""
          }else {
            return null
          }
        }
      }
    }())].join("")}), label__14075], true) : null], true)
  };
  var axis = function(scale, ticks, var_args) {
    var p__14046 = null;
    if(goog.isDef(var_args)) {
      p__14046 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return axis__delegate.call(this, scale, ticks, p__14046)
  };
  axis.cljs$lang$maxFixedArity = 2;
  axis.cljs$lang$applyTo = function(arglist__14095) {
    var scale = cljs.core.first(arglist__14095);
    var ticks = cljs.core.first(cljs.core.next(arglist__14095));
    var p__14046 = cljs.core.rest(cljs.core.next(arglist__14095));
    return axis__delegate(scale, ticks, p__14046)
  };
  axis.cljs$lang$arity$variadic = axis__delegate;
  return axis
}();
c2.svg.ArcMax = c2.maths.Tau - 1.0E-7;
c2.svg.circle = function() {
  var circle = null;
  var circle__1 = function(radius) {
    return circle.call(null, cljs.core.PersistentVector.fromArray([0, 0], true), radius)
  };
  var circle__2 = function(coordinates, radius) {
    var vec__14100__14101 = c2.svg.__GT_xy.call(null, coordinates);
    var x__14102 = cljs.core.nth.call(null, vec__14100__14101, 0, null);
    var y__14103 = cljs.core.nth.call(null, vec__14100__14101, 1, null);
    return[cljs.core.str("M"), cljs.core.str(x__14102 + radius), cljs.core.str(","), cljs.core.str(y__14103), cljs.core.str("A"), cljs.core.str(x__14102 + radius), cljs.core.str(","), cljs.core.str(y__14103 + radius), cljs.core.str(" 0 1,1"), cljs.core.str(-(x__14102 + radius)), cljs.core.str(","), cljs.core.str(y__14103), cljs.core.str("A"), cljs.core.str(x__14102 + radius), cljs.core.str(","), cljs.core.str(y__14103 + radius), cljs.core.str(" 0 1,1"), cljs.core.str(x__14102 + radius), cljs.core.str(","), 
    cljs.core.str(y__14103)].join("")
  };
  circle = function(coordinates, radius) {
    switch(arguments.length) {
      case 1:
        return circle__1.call(this, coordinates);
      case 2:
        return circle__2.call(this, coordinates, radius)
    }
    throw"Invalid arity: " + arguments.length;
  };
  circle.cljs$lang$arity$1 = circle__1;
  circle.cljs$lang$arity$2 = circle__2;
  return circle
}();
c2.svg.arc = function() {
  var arc__delegate = function(p__14104) {
    var map__14125__14126 = p__14104;
    var map__14125__14127 = cljs.core.seq_QMARK_.call(null, map__14125__14126) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14125__14126) : map__14125__14126;
    var angle_offset__14128 = cljs.core._lookup.call(null, map__14125__14127, "\ufdd0'angle-offset", 0);
    var end_angle__14129 = cljs.core._lookup.call(null, map__14125__14127, "\ufdd0'end-angle", c2.maths.Pi);
    var start_angle__14130 = cljs.core._lookup.call(null, map__14125__14127, "\ufdd0'start-angle", 0);
    var outer_radius__14131 = cljs.core._lookup.call(null, map__14125__14127, "\ufdd0'outer-radius", 1);
    var inner_radius__14132 = cljs.core._lookup.call(null, map__14125__14127, "\ufdd0'inner-radius", 0);
    var r0__14134 = inner_radius__14132;
    var r1__14135 = outer_radius__14131;
    var vec__14133__14136 = cljs.core.sort.call(null, cljs.core.PersistentVector.fromArray([angle_offset__14128 + start_angle__14130, angle_offset__14128 + end_angle__14129], true));
    var a0__14137 = cljs.core.nth.call(null, vec__14133__14136, 0, null);
    var a1__14138 = cljs.core.nth.call(null, vec__14133__14136, 1, null);
    var da__14139 = a1__14138 - a0__14137;
    var large_arc_flag__14140 = da__14139 < c2.maths.Pi ? "0" : "1";
    var s0__14141 = c2.maths.sin.call(null, a0__14137);
    var c0__14142 = c2.maths.cos.call(null, a0__14137);
    var s1__14143 = c2.maths.sin.call(null, a1__14138);
    var c1__14144 = c2.maths.cos.call(null, a1__14138);
    if(da__14139 >= c2.svg.ArcMax) {
      return[cljs.core.str("M0,"), cljs.core.str(r1__14135), cljs.core.str("A"), cljs.core.str(r1__14135), cljs.core.str(","), cljs.core.str(r1__14135), cljs.core.str(" 0 1,1 0,"), cljs.core.str(-r1__14135), cljs.core.str("A"), cljs.core.str(r1__14135), cljs.core.str(","), cljs.core.str(r1__14135), cljs.core.str(" 0 1,1 0,"), cljs.core.str(r1__14135), cljs.core.str(cljs.core.not_EQ_.call(null, 0, r0__14134) ? [cljs.core.str("M0,"), cljs.core.str(r0__14134), cljs.core.str("A"), cljs.core.str(r0__14134), 
      cljs.core.str(","), cljs.core.str(r0__14134), cljs.core.str(" 0 1,0 0,"), cljs.core.str(-r0__14134), cljs.core.str("A"), cljs.core.str(r0__14134), cljs.core.str(","), cljs.core.str(r0__14134), cljs.core.str(" 0 1,0 0,"), cljs.core.str(r0__14134)].join("") : null), cljs.core.str("Z")].join("")
    }else {
      return[cljs.core.str("M"), cljs.core.str(r1__14135 * c0__14142), cljs.core.str(","), cljs.core.str(r1__14135 * s0__14141), cljs.core.str("A"), cljs.core.str(r1__14135), cljs.core.str(","), cljs.core.str(r1__14135), cljs.core.str(" 0 "), cljs.core.str(large_arc_flag__14140), cljs.core.str(",1 "), cljs.core.str(r1__14135 * c1__14144), cljs.core.str(","), cljs.core.str(r1__14135 * s1__14143), cljs.core.str(cljs.core.not_EQ_.call(null, 0, r0__14134) ? [cljs.core.str("L"), cljs.core.str(r0__14134 * 
      c1__14144), cljs.core.str(","), cljs.core.str(r0__14134 * s1__14143), cljs.core.str("A"), cljs.core.str(r0__14134), cljs.core.str(","), cljs.core.str(r0__14134), cljs.core.str(" 0 "), cljs.core.str(large_arc_flag__14140), cljs.core.str(",0 "), cljs.core.str(r0__14134 * c0__14142), cljs.core.str(","), cljs.core.str(r0__14134 * s0__14141)].join("") : "L0,0"), cljs.core.str("Z")].join("")
    }
  };
  var arc = function(var_args) {
    var p__14104 = null;
    if(goog.isDef(var_args)) {
      p__14104 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return arc__delegate.call(this, p__14104)
  };
  arc.cljs$lang$maxFixedArity = 0;
  arc.cljs$lang$applyTo = function(arglist__14145) {
    var p__14104 = cljs.core.seq(arglist__14145);
    return arc__delegate(p__14104)
  };
  arc.cljs$lang$arity$variadic = arc__delegate;
  return arc
}();
goog.provide("c2.layout.partition");
goog.require("cljs.core");
c2.layout.partition.partition = function() {
  var partition__delegate = function(root, p__14302) {
    var map__14331__14332 = p__14302;
    var map__14331__14333 = cljs.core.seq_QMARK_.call(null, map__14331__14332) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14331__14332) : map__14331__14332;
    var output_key__14334 = cljs.core._lookup.call(null, map__14331__14333, "\ufdd0'output-key", "\ufdd0'partition");
    var size__14335 = cljs.core._lookup.call(null, map__14331__14333, "\ufdd0'size", cljs.core.PersistentVector.fromArray([1, 1], true));
    var value__14336 = cljs.core._lookup.call(null, map__14331__14333, "\ufdd0'value", "\ufdd0'value");
    var children__14337 = cljs.core._lookup.call(null, map__14331__14333, "\ufdd0'children", "\ufdd0'children");
    c2.layout.partition.depth = function depth(node) {
      return function() {
        var temp__3971__auto____14340 = children__14337.call(null, node);
        if(cljs.core.truth_(temp__3971__auto____14340)) {
          var cs__14341 = temp__3971__auto____14340;
          return cljs.core.apply.call(null, cljs.core.max, cljs.core.map.call(null, depth, cs__14341))
        }else {
          return 0
        }
      }() + 1
    };
    c2.layout.partition.node_value = function node_value(node) {
      var temp__3971__auto____14344 = children__14337.call(null, node);
      if(cljs.core.truth_(temp__3971__auto____14344)) {
        var cs__14345 = temp__3971__auto____14344;
        return cljs.core.apply.call(null, cljs.core._PLUS_, cljs.core.map.call(null, node_value, cs__14345))
      }else {
        return value__14336.call(null, node)
      }
    };
    c2.layout.partition.position = function position(node, depth, x, p__14346) {
      var vec__14353__14354 = p__14346;
      var dx__14355 = cljs.core.nth.call(null, vec__14353__14354, 0, null);
      var dy__14356 = cljs.core.nth.call(null, vec__14353__14354, 1, null);
      return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.assoc.call(null, node, output_key__14334, cljs.core.merge.call(null, output_key__14334.call(null, node), cljs.core.ObjMap.fromObject(["\ufdd0'depth", "\ufdd0'value", "\ufdd0'x", "\ufdd0'y", "\ufdd0'dx", "\ufdd0'dy"], {"\ufdd0'depth":depth, "\ufdd0'value":c2.layout.partition.node_value.call(null, node), "\ufdd0'x":x, "\ufdd0'y":depth * dy__14356, "\ufdd0'dx":dx__14355, "\ufdd0'dy":dy__14356})))], true), function() {
        var unit_cdx__14357 = dx__14355 / c2.layout.partition.node_value.call(null, node);
        var cs__14358 = children__14337.call(null, node);
        return cljs.core.flatten.call(null, cljs.core.map.call(null, function(child, cx) {
          return position.call(null, child, depth + 1, cx, cljs.core.PersistentVector.fromArray([unit_cdx__14357 * c2.layout.partition.node_value.call(null, child), dy__14356], true))
        }, cs__14358, cljs.core.reductions.call(null, function(cx, child) {
          return cx + unit_cdx__14357 * c2.layout.partition.node_value.call(null, child)
        }, x, cs__14358)))
      }())
    };
    return c2.layout.partition.position.call(null, root, 0, 0, cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, size__14335), cljs.core.second.call(null, size__14335) / c2.layout.partition.depth.call(null, root)], true))
  };
  var partition = function(root, var_args) {
    var p__14302 = null;
    if(goog.isDef(var_args)) {
      p__14302 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return partition__delegate.call(this, root, p__14302)
  };
  partition.cljs$lang$maxFixedArity = 1;
  partition.cljs$lang$applyTo = function(arglist__14359) {
    var root = cljs.core.first(arglist__14359);
    var p__14302 = cljs.core.rest(arglist__14359);
    return partition__delegate(root, p__14302)
  };
  partition.cljs$lang$arity$variadic = partition__delegate;
  return partition
}();
goog.provide("c2_cljs_examples.space_pie");
goog.require("cljs.core");
goog.require("c2.layout.partition");
goog.require("c2.maths");
goog.require("c2.maths");
goog.require("c2.layout.partition");
goog.require("clojure.string");
goog.require("c2.svg");
goog.require("c2.event");
goog.require("c2.core");
c2_cljs_examples.space_pie.deg = function deg(rad) {
  return rad / c2.maths.Tau * 360
};
c2_cljs_examples.space_pie.title_case = function title_case(s) {
  return clojure.string.join.call(null, " ", cljs.core.map.call(null, clojure.string.capitalize, clojure.string.split.call(null, clojure.string.replace.call(null, s, "-", " "), / /)))
};
c2_cljs_examples.space_pie.keyword__GT_css_class = function keyword__GT_css_class(s) {
  return s.replace("'", "")
};
c2_cljs_examples.space_pie.color__GT_css = function color__GT_css(p__349023) {
  var vec__349028__349029 = p__349023;
  var entity__349030 = cljs.core.nth.call(null, vec__349028__349029, 0, null);
  var color__349031 = cljs.core.nth.call(null, vec__349028__349029, 1, null);
  return[cljs.core.str("."), cljs.core.str(c2_cljs_examples.space_pie.keyword__GT_css_class.call(null, cljs.core.name.call(null, entity__349030))), cljs.core.str(" {fill: "), cljs.core.str(cljs.core.name.call(null, color__349031)), cljs.core.str("}")].join("")
};
c2_cljs_examples.space_pie.colors__GT_css = function colors__GT_css(colors) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, c2_cljs_examples.space_pie.color__GT_css, colors))
};
c2_cljs_examples.space_pie.the_palette = cljs.core.ObjMap.fromObject(["\ufdd0'white", "\ufdd0'orange", "\ufdd0'teal", "\ufdd0'grey", "\ufdd0'purple", "\ufdd0'blue", "\ufdd0'green", "\ufdd0'pink", "\ufdd0'yellow"], {"\ufdd0'white":cljs.core.ObjMap.fromObject(["\ufdd0'base"], {"\ufdd0'base":"#dbdbdb"}), "\ufdd0'orange":cljs.core.ObjMap.fromObject(["\ufdd0'base", "\ufdd0'dark"], {"\ufdd0'base":"#d95f02", "\ufdd0'dark":"#923700"}), "\ufdd0'teal":cljs.core.ObjMap.fromObject(["\ufdd0'base"], {"\ufdd0'base":"#1b9e77"}), 
"\ufdd0'grey":cljs.core.ObjMap.fromObject(["\ufdd0'dark", "\ufdd0'light"], {"\ufdd0'dark":"#606060", "\ufdd0'light":"#999999"}), "\ufdd0'purple":cljs.core.ObjMap.fromObject(["\ufdd0'base", "\ufdd0'dark", "\ufdd0'darkest"], {"\ufdd0'base":"#7570b3", "\ufdd0'dark":"#36298d", "\ufdd0'darkest":"#2f0058"}), "\ufdd0'blue":cljs.core.ObjMap.fromObject(["\ufdd0'base", "\ufdd0'light"], {"\ufdd0'base":"#174d69", "\ufdd0'light":"#2a86d2"}), "\ufdd0'green":cljs.core.ObjMap.fromObject(["\ufdd0'base", "\ufdd0'dark"], 
{"\ufdd0'base":"#66a61e", "\ufdd0'dark":"#376b00"}), "\ufdd0'pink":cljs.core.ObjMap.fromObject(["\ufdd0'base", "\ufdd0'dark"], {"\ufdd0'base":"#e7298a", "\ufdd0'dark":"#97004f"}), "\ufdd0'yellow":cljs.core.ObjMap.fromObject(["\ufdd0'base", "\ufdd0'dark"], {"\ufdd0'base":"#e6ab02", "\ufdd0'dark":"#a47400"})});
c2_cljs_examples.space_pie.palette = function() {
  var palette = null;
  var palette__1 = function(color) {
    return palette.call(null, "\ufdd0'base", color)
  };
  var palette__2 = function(modifier, color) {
    if(cljs.core.contains_QMARK_.call(null, c2_cljs_examples.space_pie.the_palette, color)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'contains?", "\ufdd1'the-palette", "\ufdd1'color"), cljs.core.hash_map("\ufdd0'line", 70))))].join(""));
    }
    if(cljs.core.contains_QMARK_.call(null, color.call(null, c2_cljs_examples.space_pie.the_palette), modifier)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'contains?", cljs.core.with_meta(cljs.core.list("\ufdd1'color", "\ufdd1'the-palette"), cljs.core.hash_map("\ufdd0'line", 71)), "\ufdd1'modifier"), cljs.core.hash_map("\ufdd0'line", 71))))].join(""));
    }
    return cljs.core.get_in.call(null, c2_cljs_examples.space_pie.the_palette, cljs.core.PersistentVector.fromArray([color, modifier], true))
  };
  palette = function(modifier, color) {
    switch(arguments.length) {
      case 1:
        return palette__1.call(this, modifier);
      case 2:
        return palette__2.call(this, modifier, color)
    }
    throw"Invalid arity: " + arguments.length;
  };
  palette.cljs$lang$arity$1 = palette__1;
  palette.cljs$lang$arity$2 = palette__2;
  return palette
}();
c2_cljs_examples.space_pie.stars = cljs.core.ObjMap.fromObject(["\ufdd0'the-sun"], {"\ufdd0'the-sun":1.9884E30});
c2_cljs_examples.space_pie.planets = cljs.core.ObjMap.fromObject(["\ufdd0'mercury", "\ufdd0'venus", "\ufdd0'earth", "\ufdd0'mars", "\ufdd0'jupiter", "\ufdd0'saturn", "\ufdd0'uranus", "\ufdd0'neptune"], {"\ufdd0'mercury":3.301E23, "\ufdd0'venus":4.867E24, "\ufdd0'earth":5.972E24, "\ufdd0'mars":6.419E23, "\ufdd0'jupiter":1.899E27, "\ufdd0'saturn":5.685E26, "\ufdd0'uranus":8.682E25, "\ufdd0'neptune":1.0239999999999999E26});
c2_cljs_examples.space_pie.other_bodies = cljs.core.ObjMap.fromObject(["\ufdd0'eris", "\ufdd0'haumea", "\ufdd0'makemake", "\ufdd0'earth's-moon", "\ufdd0'titan", "\ufdd0'pluto", "\ufdd0'ganymede", "\ufdd0'iapetus", "\ufdd0'callisto", "\ufdd0'quaoar", "\ufdd0'europa", "\ufdd0'rhea", "\ufdd0'oberon", "\ufdd0'triton", "\ufdd0'io", "\ufdd0'titania"], {"\ufdd0'eris":1.6700000000000001E22, "\ufdd0'haumea":4.006E21, "\ufdd0'makemake":3.0E21, "\ufdd0'earth's-moon":7.35E22, "\ufdd0'titan":1.345E23, "\ufdd0'pluto":1.471E22, 
"\ufdd0'ganymede":1.482E23, "\ufdd0'iapetus":1.937E21, "\ufdd0'callisto":1.076E23, "\ufdd0'quaoar":1.6E21, "\ufdd0'europa":4.8E22, "\ufdd0'rhea":2.3166E21, "\ufdd0'oberon":3.014E21, "\ufdd0'triton":2.15E22, "\ufdd0'io":8.93E22, "\ufdd0'titania":3.526E21});
c2_cljs_examples.space_pie.sum_mass = function sum_mass(mass_map) {
  return cljs.core.apply.call(null, cljs.core._PLUS_, cljs.core.vals.call(null, mass_map))
};
c2_cljs_examples.space_pie.format_data = function format_data(m) {
  var iter__2458__auto____349057 = function iter__349045(s__349046) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__349046__349052 = s__349046;
      while(true) {
        if(cljs.core.seq.call(null, s__349046__349052)) {
          var vec__349053__349054 = cljs.core.first.call(null, s__349046__349052);
          var b__349055 = cljs.core.nth.call(null, vec__349053__349054, 0, null);
          var mass__349056 = cljs.core.nth.call(null, vec__349053__349054, 1, null);
          return cljs.core.cons.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'name", "\ufdd0'mass"], {"\ufdd0'name":cljs.core.name.call(null, b__349055), "\ufdd0'mass":mass__349056}), iter__349045.call(null, cljs.core.rest.call(null, s__349046__349052)))
        }else {
          return null
        }
        break
      }
    }, null)
  };
  return iter__2458__auto____349057.call(null, cljs.core.sort_by.call(null, cljs.core.second, m))
};
c2_cljs_examples.space_pie.summary = cljs.core.ObjMap.fromObject(["\ufdd0'name", "\ufdd0'children", "\ufdd0'colors"], {"\ufdd0'name":"The Solar System by Mass", "\ufdd0'children":c2_cljs_examples.space_pie.format_data.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'the-sun", "\ufdd0'everything-else"], {"\ufdd0'the-sun":(new cljs.core.Keyword("\ufdd0'the-sun")).call(null, c2_cljs_examples.space_pie.stars), "\ufdd0'everything-else":c2_cljs_examples.space_pie.sum_mass.call(null, cljs.core.merge.call(null, 
c2_cljs_examples.space_pie.planets, c2_cljs_examples.space_pie.other_bodies))})), "\ufdd0'colors":cljs.core.ObjMap.fromObject(["\ufdd0'the-sun", "\ufdd0'everything-else"], {"\ufdd0'the-sun":c2_cljs_examples.space_pie.palette.call(null, "\ufdd0'yellow"), "\ufdd0'everything-else":c2_cljs_examples.space_pie.palette.call(null, "\ufdd0'white")})});
c2_cljs_examples.space_pie.no_sun = cljs.core.ObjMap.fromObject(["\ufdd0'name", "\ufdd0'children", "\ufdd0'colors"], {"\ufdd0'name":"Excluding the Sun", "\ufdd0'children":c2_cljs_examples.space_pie.format_data.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, c2_cljs_examples.space_pie.planets, "\ufdd0'mars", "\ufdd0'mercury"), "\ufdd0'all-lesser-bodies", c2_cljs_examples.space_pie.sum_mass.call(null, cljs.core.merge.call(null, cljs.core.select_keys.call(null, c2_cljs_examples.space_pie.planets, 
cljs.core.PersistentVector.fromArray(["\ufdd0'mars", "\ufdd0'mercury"], true)), c2_cljs_examples.space_pie.other_bodies)))), "\ufdd0'colors":cljs.core.ObjMap.fromObject(["\ufdd0'jupiter", "\ufdd0'saturn", "\ufdd0'neptune", "\ufdd0'uranus", "\ufdd0'earth", "\ufdd0'venus", "\ufdd0'all-lesser-bodies"], {"\ufdd0'jupiter":c2_cljs_examples.space_pie.palette.call(null, "\ufdd0'green"), "\ufdd0'saturn":c2_cljs_examples.space_pie.palette.call(null, "\ufdd0'orange"), "\ufdd0'neptune":c2_cljs_examples.space_pie.palette.call(null, 
"\ufdd0'purple"), "\ufdd0'uranus":c2_cljs_examples.space_pie.palette.call(null, "\ufdd0'teal"), "\ufdd0'earth":c2_cljs_examples.space_pie.palette.call(null, "\ufdd0'yellow"), "\ufdd0'venus":c2_cljs_examples.space_pie.palette.call(null, "\ufdd0'pink"), "\ufdd0'all-lesser-bodies":c2_cljs_examples.space_pie.palette.call(null, "\ufdd0'white")})});
c2_cljs_examples.space_pie.no_planets = cljs.core.ObjMap.fromObject(["\ufdd0'name", "\ufdd0'children", "\ufdd0'colors"], {"\ufdd0'name":"Also Excluding Planets", "\ufdd0'children":c2_cljs_examples.space_pie.format_data.call(null, c2_cljs_examples.space_pie.other_bodies), "\ufdd0'colors":cljs.core.ObjMap.fromObject(["\ufdd0'eris", "\ufdd0'haumea", "\ufdd0'makemake", "\ufdd0'earth's-moon", "\ufdd0'titan", "\ufdd0'pluto", "\ufdd0'ganymede", "\ufdd0'iapetus", "\ufdd0'callisto", "\ufdd0'quaoar", "\ufdd0'europa", 
"\ufdd0'rhea", "\ufdd0'oberon", "\ufdd0'triton", "\ufdd0'io", "\ufdd0'titania"], {"\ufdd0'eris":c2_cljs_examples.space_pie.palette.call(null, "\ufdd0'dark", "\ufdd0'orange"), "\ufdd0'haumea":c2_cljs_examples.space_pie.palette.call(null, "\ufdd0'dark", "\ufdd0'pink"), "\ufdd0'makemake":c2_cljs_examples.space_pie.palette.call(null, "\ufdd0'light", "\ufdd0'grey"), "\ufdd0'earth's-moon":c2_cljs_examples.space_pie.palette.call(null, "\ufdd0'yellow"), "\ufdd0'titan":c2_cljs_examples.space_pie.palette.call(null, 
"\ufdd0'orange"), "\ufdd0'pluto":c2_cljs_examples.space_pie.palette.call(null, "\ufdd0'blue"), "\ufdd0'ganymede":c2_cljs_examples.space_pie.palette.call(null, "\ufdd0'purple"), "\ufdd0'iapetus":c2_cljs_examples.space_pie.palette.call(null, "\ufdd0'light", "\ufdd0'blue"), "\ufdd0'callisto":c2_cljs_examples.space_pie.palette.call(null, "\ufdd0'pink"), "\ufdd0'quaoar":c2_cljs_examples.space_pie.palette.call(null, "\ufdd0'dark", "\ufdd0'grey"), "\ufdd0'europa":c2_cljs_examples.space_pie.palette.call(null, 
"\ufdd0'teal"), "\ufdd0'rhea":c2_cljs_examples.space_pie.palette.call(null, "\ufdd0'darkest", "\ufdd0'purple"), "\ufdd0'oberon":c2_cljs_examples.space_pie.palette.call(null, "\ufdd0'dark", "\ufdd0'yellow"), "\ufdd0'triton":c2_cljs_examples.space_pie.palette.call(null, "\ufdd0'dark", "\ufdd0'purple"), "\ufdd0'io":c2_cljs_examples.space_pie.palette.call(null, "\ufdd0'green"), "\ufdd0'titania":c2_cljs_examples.space_pie.palette.call(null, "\ufdd0'dark", "\ufdd0'green")})});
c2_cljs_examples.space_pie.charts = cljs.core.PersistentVector.fromArray([c2_cljs_examples.space_pie.summary, c2_cljs_examples.space_pie.no_sun, c2_cljs_examples.space_pie.no_planets], true);
c2_cljs_examples.space_pie.style = [cljs.core.str("body { background-color: #222222 }"), cljs.core.str("path { fill: #222222; stroke: #dbdbdb; stroke-width: 2px }"), cljs.core.str("rect { stroke: #dbdbdb; stroke-width: 2px }"), cljs.core.str("text { fill: white }"), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, c2_cljs_examples.space_pie.colors__GT_css, cljs.core.map.call(null, "\ufdd0'colors", c2_cljs_examples.space_pie.charts))))].join("");
c2_cljs_examples.space_pie.space_pie = function space_pie() {
  var width__349111 = 840;
  var radius__349112 = 300;
  var margin__349113 = radius__349112 / 10;
  var half_pie__349114 = radius__349112 + margin__349113;
  var pie_width__349115 = 2 * half_pie__349114;
  var title_size__349116 = 48;
  var group_height__349117 = pie_width__349115 + title_size__349116 + 2 * margin__349113;
  var make_slices__349118 = function(dm) {
    return cljs.core.filter.call(null, function(p1__349058_SHARP_) {
      return cljs.core._EQ_.call(null, 1, cljs.core.get_in.call(null, p1__349058_SHARP_, cljs.core.PersistentVector.fromArray(["\ufdd0'partition", "\ufdd0'depth"], true)))
    }, c2.layout.partition.partition.call(null, dm, "\ufdd0'value", "\ufdd0'mass", "\ufdd0'size", cljs.core.PersistentVector.fromArray([c2.maths.Tau, 1], true)))
  };
  var __GT_slice__349130 = function(p__349119) {
    var map__349120__349122 = p__349119;
    var map__349120__349123 = cljs.core.seq_QMARK_.call(null, map__349120__349122) ? cljs.core.apply.call(null, cljs.core.hash_map, map__349120__349122) : map__349120__349122;
    var name__349124 = cljs.core._lookup.call(null, map__349120__349123, "\ufdd0'name", null);
    var mass__349125 = cljs.core._lookup.call(null, map__349120__349123, "\ufdd0'mass", null);
    var map__349121__349126 = cljs.core._lookup.call(null, map__349120__349123, "\ufdd0'partition", null);
    var map__349121__349127 = cljs.core.seq_QMARK_.call(null, map__349121__349126) ? cljs.core.apply.call(null, cljs.core.hash_map, map__349121__349126) : map__349121__349126;
    var dx__349128 = cljs.core._lookup.call(null, map__349121__349127, "\ufdd0'dx", null);
    var x__349129 = cljs.core._lookup.call(null, map__349121__349127, "\ufdd0'x", null);
    return cljs.core.PersistentVector.fromArray(["\ufdd0'g.slice", cljs.core.PersistentVector.fromArray(["\ufdd0'path", cljs.core.ObjMap.fromObject(["\ufdd0'class", "\ufdd0'd"], {"\ufdd0'class":c2_cljs_examples.space_pie.keyword__GT_css_class.call(null, name__349124), "\ufdd0'd":c2.svg.arc.call(null, "\ufdd0'outer-radius", radius__349112, "\ufdd0'start-angle", -1 * x__349129, "\ufdd0'end-angle", -1 * (x__349129 + dx__349128))})], true)], true)
  };
  var __GT_legend__349146 = function(i_max, p__349131) {
    var vec__349132__349134 = p__349131;
    var i__349135 = cljs.core.nth.call(null, vec__349132__349134, 0, null);
    var map__349133__349136 = cljs.core.nth.call(null, vec__349132__349134, 1, null);
    var map__349133__349137 = cljs.core.seq_QMARK_.call(null, map__349133__349136) ? cljs.core.apply.call(null, cljs.core.hash_map, map__349133__349136) : map__349133__349136;
    var name__349138 = cljs.core._lookup.call(null, map__349133__349137, "\ufdd0'name", null);
    var text_size__349140 = 19;
    var vec__349139__349141 = cljs.core.map.call(null, cljs.core.inc, cljs.core.PersistentVector.fromArray([i__349135, i_max], true));
    var i__349142 = cljs.core.nth.call(null, vec__349139__349141, 0, null);
    var i_max__349143 = cljs.core.nth.call(null, vec__349139__349141, 1, null);
    var i__GT_y__349144 = function(i) {
      return i * text_size__349140 * (3 / 2) + text_size__349140
    };
    var y_off__349145 = i__GT_y__349144.call(null, i_max__349143) - i__GT_y__349144.call(null, i__349142);
    return cljs.core.PersistentVector.fromArray(["\ufdd0'g.legend-entry", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([0, y_off__349145], true))}), cljs.core.PersistentVector.fromArray(["\ufdd0'rect", cljs.core.ObjMap.fromObject(["\ufdd0'class", "\ufdd0'width", "\ufdd0'height", "\ufdd0'shape-rendering"], {"\ufdd0'class":c2_cljs_examples.space_pie.keyword__GT_css_class.call(null, name__349138), "\ufdd0'width":text_size__349140, 
    "\ufdd0'height":text_size__349140, "\ufdd0'shape-rendering":"crispEdges"})], true), cljs.core.PersistentVector.fromArray(["\ufdd0'text", cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'y", "\ufdd0'font-size"], {"\ufdd0'x":text_size__349140 * 1.33, "\ufdd0'y":text_size__349140 * 0.85, "\ufdd0'font-size":text_size__349140}), c2_cljs_examples.space_pie.title_case.call(null, name__349138)], true)], true)
  };
  var co__6313__auto____349161 = function() {
    var co__6262__auto____349160 = new reflex.core.ComputedObservable(null, true, function() {
      return cljs.core.PersistentVector.fromArray(["\ufdd0'div#vis", cljs.core.PersistentVector.fromArray(["\ufdd0'style", cljs.core.ObjMap.fromObject(["\ufdd0'type"], {"\ufdd0'type":"text/css"}), c2_cljs_examples.space_pie.style], true), cljs.core.PersistentVector.fromArray(["\ufdd0'svg#main", cljs.core.ObjMap.fromObject(["\ufdd0'style"], {"\ufdd0'style":cljs.core.ObjMap.fromObject(["\ufdd0'display", "\ufdd0'margin", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'display":"block", "\ufdd0'margin":"auto", 
      "\ufdd0'width":width__349111, "\ufdd0'height":group_height__349117 * cljs.core.count.call(null, c2_cljs_examples.space_pie.charts)})}), function() {
        var iter__2458__auto____349159 = function iter__349147(s__349148) {
          return new cljs.core.LazySeq(null, false, function() {
            var s__349148__349154 = s__349148;
            while(true) {
              if(cljs.core.seq.call(null, s__349148__349154)) {
                var vec__349155__349156 = cljs.core.first.call(null, s__349148__349154);
                var i__349157 = cljs.core.nth.call(null, vec__349155__349156, 0, null);
                var data__349158 = cljs.core.nth.call(null, vec__349155__349156, 1, null);
                return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'g.figure", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([0, i__349157 * group_height__349117], true))}), cljs.core.PersistentVector.fromArray(["\ufdd0'text.title", cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'y", "\ufdd0'font-size"], {"\ufdd0'x":margin__349113, "\ufdd0'y":title_size__349116 + margin__349113 / 4, 
                "\ufdd0'font-size":title_size__349116}), (new cljs.core.Keyword("\ufdd0'name")).call(null, data__349158)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([0, margin__349113 + title_size__349116], true))}), cljs.core.PersistentVector.fromArray(["\ufdd0'g.chart", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":[cljs.core.str(c2.svg.translate.call(null, 
                cljs.core.PersistentVector.fromArray([half_pie__349114, half_pie__349114], true))), cljs.core.str(c2.svg.rotate.call(null, c2_cljs_examples.space_pie.deg.call(null, c2.maths.Tau / 4 * -1)))].join("")}), c2.core.unify.call(null, make_slices__349118.call(null, data__349158), __GT_slice__349130)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.legend", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([pie_width__349115, 
                0], true))}), c2.core.unify.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, make_slices__349118.call(null, data__349158)), cljs.core.partial.call(null, __GT_legend__349146, cljs.core.count.call(null, make_slices__349118.call(null, data__349158))))], true)], true)], true), iter__349147.call(null, cljs.core.rest.call(null, s__349148__349154)))
              }else {
                return null
              }
              break
            }
          }, null)
        };
        return iter__2458__auto____349159.call(null, cljs.core.map.call(null, cljs.core.vector, cljs.core.range.call(null), c2_cljs_examples.space_pie.charts))
      }()], true)], true)
    }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
    cljs.core.deref.call(null, co__6262__auto____349160);
    return co__6262__auto____349160
  }();
  var $el__6314__auto____349162 = c2.dom.__GT_dom.call(null, "#vis");
  singult.core.merge_BANG_.call(null, $el__6314__auto____349162, cljs.core.deref.call(null, co__6313__auto____349161));
  cljs.core.add_watch.call(null, co__6313__auto____349161, "\ufdd0'update-dom", function() {
    return singult.core.merge_BANG_.call(null, $el__6314__auto____349162, cljs.core.deref.call(null, co__6313__auto____349161))
  });
  return co__6313__auto____349161
};
goog.provide("c2.scale");
goog.require("cljs.core");
goog.require("c2.maths");
goog.require("c2.maths");
goog.require("c2.maths");
c2.scale.IInvertable = {};
c2.scale.invert = function invert(scale) {
  if(function() {
    var and__3822__auto____9155 = scale;
    if(and__3822__auto____9155) {
      return scale.c2$scale$IInvertable$invert$arity$1
    }else {
      return and__3822__auto____9155
    }
  }()) {
    return scale.c2$scale$IInvertable$invert$arity$1(scale)
  }else {
    var x__2359__auto____9156 = scale == null ? null : scale;
    return function() {
      var or__3824__auto____9157 = c2.scale.invert[goog.typeOf(x__2359__auto____9156)];
      if(or__3824__auto____9157) {
        return or__3824__auto____9157
      }else {
        var or__3824__auto____9158 = c2.scale.invert["_"];
        if(or__3824__auto____9158) {
          return or__3824__auto____9158
        }else {
          throw cljs.core.missing_protocol.call(null, "IInvertable.invert", scale);
        }
      }
    }().call(null, scale)
  }
};
c2.scale._linear = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054859;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
c2.scale._linear.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2314__auto__) {
  var this__9164 = this;
  var h__2188__auto____9165 = this__9164.__hash;
  if(!(h__2188__auto____9165 == null)) {
    return h__2188__auto____9165
  }else {
    var h__2188__auto____9166 = cljs.core.hash_imap.call(null, this__2314__auto__);
    this__9164.__hash = h__2188__auto____9166;
    return h__2188__auto____9166
  }
};
c2.scale._linear.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2319__auto__, k__2320__auto__) {
  var this__9167 = this;
  return this__2319__auto__.cljs$core$ILookup$_lookup$arity$3(this__2319__auto__, k__2320__auto__, null)
};
c2.scale._linear.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2321__auto__, k9160, else__2322__auto__) {
  var this__9168 = this;
  if(k9160 === "\ufdd0'domain") {
    return this__9168.domain
  }else {
    if(k9160 === "\ufdd0'range") {
      return this__9168.range
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__9168.__extmap, k9160, else__2322__auto__)
      }else {
        return null
      }
    }
  }
};
c2.scale._linear.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2326__auto__, k__2327__auto__, G__9159) {
  var this__9169 = this;
  var pred__9170__9173 = cljs.core.identical_QMARK_;
  var expr__9171__9174 = k__2327__auto__;
  if(pred__9170__9173.call(null, "\ufdd0'domain", expr__9171__9174)) {
    return new c2.scale._linear(G__9159, this__9169.range, this__9169.__meta, this__9169.__extmap, null)
  }else {
    if(pred__9170__9173.call(null, "\ufdd0'range", expr__9171__9174)) {
      return new c2.scale._linear(this__9169.domain, G__9159, this__9169.__meta, this__9169.__extmap, null)
    }else {
      return new c2.scale._linear(this__9169.domain, this__9169.range, this__9169.__meta, cljs.core.assoc.call(null, this__9169.__extmap, k__2327__auto__, G__9159), null)
    }
  }
};
c2.scale._linear.prototype.call = function(this_sym9175, x) {
  var this__9176 = this;
  var this_sym9175__9177 = this;
  var ___9178 = this_sym9175__9177;
  var domain_length__9179 = cljs.core.last.call(null, this__9176.domain) - cljs.core.first.call(null, this__9176.domain);
  var range_length__9180 = cljs.core.last.call(null, this__9176.range) - cljs.core.first.call(null, this__9176.range);
  return cljs.core.first.call(null, this__9176.range) + range_length__9180 * ((x - cljs.core.first.call(null, this__9176.domain)) / domain_length__9179)
};
c2.scale._linear.prototype.apply = function(this_sym9162, args9163) {
  var this__9181 = this;
  return this_sym9162.call.apply(this_sym9162, [this_sym9162].concat(args9163.slice()))
};
c2.scale._linear.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2324__auto__, entry__2325__auto__) {
  var this__9182 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2325__auto__)) {
    return this__2324__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2324__auto__, cljs.core._nth.call(null, entry__2325__auto__, 0), cljs.core._nth.call(null, entry__2325__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2324__auto__, entry__2325__auto__)
  }
};
c2.scale._linear.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2331__auto__) {
  var this__9183 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__9183.domain), cljs.core.vector.call(null, "\ufdd0'range", this__9183.range)], true), this__9183.__extmap))
};
c2.scale._linear.prototype.c2$scale$IInvertable$ = true;
c2.scale._linear.prototype.c2$scale$IInvertable$invert$arity$1 = function(this$) {
  var this__9184 = this;
  return cljs.core.assoc.call(null, this$, "\ufdd0'domain", this__9184.range, "\ufdd0'range", this__9184.domain)
};
c2.scale._linear.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2333__auto__, opts__2334__auto__) {
  var this__9185 = this;
  var pr_pair__2335__auto____9186 = function(keyval__2336__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2334__auto__, keyval__2336__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2335__auto____9186, [cljs.core.str("#"), cljs.core.str("_linear"), cljs.core.str("{")].join(""), ", ", "}", opts__2334__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__9185.domain), cljs.core.vector.call(null, "\ufdd0'range", this__9185.range)], true), this__9185.__extmap))
};
c2.scale._linear.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2323__auto__) {
  var this__9187 = this;
  return 2 + cljs.core.count.call(null, this__9187.__extmap)
};
c2.scale._linear.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2315__auto__, other__2316__auto__) {
  var this__9188 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____9189 = other__2316__auto__;
    if(cljs.core.truth_(and__3822__auto____9189)) {
      var and__3822__auto____9190 = this__2315__auto__.constructor === other__2316__auto__.constructor;
      if(and__3822__auto____9190) {
        return cljs.core.equiv_map.call(null, this__2315__auto__, other__2316__auto__)
      }else {
        return and__3822__auto____9190
      }
    }else {
      return and__3822__auto____9189
    }
  }())) {
    return true
  }else {
    return false
  }
};
c2.scale._linear.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2318__auto__, G__9159) {
  var this__9191 = this;
  return new c2.scale._linear(this__9191.domain, this__9191.range, G__9159, this__9191.__extmap, this__9191.__hash)
};
c2.scale._linear.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2317__auto__) {
  var this__9192 = this;
  return this__9192.__meta
};
c2.scale._linear.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2328__auto__, k__2329__auto__) {
  var this__9193 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'domain", "\ufdd0'range"]), k__2329__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2328__auto__), this__9193.__meta), k__2329__auto__)
  }else {
    return new c2.scale._linear(this__9193.domain, this__9193.range, this__9193.__meta, this__9193.__hash, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__9193.__extmap, k__2329__auto__)), null)
  }
};
c2.scale._linear.cljs$lang$type = true;
c2.scale._linear.cljs$lang$ctorPrSeq = function(this__2353__auto__) {
  return cljs.core.list.call(null, "c2.scale/_linear")
};
c2.scale.__GT__linear = function __GT__linear(domain, range) {
  return new c2.scale._linear(domain, range)
};
c2.scale.map__GT__linear = function map__GT__linear(G__9161) {
  return new c2.scale._linear((new cljs.core.Keyword("\ufdd0'domain")).call(null, G__9161), (new cljs.core.Keyword("\ufdd0'range")).call(null, G__9161), null, cljs.core.dissoc.call(null, G__9161, "\ufdd0'domain", "\ufdd0'range"))
};
c2.scale._linear;
c2.scale.linear = function() {
  var linear__delegate = function(kwargs) {
    return c2.scale.map__GT__linear.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'domain", "\ufdd0'range"], {"\ufdd0'domain":cljs.core.PersistentVector.fromArray([0, 1], true), "\ufdd0'range":cljs.core.PersistentVector.fromArray([0, 1], true)}), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)))
  };
  var linear = function(var_args) {
    var kwargs = null;
    if(goog.isDef(var_args)) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return linear__delegate.call(this, kwargs)
  };
  linear.cljs$lang$maxFixedArity = 0;
  linear.cljs$lang$applyTo = function(arglist__9194) {
    var kwargs = cljs.core.seq(arglist__9194);
    return linear__delegate(kwargs)
  };
  linear.cljs$lang$arity$variadic = linear__delegate;
  return linear
}();
c2.scale._power = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054859;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
c2.scale._power.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2314__auto__) {
  var this__9200 = this;
  var h__2188__auto____9201 = this__9200.__hash;
  if(!(h__2188__auto____9201 == null)) {
    return h__2188__auto____9201
  }else {
    var h__2188__auto____9202 = cljs.core.hash_imap.call(null, this__2314__auto__);
    this__9200.__hash = h__2188__auto____9202;
    return h__2188__auto____9202
  }
};
c2.scale._power.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2319__auto__, k__2320__auto__) {
  var this__9203 = this;
  return this__2319__auto__.cljs$core$ILookup$_lookup$arity$3(this__2319__auto__, k__2320__auto__, null)
};
c2.scale._power.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2321__auto__, k9196, else__2322__auto__) {
  var this__9204 = this;
  if(k9196 === "\ufdd0'domain") {
    return this__9204.domain
  }else {
    if(k9196 === "\ufdd0'range") {
      return this__9204.range
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__9204.__extmap, k9196, else__2322__auto__)
      }else {
        return null
      }
    }
  }
};
c2.scale._power.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2326__auto__, k__2327__auto__, G__9195) {
  var this__9205 = this;
  var pred__9206__9209 = cljs.core.identical_QMARK_;
  var expr__9207__9210 = k__2327__auto__;
  if(pred__9206__9209.call(null, "\ufdd0'domain", expr__9207__9210)) {
    return new c2.scale._power(G__9195, this__9205.range, this__9205.__meta, this__9205.__extmap, null)
  }else {
    if(pred__9206__9209.call(null, "\ufdd0'range", expr__9207__9210)) {
      return new c2.scale._power(this__9205.domain, G__9195, this__9205.__meta, this__9205.__extmap, null)
    }else {
      return new c2.scale._power(this__9205.domain, this__9205.range, this__9205.__meta, cljs.core.assoc.call(null, this__9205.__extmap, k__2327__auto__, G__9195), null)
    }
  }
};
c2.scale._power.prototype.call = function(this_sym9211, x) {
  var this__9212 = this;
  var this_sym9211__9213 = this;
  var ___9214 = this_sym9211__9213;
  return cljs.core.comp.call(null, c2.scale.linear.call(null, "\ufdd0'domain", cljs.core.map.call(null, c2.maths.expt, this__9212.domain), "\ufdd0'range", this__9212.range), c2.maths.expt).call(null, x)
};
c2.scale._power.prototype.apply = function(this_sym9198, args9199) {
  var this__9215 = this;
  return this_sym9198.call.apply(this_sym9198, [this_sym9198].concat(args9199.slice()))
};
c2.scale._power.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2324__auto__, entry__2325__auto__) {
  var this__9216 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2325__auto__)) {
    return this__2324__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2324__auto__, cljs.core._nth.call(null, entry__2325__auto__, 0), cljs.core._nth.call(null, entry__2325__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2324__auto__, entry__2325__auto__)
  }
};
c2.scale._power.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2331__auto__) {
  var this__9217 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__9217.domain), cljs.core.vector.call(null, "\ufdd0'range", this__9217.range)], true), this__9217.__extmap))
};
c2.scale._power.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2333__auto__, opts__2334__auto__) {
  var this__9218 = this;
  var pr_pair__2335__auto____9219 = function(keyval__2336__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2334__auto__, keyval__2336__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2335__auto____9219, [cljs.core.str("#"), cljs.core.str("_power"), cljs.core.str("{")].join(""), ", ", "}", opts__2334__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__9218.domain), cljs.core.vector.call(null, "\ufdd0'range", this__9218.range)], true), this__9218.__extmap))
};
c2.scale._power.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2323__auto__) {
  var this__9220 = this;
  return 2 + cljs.core.count.call(null, this__9220.__extmap)
};
c2.scale._power.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2315__auto__, other__2316__auto__) {
  var this__9221 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____9222 = other__2316__auto__;
    if(cljs.core.truth_(and__3822__auto____9222)) {
      var and__3822__auto____9223 = this__2315__auto__.constructor === other__2316__auto__.constructor;
      if(and__3822__auto____9223) {
        return cljs.core.equiv_map.call(null, this__2315__auto__, other__2316__auto__)
      }else {
        return and__3822__auto____9223
      }
    }else {
      return and__3822__auto____9222
    }
  }())) {
    return true
  }else {
    return false
  }
};
c2.scale._power.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2318__auto__, G__9195) {
  var this__9224 = this;
  return new c2.scale._power(this__9224.domain, this__9224.range, G__9195, this__9224.__extmap, this__9224.__hash)
};
c2.scale._power.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2317__auto__) {
  var this__9225 = this;
  return this__9225.__meta
};
c2.scale._power.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2328__auto__, k__2329__auto__) {
  var this__9226 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'domain", "\ufdd0'range"]), k__2329__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2328__auto__), this__9226.__meta), k__2329__auto__)
  }else {
    return new c2.scale._power(this__9226.domain, this__9226.range, this__9226.__meta, this__9226.__hash, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__9226.__extmap, k__2329__auto__)), null)
  }
};
c2.scale._power.cljs$lang$type = true;
c2.scale._power.cljs$lang$ctorPrSeq = function(this__2353__auto__) {
  return cljs.core.list.call(null, "c2.scale/_power")
};
c2.scale.__GT__power = function __GT__power(domain, range) {
  return new c2.scale._power(domain, range)
};
c2.scale.map__GT__power = function map__GT__power(G__9197) {
  return new c2.scale._power((new cljs.core.Keyword("\ufdd0'domain")).call(null, G__9197), (new cljs.core.Keyword("\ufdd0'range")).call(null, G__9197), null, cljs.core.dissoc.call(null, G__9197, "\ufdd0'domain", "\ufdd0'range"))
};
c2.scale._power;
c2.scale.power = function() {
  var power__delegate = function(kwargs) {
    return c2.scale.map__GT__power.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'domain", "\ufdd0'range"], {"\ufdd0'domain":cljs.core.PersistentVector.fromArray([0, 1], true), "\ufdd0'range":cljs.core.PersistentVector.fromArray([0, 1], true)}), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)))
  };
  var power = function(var_args) {
    var kwargs = null;
    if(goog.isDef(var_args)) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return power__delegate.call(this, kwargs)
  };
  power.cljs$lang$maxFixedArity = 0;
  power.cljs$lang$applyTo = function(arglist__9227) {
    var kwargs = cljs.core.seq(arglist__9227);
    return power__delegate(kwargs)
  };
  power.cljs$lang$arity$variadic = power__delegate;
  return power
}();
c2.scale._log = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054859;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
c2.scale._log.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2314__auto__) {
  var this__9233 = this;
  var h__2188__auto____9234 = this__9233.__hash;
  if(!(h__2188__auto____9234 == null)) {
    return h__2188__auto____9234
  }else {
    var h__2188__auto____9235 = cljs.core.hash_imap.call(null, this__2314__auto__);
    this__9233.__hash = h__2188__auto____9235;
    return h__2188__auto____9235
  }
};
c2.scale._log.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2319__auto__, k__2320__auto__) {
  var this__9236 = this;
  return this__2319__auto__.cljs$core$ILookup$_lookup$arity$3(this__2319__auto__, k__2320__auto__, null)
};
c2.scale._log.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2321__auto__, k9229, else__2322__auto__) {
  var this__9237 = this;
  if(k9229 === "\ufdd0'domain") {
    return this__9237.domain
  }else {
    if(k9229 === "\ufdd0'range") {
      return this__9237.range
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__9237.__extmap, k9229, else__2322__auto__)
      }else {
        return null
      }
    }
  }
};
c2.scale._log.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2326__auto__, k__2327__auto__, G__9228) {
  var this__9238 = this;
  var pred__9239__9242 = cljs.core.identical_QMARK_;
  var expr__9240__9243 = k__2327__auto__;
  if(pred__9239__9242.call(null, "\ufdd0'domain", expr__9240__9243)) {
    return new c2.scale._log(G__9228, this__9238.range, this__9238.__meta, this__9238.__extmap, null)
  }else {
    if(pred__9239__9242.call(null, "\ufdd0'range", expr__9240__9243)) {
      return new c2.scale._log(this__9238.domain, G__9228, this__9238.__meta, this__9238.__extmap, null)
    }else {
      return new c2.scale._log(this__9238.domain, this__9238.range, this__9238.__meta, cljs.core.assoc.call(null, this__9238.__extmap, k__2327__auto__, G__9228), null)
    }
  }
};
c2.scale._log.prototype.call = function(this_sym9244, x) {
  var this__9245 = this;
  var this_sym9244__9246 = this;
  var ___9247 = this_sym9244__9246;
  return cljs.core.comp.call(null, c2.scale.linear.call(null, "\ufdd0'domain", cljs.core.map.call(null, c2.maths.log, this__9245.domain), "\ufdd0'range", this__9245.range), c2.maths.log).call(null, x)
};
c2.scale._log.prototype.apply = function(this_sym9231, args9232) {
  var this__9248 = this;
  return this_sym9231.call.apply(this_sym9231, [this_sym9231].concat(args9232.slice()))
};
c2.scale._log.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2324__auto__, entry__2325__auto__) {
  var this__9249 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2325__auto__)) {
    return this__2324__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2324__auto__, cljs.core._nth.call(null, entry__2325__auto__, 0), cljs.core._nth.call(null, entry__2325__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2324__auto__, entry__2325__auto__)
  }
};
c2.scale._log.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2331__auto__) {
  var this__9250 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__9250.domain), cljs.core.vector.call(null, "\ufdd0'range", this__9250.range)], true), this__9250.__extmap))
};
c2.scale._log.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2333__auto__, opts__2334__auto__) {
  var this__9251 = this;
  var pr_pair__2335__auto____9252 = function(keyval__2336__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2334__auto__, keyval__2336__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2335__auto____9252, [cljs.core.str("#"), cljs.core.str("_log"), cljs.core.str("{")].join(""), ", ", "}", opts__2334__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__9251.domain), cljs.core.vector.call(null, "\ufdd0'range", this__9251.range)], true), this__9251.__extmap))
};
c2.scale._log.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2323__auto__) {
  var this__9253 = this;
  return 2 + cljs.core.count.call(null, this__9253.__extmap)
};
c2.scale._log.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2315__auto__, other__2316__auto__) {
  var this__9254 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____9255 = other__2316__auto__;
    if(cljs.core.truth_(and__3822__auto____9255)) {
      var and__3822__auto____9256 = this__2315__auto__.constructor === other__2316__auto__.constructor;
      if(and__3822__auto____9256) {
        return cljs.core.equiv_map.call(null, this__2315__auto__, other__2316__auto__)
      }else {
        return and__3822__auto____9256
      }
    }else {
      return and__3822__auto____9255
    }
  }())) {
    return true
  }else {
    return false
  }
};
c2.scale._log.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2318__auto__, G__9228) {
  var this__9257 = this;
  return new c2.scale._log(this__9257.domain, this__9257.range, G__9228, this__9257.__extmap, this__9257.__hash)
};
c2.scale._log.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2317__auto__) {
  var this__9258 = this;
  return this__9258.__meta
};
c2.scale._log.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2328__auto__, k__2329__auto__) {
  var this__9259 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'domain", "\ufdd0'range"]), k__2329__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2328__auto__), this__9259.__meta), k__2329__auto__)
  }else {
    return new c2.scale._log(this__9259.domain, this__9259.range, this__9259.__meta, this__9259.__hash, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__9259.__extmap, k__2329__auto__)), null)
  }
};
c2.scale._log.cljs$lang$type = true;
c2.scale._log.cljs$lang$ctorPrSeq = function(this__2353__auto__) {
  return cljs.core.list.call(null, "c2.scale/_log")
};
c2.scale.__GT__log = function __GT__log(domain, range) {
  return new c2.scale._log(domain, range)
};
c2.scale.map__GT__log = function map__GT__log(G__9230) {
  return new c2.scale._log((new cljs.core.Keyword("\ufdd0'domain")).call(null, G__9230), (new cljs.core.Keyword("\ufdd0'range")).call(null, G__9230), null, cljs.core.dissoc.call(null, G__9230, "\ufdd0'domain", "\ufdd0'range"))
};
c2.scale._log;
c2.scale.log = function() {
  var log__delegate = function(kwargs) {
    return c2.scale.map__GT__log.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'domain", "\ufdd0'range"], {"\ufdd0'domain":cljs.core.PersistentVector.fromArray([1, 10], true), "\ufdd0'range":cljs.core.PersistentVector.fromArray([0, 1], true)}), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)))
  };
  var log = function(var_args) {
    var kwargs = null;
    if(goog.isDef(var_args)) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, kwargs)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__9260) {
    var kwargs = cljs.core.seq(arglist__9260);
    return log__delegate(kwargs)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
goog.provide("c2_cljs_examples.boxplot");
goog.require("cljs.core");
goog.require("c2.maths");
goog.require("c2.maths");
goog.require("c2.svg");
goog.require("c2.scale");
goog.require("c2.event");
goog.require("c2.core");
c2_cljs_examples.boxplot.crisp = function crisp(shape_attrs) {
  return cljs.core.assoc.call(null, shape_attrs, "\ufdd0'shape-rendering", "crispEdges")
};
c2_cljs_examples.boxplot.boxplot = function boxplot() {
  var height__339623 = 500;
  var width__339624 = 960;
  var group_width__339625 = 30;
  var box_width__339626 = 17;
  var half_box_width__339627 = box_width__339626 / 2;
  var bins__339628 = cljs.core.PersistentVector.fromArray(["\ufdd0'q10", "\ufdd0'q15", "\ufdd0'q25", "\ufdd0'median", "\ufdd0'q75", "\ufdd0'q85", "\ufdd0'q90"], true);
  var data__339629 = cljs.core.repeatedly.call(null, cljs.core.quot.call(null, width__339624, group_width__339625), function() {
    return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, cljs.core.vector, bins__339628, cljs.core.sort.call(null, cljs.core.take.call(null, cljs.core.count.call(null, bins__339628), cljs.core.repeatedly.call(null, cljs.core.rand)))))
  });
  var scale__339630 = c2.scale.linear.call(null, "\ufdd0'domain", c2.maths.extent.call(null, cljs.core.flatten.call(null, cljs.core.map.call(null, cljs.core.vals, data__339629))), "\ufdd0'range", cljs.core.PersistentVector.fromArray([height__339623 - 1, 0], true));
  var box_width_line__339631 = function(y) {
    return cljs.core.PersistentVector.fromArray(["\ufdd0'line", c2_cljs_examples.boxplot.crisp.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'x1", "\ufdd0'x2", "\ufdd0'y1", "\ufdd0'y2"], {"\ufdd0'x1":0, "\ufdd0'x2":box_width__339626, "\ufdd0'y1":y, "\ufdd0'y2":y}))], true)
  };
  var co__6313__auto____339645 = function() {
    var co__6262__auto____339644 = new reflex.core.ComputedObservable(null, true, function() {
      return cljs.core.PersistentVector.fromArray(["\ufdd0'div#vis", cljs.core.PersistentVector.fromArray(["\ufdd0'style", cljs.core.ObjMap.fromObject(["\ufdd0'type"], {"\ufdd0'type":"text/css"}), [cljs.core.str("body { background-color: #222222 }"), cljs.core.str(".box { fill: #222222; stroke: #cfcfcf }"), cljs.core.str("line { stroke: #cfcfcf }"), cljs.core.str("line.range { stroke-dasharray: 5,5 }")].join("")], true), cljs.core.PersistentVector.fromArray(["\ufdd0'svg#main", cljs.core.ObjMap.fromObject(["\ufdd0'style"], 
      {"\ufdd0'style":cljs.core.ObjMap.fromObject(["\ufdd0'display", "\ufdd0'margin", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'display":"block", "\ufdd0'margin":"auto", "\ufdd0'width":width__339624, "\ufdd0'height":height__339623})}), c2.core.unify.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, data__339629), function(p__339632) {
        var vec__339633__339635 = p__339632;
        var i__339636 = cljs.core.nth.call(null, vec__339633__339635, 0, null);
        var map__339634__339637 = cljs.core.nth.call(null, vec__339633__339635, 1, null);
        var map__339634__339638 = cljs.core.seq_QMARK_.call(null, map__339634__339637) ? cljs.core.apply.call(null, cljs.core.hash_map, map__339634__339637) : map__339634__339637;
        var q90__339639 = cljs.core._lookup.call(null, map__339634__339638, "\ufdd0'q90", null);
        var q75__339640 = cljs.core._lookup.call(null, map__339634__339638, "\ufdd0'q75", null);
        var median__339641 = cljs.core._lookup.call(null, map__339634__339638, "\ufdd0'median", null);
        var q25__339642 = cljs.core._lookup.call(null, map__339634__339638, "\ufdd0'q25", null);
        var q10__339643 = cljs.core._lookup.call(null, map__339634__339638, "\ufdd0'q10", null);
        return cljs.core.PersistentVector.fromArray(["\ufdd0'g.boxplot", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([i__339636 * group_width__339625 + 1, 0], true))}), cljs.core.PersistentVector.fromArray(["\ufdd0'line.range", c2_cljs_examples.boxplot.crisp.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'x1", "\ufdd0'x2", "\ufdd0'y1", "\ufdd0'y2"], {"\ufdd0'x1":half_box_width__339627, "\ufdd0'x2":half_box_width__339627, 
        "\ufdd0'y1":scale__339630.call(null, q90__339639), "\ufdd0'y2":scale__339630.call(null, q10__339643)}))], true), box_width_line__339631.call(null, scale__339630.call(null, q10__339643)), box_width_line__339631.call(null, scale__339630.call(null, q90__339639)), cljs.core.PersistentVector.fromArray(["\ufdd0'rect.box", c2_cljs_examples.boxplot.crisp.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'y", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":0, "\ufdd0'y":scale__339630.call(null, 
        q75__339640), "\ufdd0'width":box_width__339626, "\ufdd0'height":scale__339630.call(null, q25__339642) - scale__339630.call(null, q75__339640)}))], true), box_width_line__339631.call(null, scale__339630.call(null, median__339641))], true)
      })], true)], true)
    }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
    cljs.core.deref.call(null, co__6262__auto____339644);
    return co__6262__auto____339644
  }();
  var $el__6314__auto____339646 = c2.dom.__GT_dom.call(null, "#vis");
  singult.core.merge_BANG_.call(null, $el__6314__auto____339646, cljs.core.deref.call(null, co__6313__auto____339645));
  cljs.core.add_watch.call(null, co__6313__auto____339645, "\ufdd0'update-dom", function() {
    return singult.core.merge_BANG_.call(null, $el__6314__auto____339646, cljs.core.deref.call(null, co__6313__auto____339645))
  });
  return co__6313__auto____339645
};
goog.provide("c2_cljs_examples.bullet");
goog.require("cljs.core");
goog.require("c2.svg");
goog.require("c2.scale");
goog.require("c2.event");
goog.require("c2.core");
c2_cljs_examples.bullet.half = function half(x) {
  return x / 2
};
c2_cljs_examples.bullet.crisp = function crisp(shape_attrs) {
  return cljs.core.assoc.call(null, shape_attrs, "\ufdd0'shape-rendering", "crispEdges")
};
c2_cljs_examples.bullet.bullet = function bullet() {
  var bar_width__353900 = 780;
  var group_height__353901 = 55;
  var range_height__353902 = 40;
  var group_gutter__353903 = c2_cljs_examples.bullet.half.call(null, group_height__353901 - range_height__353902);
  var measurement_height__353904 = 15;
  var marker_height__353905 = 20;
  var marker_width__353906 = 2;
  var label_margin__353907 = 150;
  var title_size__353908 = 18;
  var subtitle_size__353909 = 12;
  var text_gutter__353910 = 8;
  var style__353911 = [cljs.core.str("body { background-color: #222222 }"), cljs.core.str(".bullet { font: "), cljs.core.str(subtitle_size__353909), cljs.core.str('px "Helvetica Neue",\n                                                    Helvetica, sans-serif }'), cljs.core.str(".bullet .label { fill: white; text-anchor: end }"), cljs.core.str(".bullet .marker { stroke: black; stroke-width: 2px }"), cljs.core.str(".bullet .tick line { stroke: #666; stroke-width: .5px }"), cljs.core.str(".bullet .range.s0 { fill: #eee }"), 
  cljs.core.str(".bullet .range.s1 { fill: #cacaca }"), cljs.core.str(".bullet .range.s2 { fill: #a3a3a3 }"), cljs.core.str(".bullet .measurement.s0 { fill: #9fb6dc }"), cljs.core.str(".bullet .measurement.s1 { fill: steelblue }"), cljs.core.str(".bullet .title { font-size: "), cljs.core.str(title_size__353908), cljs.core.str("px; font-weight: bold }"), cljs.core.str(".bullet .subtitle { fill: #999 }")].join("");
  var data__353912 = cljs.core.PersistentVector.fromArray([cljs.core.ObjMap.fromObject(["\ufdd0'metric", "\ufdd0'units", "\ufdd0'ranges", "\ufdd0'measurements", "\ufdd0'markers"], {"\ufdd0'metric":"Revenue", "\ufdd0'units":"USD in thousands", "\ufdd0'ranges":cljs.core.PersistentVector.fromArray([150, 225, 300], true), "\ufdd0'measurements":cljs.core.PersistentVector.fromArray([220, 270], true), "\ufdd0'markers":cljs.core.PersistentVector.fromArray([250], true)}), cljs.core.ObjMap.fromObject(["\ufdd0'metric", 
  "\ufdd0'units", "\ufdd0'ranges", "\ufdd0'measurements", "\ufdd0'markers"], {"\ufdd0'metric":"Profit", "\ufdd0'units":"%", "\ufdd0'ranges":cljs.core.PersistentVector.fromArray([20, 25, 30], true), "\ufdd0'measurements":cljs.core.PersistentVector.fromArray([21, 23], true), "\ufdd0'markers":cljs.core.PersistentVector.fromArray([26], true)}), cljs.core.ObjMap.fromObject(["\ufdd0'metric", "\ufdd0'units", "\ufdd0'ranges", "\ufdd0'measurements", "\ufdd0'markers"], {"\ufdd0'metric":"Order Size", "\ufdd0'units":"USD average", 
  "\ufdd0'ranges":cljs.core.PersistentVector.fromArray([350, 500, 600], true), "\ufdd0'measurements":cljs.core.PersistentVector.fromArray([100, 320], true), "\ufdd0'markers":cljs.core.PersistentVector.fromArray([550], true)}), cljs.core.ObjMap.fromObject(["\ufdd0'metric", "\ufdd0'units", "\ufdd0'ranges", "\ufdd0'measurements", "\ufdd0'markers"], {"\ufdd0'metric":"New Customers", "\ufdd0'units":"count", "\ufdd0'ranges":cljs.core.PersistentVector.fromArray([1400, 2E3, 2500], true), "\ufdd0'measurements":cljs.core.PersistentVector.fromArray([1E3, 
  1650], true), "\ufdd0'markers":cljs.core.PersistentVector.fromArray([2100], true)}), cljs.core.ObjMap.fromObject(["\ufdd0'metric", "\ufdd0'units", "\ufdd0'ranges", "\ufdd0'measurements", "\ufdd0'markers"], {"\ufdd0'metric":"Satisfaction", "\ufdd0'units":"out of 5", "\ufdd0'ranges":cljs.core.PersistentVector.fromArray([3.5, 4.25, 5], true), "\ufdd0'measurements":cljs.core.PersistentVector.fromArray([3.2, 4.7], true), "\ufdd0'markers":cljs.core.PersistentVector.fromArray([4.4], true)})], true);
  var co__6313__auto____353967 = function() {
    var co__6262__auto____353966 = new reflex.core.ComputedObservable(null, true, function() {
      return cljs.core.PersistentVector.fromArray(["\ufdd0'div#vis", cljs.core.PersistentVector.fromArray(["\ufdd0'style", cljs.core.ObjMap.fromObject(["\ufdd0'type"], {"\ufdd0'type":"text/css"}), style__353911], true), cljs.core.PersistentVector.fromArray(["\ufdd0'svg#main", cljs.core.ObjMap.fromObject(["\ufdd0'style"], {"\ufdd0'style":cljs.core.ObjMap.fromObject(["\ufdd0'display", "\ufdd0'margin", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'display":"block", "\ufdd0'margin":"auto", "\ufdd0'width":960, 
      "\ufdd0'height":cljs.core.count.call(null, data__353912) * group_height__353901})}), c2.core.unify.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, data__353912), function(p__353913) {
        var vec__353914__353916 = p__353913;
        var i__353917 = cljs.core.nth.call(null, vec__353914__353916, 0, null);
        var map__353915__353918 = cljs.core.nth.call(null, vec__353914__353916, 1, null);
        var map__353915__353919 = cljs.core.seq_QMARK_.call(null, map__353915__353918) ? cljs.core.apply.call(null, cljs.core.hash_map, map__353915__353918) : map__353915__353918;
        var markers__353920 = cljs.core._lookup.call(null, map__353915__353919, "\ufdd0'markers", null);
        var measurements__353921 = cljs.core._lookup.call(null, map__353915__353919, "\ufdd0'measurements", null);
        var ranges__353922 = cljs.core._lookup.call(null, map__353915__353919, "\ufdd0'ranges", null);
        var units__353923 = cljs.core._lookup.call(null, map__353915__353919, "\ufdd0'units", null);
        var metric__353924 = cljs.core._lookup.call(null, map__353915__353919, "\ufdd0'metric", null);
        var rightmost__353925 = cljs.core.apply.call(null, cljs.core.max, cljs.core.concat.call(null, ranges__353922, measurements__353921, markers__353920));
        var sc__353926 = c2.scale.linear.call(null, "\ufdd0'domain", cljs.core.PersistentVector.fromArray([0, rightmost__353925], true), "\ufdd0'range", cljs.core.PersistentVector.fromArray([0, bar_width__353900], true));
        return cljs.core.PersistentVector.fromArray(["\ufdd0'g.bullet", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([0, i__353917 * group_height__353901 + group_gutter__353903], true))}), cljs.core.PersistentVector.fromArray(["\ufdd0'g.label", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([label_margin__353907 - text_gutter__353910, 
        title_size__353908], true))}), cljs.core.PersistentVector.fromArray(["\ufdd0'text.title", metric__353924], true), cljs.core.PersistentVector.fromArray(["\ufdd0'text.subtitle", cljs.core.ObjMap.fromObject(["\ufdd0'dy"], {"\ufdd0'dy":"1.2em"}), units__353923], true)], true), cljs.core.PersistentVector.fromArray(["\ufdd0'g.chart", cljs.core.ObjMap.fromObject(["\ufdd0'transform"], {"\ufdd0'transform":c2.svg.translate.call(null, cljs.core.PersistentVector.fromArray([label_margin__353907, 0], true))}), 
        function() {
          var iter__2458__auto____353939 = function iter__353927(s__353928) {
            return new cljs.core.LazySeq(null, false, function() {
              var s__353928__353934 = s__353928;
              while(true) {
                if(cljs.core.seq.call(null, s__353928__353934)) {
                  var vec__353935__353936 = cljs.core.first.call(null, s__353928__353934);
                  var j__353937 = cljs.core.nth.call(null, vec__353935__353936, 0, null);
                  var r__353938 = cljs.core.nth.call(null, vec__353935__353936, 1, null);
                  return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'rect", c2_cljs_examples.bullet.crisp.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'class", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'class":[cljs.core.str("range s"), cljs.core.str(j__353937)].join(""), "\ufdd0'width":sc__353926.call(null, r__353938), "\ufdd0'height":range_height__353902}))], true), iter__353927.call(null, cljs.core.rest.call(null, s__353928__353934)))
                }else {
                  return null
                }
                break
              }
            }, null)
          };
          return iter__2458__auto____353939.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, cljs.core.sort.call(null, cljs.core._GT_, ranges__353922)))
        }(), function() {
          var iter__2458__auto____353952 = function iter__353940(s__353941) {
            return new cljs.core.LazySeq(null, false, function() {
              var s__353941__353947 = s__353941;
              while(true) {
                if(cljs.core.seq.call(null, s__353941__353947)) {
                  var vec__353948__353949 = cljs.core.first.call(null, s__353941__353947);
                  var j__353950 = cljs.core.nth.call(null, vec__353948__353949, 0, null);
                  var m__353951 = cljs.core.nth.call(null, vec__353948__353949, 1, null);
                  return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'rect", c2_cljs_examples.bullet.crisp.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'class", "\ufdd0'width", "\ufdd0'height", "\ufdd0'y"], {"\ufdd0'class":[cljs.core.str("measurement s"), cljs.core.str(j__353950)].join(""), "\ufdd0'width":sc__353926.call(null, m__353951), "\ufdd0'height":measurement_height__353904, "\ufdd0'y":c2_cljs_examples.bullet.half.call(null, range_height__353902 - measurement_height__353904)}))], 
                  true), iter__353940.call(null, cljs.core.rest.call(null, s__353941__353947)))
                }else {
                  return null
                }
                break
              }
            }, null)
          };
          return iter__2458__auto____353952.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, cljs.core.sort.call(null, cljs.core._GT_, measurements__353921)))
        }(), function() {
          var iter__2458__auto____353965 = function iter__353953(s__353954) {
            return new cljs.core.LazySeq(null, false, function() {
              var s__353954__353960 = s__353954;
              while(true) {
                if(cljs.core.seq.call(null, s__353954__353960)) {
                  var vec__353961__353962 = cljs.core.first.call(null, s__353954__353960);
                  var j__353963 = cljs.core.nth.call(null, vec__353961__353962, 0, null);
                  var m__353964 = cljs.core.nth.call(null, vec__353961__353962, 1, null);
                  return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'rect.marker", c2_cljs_examples.bullet.crisp.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'y", "\ufdd0'width", "\ufdd0'height"], {"\ufdd0'x":sc__353926.call(null, m__353964), "\ufdd0'y":c2_cljs_examples.bullet.half.call(null, range_height__353902 - marker_height__353905), "\ufdd0'width":marker_width__353906, "\ufdd0'height":marker_height__353905}))], true), iter__353953.call(null, cljs.core.rest.call(null, 
                  s__353954__353960)))
                }else {
                  return null
                }
                break
              }
            }, null)
          };
          return iter__2458__auto____353965.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, cljs.core.sort.call(null, cljs.core._GT_, markers__353920)))
        }()], true)], true)
      })], true)], true)
    }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY);
    cljs.core.deref.call(null, co__6262__auto____353966);
    return co__6262__auto____353966
  }();
  var $el__6314__auto____353968 = c2.dom.__GT_dom.call(null, "#vis");
  singult.core.merge_BANG_.call(null, $el__6314__auto____353968, cljs.core.deref.call(null, co__6313__auto____353967));
  cljs.core.add_watch.call(null, co__6313__auto____353967, "\ufdd0'update-dom", function() {
    return singult.core.merge_BANG_.call(null, $el__6314__auto____353968, cljs.core.deref.call(null, co__6313__auto____353967))
  });
  return co__6313__auto____353967
};
